import { createRequire as __WEBPACK_EXTERNAL_createRequire } from "node:module";
/******/ var __webpack_modules__ = ({

/***/ 2446:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.issue = exports.issueCommand = void 0;
var os = __importStar(__webpack_require__(857));
var utils_1 = __webpack_require__(426);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
  var cmd = new Command(command, properties, message);
  process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name) {
  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  issueCommand(name, {}, message);
}
exports.issue = issue;
var CMD_STRING = '::';
var Command = /*#__PURE__*/function () {
  function Command(command, properties, message) {
    _classCallCheck(this, Command);
    if (!command) {
      command = 'missing.command';
    }
    this.command = command;
    this.properties = properties;
    this.message = message;
  }
  return _createClass(Command, [{
    key: "toString",
    value: function toString() {
      var cmdStr = CMD_STRING + this.command;
      if (this.properties && Object.keys(this.properties).length > 0) {
        cmdStr += ' ';
        var first = true;
        for (var key in this.properties) {
          if (this.properties.hasOwnProperty(key)) {
            var val = this.properties[key];
            if (val) {
              if (first) {
                first = false;
              } else {
                cmdStr += ',';
              }
              cmdStr += "".concat(key, "=").concat(escapeProperty(val));
            }
          }
        }
      }
      cmdStr += "".concat(CMD_STRING).concat(escapeData(this.message));
      return cmdStr;
    }
  }]);
}();
function escapeData(s) {
  return utils_1.toCommandValue(s).replace(/%/g, '%25').replace(/\r/g, '%0D').replace(/\n/g, '%0A');
}
function escapeProperty(s) {
  return utils_1.toCommandValue(s).replace(/%/g, '%25').replace(/\r/g, '%0D').replace(/\n/g, '%0A').replace(/:/g, '%3A').replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 4984:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var _regeneratorRuntime = (__webpack_require__(453)["default"]);
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
var command_1 = __webpack_require__(2446);
var file_command_1 = __webpack_require__(7813);
var utils_1 = __webpack_require__(426);
var os = __importStar(__webpack_require__(857));
var path = __importStar(__webpack_require__(6928));
var oidc_utils_1 = __webpack_require__(1126);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
  /**
   * A code indicating that the action was successful
   */
  ExitCode[ExitCode["Success"] = 0] = "Success";
  /**
   * A code indicating that the action was a failure
   */
  ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
  var convertedVal = utils_1.toCommandValue(val);
  process.env[name] = convertedVal;
  var filePath = process.env['GITHUB_ENV'] || '';
  if (filePath) {
    return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));
  }
  command_1.issueCommand('set-env', {
    name: name
  }, convertedVal);
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
  command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
  var filePath = process.env['GITHUB_PATH'] || '';
  if (filePath) {
    file_command_1.issueFileCommand('PATH', inputPath);
  } else {
    command_1.issueCommand('add-path', {}, inputPath);
  }
  process.env['PATH'] = "".concat(inputPath).concat(path.delimiter).concat(process.env['PATH']);
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
  var val = process.env["INPUT_".concat(name.replace(/ /g, '_').toUpperCase())] || '';
  if (options && options.required && !val) {
    throw new Error("Input required and not supplied: ".concat(name));
  }
  if (options && options.trimWhitespace === false) {
    return val;
  }
  return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
  var inputs = getInput(name, options).split('\n').filter(function (x) {
    return x !== '';
  });
  if (options && options.trimWhitespace === false) {
    return inputs;
  }
  return inputs.map(function (input) {
    return input.trim();
  });
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
  var trueValue = ['true', 'True', 'TRUE'];
  var falseValue = ['false', 'False', 'FALSE'];
  var val = getInput(name, options);
  if (trueValue.includes(val)) return true;
  if (falseValue.includes(val)) return false;
  throw new TypeError("Input does not meet YAML 1.2 \"Core Schema\" specification: ".concat(name, "\n") + "Support boolean input list: `true | True | TRUE | false | False | FALSE`");
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
  var filePath = process.env['GITHUB_OUTPUT'] || '';
  if (filePath) {
    return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));
  }
  process.stdout.write(os.EOL);
  command_1.issueCommand('set-output', {
    name: name
  }, utils_1.toCommandValue(value));
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
  command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
  process.exitCode = ExitCode.Failure;
  error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
  return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
  command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message) {
  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message) {
  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message) {
  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
  process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
  command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
  command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var result;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          startGroup(name);
          _context.prev = 1;
          _context.next = 4;
          return fn();
        case 4:
          result = _context.sent;
        case 5:
          _context.prev = 5;
          endGroup();
          return _context.finish(5);
        case 8:
          return _context.abrupt("return", result);
        case 9:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[1,, 5, 8]]);
  }));
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
  var filePath = process.env['GITHUB_STATE'] || '';
  if (filePath) {
    return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));
  }
  command_1.issueCommand('save-state', {
    name: name
  }, utils_1.toCommandValue(value));
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
  return process.env["STATE_".concat(name)] || '';
}
exports.getState = getState;
function getIDToken(aud) {
  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return oidc_utils_1.OidcClient.getIDToken(aud);
        case 2:
          return _context2.abrupt("return", _context2.sent);
        case 3:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
}
exports.getIDToken = getIDToken;
/**
 * Summary exports
 */
var summary_1 = __webpack_require__(2195);
Object.defineProperty(exports, "summary", ({
  enumerable: true,
  get: function get() {
    return summary_1.summary;
  }
}));
/**
 * @deprecated use core.summary
 */
var summary_2 = __webpack_require__(2195);
Object.defineProperty(exports, "markdownSummary", ({
  enumerable: true,
  get: function get() {
    return summary_2.markdownSummary;
  }
}));
/**
 * Path exports
 */
var path_utils_1 = __webpack_require__(5308);
Object.defineProperty(exports, "toPosixPath", ({
  enumerable: true,
  get: function get() {
    return path_utils_1.toPosixPath;
  }
}));
Object.defineProperty(exports, "toWin32Path", ({
  enumerable: true,
  get: function get() {
    return path_utils_1.toWin32Path;
  }
}));
Object.defineProperty(exports, "toPlatformPath", ({
  enumerable: true,
  get: function get() {
    return path_utils_1.toPlatformPath;
  }
}));
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 7813:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



// For internal use, subject to change.
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.prepareKeyValueMessage = exports.issueFileCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
var fs = __importStar(__webpack_require__(9896));
var os = __importStar(__webpack_require__(857));
var uuid_1 = __webpack_require__(4985);
var utils_1 = __webpack_require__(426);
function issueFileCommand(command, message) {
  var filePath = process.env["GITHUB_".concat(command)];
  if (!filePath) {
    throw new Error("Unable to find environment variable for file command ".concat(command));
  }
  if (!fs.existsSync(filePath)) {
    throw new Error("Missing file at path: ".concat(filePath));
  }
  fs.appendFileSync(filePath, "".concat(utils_1.toCommandValue(message)).concat(os.EOL), {
    encoding: 'utf8'
  });
}
exports.issueFileCommand = issueFileCommand;
function prepareKeyValueMessage(key, value) {
  var delimiter = "ghadelimiter_".concat(uuid_1.v4());
  var convertedValue = utils_1.toCommandValue(value);
  // These should realistically never happen, but just in case someone finds a
  // way to exploit uuid generation let's not allow keys or values that contain
  // the delimiter.
  if (key.includes(delimiter)) {
    throw new Error("Unexpected input: name should not contain the delimiter \"".concat(delimiter, "\""));
  }
  if (convertedValue.includes(delimiter)) {
    throw new Error("Unexpected input: value should not contain the delimiter \"".concat(delimiter, "\""));
  }
  return "".concat(key, "<<").concat(delimiter).concat(os.EOL).concat(convertedValue).concat(os.EOL).concat(delimiter);
}
exports.prepareKeyValueMessage = prepareKeyValueMessage;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 1126:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var _regeneratorRuntime = (__webpack_require__(453)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.OidcClient = void 0;
var http_client_1 = __webpack_require__(9679);
var auth_1 = __webpack_require__(3525);
var core_1 = __webpack_require__(4984);
var OidcClient = /*#__PURE__*/function () {
  function OidcClient() {
    _classCallCheck(this, OidcClient);
  }
  return _createClass(OidcClient, null, [{
    key: "createHttpClient",
    value: function createHttpClient() {
      var allowRetry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var maxRetry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
      var requestOptions = {
        allowRetries: allowRetry,
        maxRetries: maxRetry
      };
      return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
  }, {
    key: "getRequestToken",
    value: function getRequestToken() {
      var token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
      if (!token) {
        throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
      }
      return token;
    }
  }, {
    key: "getIDTokenUrl",
    value: function getIDTokenUrl() {
      var runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
      if (!runtimeUrl) {
        throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
      }
      return runtimeUrl;
    }
  }, {
    key: "getCall",
    value: function getCall(id_token_url) {
      var _a;
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var httpclient, res, id_token;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              httpclient = OidcClient.createHttpClient();
              _context.next = 3;
              return httpclient.getJson(id_token_url)["catch"](function (error) {
                throw new Error("Failed to get ID Token. \n \n        Error Code : ".concat(error.statusCode, "\n \n        Error Message: ").concat(error.message));
              });
            case 3:
              res = _context.sent;
              id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
              if (id_token) {
                _context.next = 7;
                break;
              }
              throw new Error('Response json body do not have ID Token field');
            case 7:
              return _context.abrupt("return", id_token);
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
    }
  }, {
    key: "getIDToken",
    value: function getIDToken(audience) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var id_token_url, encodedAudience, id_token;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              // New ID Token is requested from action service
              id_token_url = OidcClient.getIDTokenUrl();
              if (audience) {
                encodedAudience = encodeURIComponent(audience);
                id_token_url = "".concat(id_token_url, "&audience=").concat(encodedAudience);
              }
              core_1.debug("ID token url is ".concat(id_token_url));
              _context2.next = 6;
              return OidcClient.getCall(id_token_url);
            case 6:
              id_token = _context2.sent;
              core_1.setSecret(id_token);
              return _context2.abrupt("return", id_token);
            case 11:
              _context2.prev = 11;
              _context2.t0 = _context2["catch"](0);
              throw new Error("Error message: ".concat(_context2.t0.message));
            case 14:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[0, 11]]);
      }));
    }
  }]);
}();
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 5308:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;
var path = __importStar(__webpack_require__(6928));
/**
 * toPosixPath converts the given path to the posix form. On Windows, \\ will be
 * replaced with /.
 *
 * @param pth. Path to transform.
 * @return string Posix path.
 */
function toPosixPath(pth) {
  return pth.replace(/[\\]/g, '/');
}
exports.toPosixPath = toPosixPath;
/**
 * toWin32Path converts the given path to the win32 form. On Linux, / will be
 * replaced with \\.
 *
 * @param pth. Path to transform.
 * @return string Win32 path.
 */
function toWin32Path(pth) {
  return pth.replace(/[/]/g, '\\');
}
exports.toWin32Path = toWin32Path;
/**
 * toPlatformPath converts the given path to a platform-specific path. It does
 * this by replacing instances of / and \ with the platform-specific path
 * separator.
 *
 * @param pth The path to platformize.
 * @return string The platform-specific path.
 */
function toPlatformPath(pth) {
  return pth.replace(/[/\\]/g, path.sep);
}
exports.toPlatformPath = toPlatformPath;
//# sourceMappingURL=path-utils.js.map

/***/ }),

/***/ 2195:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var _slicedToArray = (__webpack_require__(431)["default"]);
var _regeneratorRuntime = (__webpack_require__(453)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;
var os_1 = __webpack_require__(857);
var fs_1 = __webpack_require__(9896);
var _fs_1$promises = fs_1.promises,
  access = _fs_1$promises.access,
  appendFile = _fs_1$promises.appendFile,
  writeFile = _fs_1$promises.writeFile;
exports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
exports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
var Summary = /*#__PURE__*/function () {
  function Summary() {
    _classCallCheck(this, Summary);
    this._buffer = '';
  }
  /**
   * Finds the summary file path from the environment, rejects if env var is not found or file does not exist
   * Also checks r/w permissions.
   *
   * @returns step summary file path
   */
  return _createClass(Summary, [{
    key: "filePath",
    value: function filePath() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var pathFromEnv;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!this._filePath) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", this._filePath);
            case 2:
              pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];
              if (pathFromEnv) {
                _context.next = 5;
                break;
              }
              throw new Error("Unable to find environment variable for $".concat(exports.SUMMARY_ENV_VAR, ". Check if your runtime environment supports job summaries."));
            case 5:
              _context.prev = 5;
              _context.next = 8;
              return access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);
            case 8:
              _context.next = 13;
              break;
            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](5);
              throw new Error("Unable to access summary file: '".concat(pathFromEnv, "'. Check if the file has correct read/write permissions."));
            case 13:
              this._filePath = pathFromEnv;
              return _context.abrupt("return", this._filePath);
            case 15:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[5, 10]]);
      }));
    }
    /**
     * Wraps content in an HTML tag, adding any HTML attributes
     *
     * @param {string} tag HTML tag to wrap
     * @param {string | null} content content within the tag
     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add
     *
     * @returns {string} content wrapped in HTML element
     */
  }, {
    key: "wrap",
    value: function wrap(tag, content) {
      var attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var htmlAttrs = Object.entries(attrs).map(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];
        return " ".concat(key, "=\"").concat(value, "\"");
      }).join('');
      if (!content) {
        return "<".concat(tag).concat(htmlAttrs, ">");
      }
      return "<".concat(tag).concat(htmlAttrs, ">").concat(content, "</").concat(tag, ">");
    }
    /**
     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.
     *
     * @param {SummaryWriteOptions} [options] (optional) options for write operation
     *
     * @returns {Promise<Summary>} summary instance
     */
  }, {
    key: "write",
    value: function write(options) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var overwrite, filePath, writeFunc;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);
              _context2.next = 3;
              return this.filePath();
            case 3:
              filePath = _context2.sent;
              writeFunc = overwrite ? writeFile : appendFile;
              _context2.next = 7;
              return writeFunc(filePath, this._buffer, {
                encoding: 'utf8'
              });
            case 7:
              return _context2.abrupt("return", this.emptyBuffer());
            case 8:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
    }
    /**
     * Clears the summary buffer and wipes the summary file
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "clear",
    value: function clear() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt("return", this.emptyBuffer().write({
                overwrite: true
              }));
            case 1:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
    /**
     * Returns the current summary buffer as a string
     *
     * @returns {string} string of summary buffer
     */
  }, {
    key: "stringify",
    value: function stringify() {
      return this._buffer;
    }
    /**
     * If the summary buffer is empty
     *
     * @returns {boolen} true if the buffer is empty
     */
  }, {
    key: "isEmptyBuffer",
    value: function isEmptyBuffer() {
      return this._buffer.length === 0;
    }
    /**
     * Resets the summary buffer without writing to summary file
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "emptyBuffer",
    value: function emptyBuffer() {
      this._buffer = '';
      return this;
    }
    /**
     * Adds raw text to the summary buffer
     *
     * @param {string} text content to add
     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addRaw",
    value: function addRaw(text) {
      var addEOL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this._buffer += text;
      return addEOL ? this.addEOL() : this;
    }
    /**
     * Adds the operating system-specific end-of-line marker to the buffer
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addEOL",
    value: function addEOL() {
      return this.addRaw(os_1.EOL);
    }
    /**
     * Adds an HTML codeblock to the summary buffer
     *
     * @param {string} code content to render within fenced code block
     * @param {string} lang (optional) language to syntax highlight code
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addCodeBlock",
    value: function addCodeBlock(code, lang) {
      var attrs = Object.assign({}, lang && {
        lang: lang
      });
      var element = this.wrap('pre', this.wrap('code', code), attrs);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML list to the summary buffer
     *
     * @param {string[]} items list of items to render
     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addList",
    value: function addList(items) {
      var _this = this;
      var ordered = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var tag = ordered ? 'ol' : 'ul';
      var listItems = items.map(function (item) {
        return _this.wrap('li', item);
      }).join('');
      var element = this.wrap(tag, listItems);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML table to the summary buffer
     *
     * @param {SummaryTableCell[]} rows table rows
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addTable",
    value: function addTable(rows) {
      var _this2 = this;
      var tableBody = rows.map(function (row) {
        var cells = row.map(function (cell) {
          if (typeof cell === 'string') {
            return _this2.wrap('td', cell);
          }
          var header = cell.header,
            data = cell.data,
            colspan = cell.colspan,
            rowspan = cell.rowspan;
          var tag = header ? 'th' : 'td';
          var attrs = Object.assign(Object.assign({}, colspan && {
            colspan: colspan
          }), rowspan && {
            rowspan: rowspan
          });
          return _this2.wrap(tag, data, attrs);
        }).join('');
        return _this2.wrap('tr', cells);
      }).join('');
      var element = this.wrap('table', tableBody);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds a collapsable HTML details element to the summary buffer
     *
     * @param {string} label text for the closed state
     * @param {string} content collapsable content
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addDetails",
    value: function addDetails(label, content) {
      var element = this.wrap('details', this.wrap('summary', label) + content);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML image tag to the summary buffer
     *
     * @param {string} src path to the image you to embed
     * @param {string} alt text description of the image
     * @param {SummaryImageOptions} options (optional) addition image attributes
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addImage",
    value: function addImage(src, alt, options) {
      var _ref3 = options || {},
        width = _ref3.width,
        height = _ref3.height;
      var attrs = Object.assign(Object.assign({}, width && {
        width: width
      }), height && {
        height: height
      });
      var element = this.wrap('img', null, Object.assign({
        src: src,
        alt: alt
      }, attrs));
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML section heading element
     *
     * @param {string} text heading text
     * @param {number | string} [level=1] (optional) the heading level, default: 1
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addHeading",
    value: function addHeading(text, level) {
      var tag = "h".concat(level);
      var allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag) ? tag : 'h1';
      var element = this.wrap(allowedTag, text);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML thematic break (<hr>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addSeparator",
    value: function addSeparator() {
      var element = this.wrap('hr', null);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML line break (<br>) to the summary buffer
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addBreak",
    value: function addBreak() {
      var element = this.wrap('br', null);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML blockquote to the summary buffer
     *
     * @param {string} text quote text
     * @param {string} cite (optional) citation url
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addQuote",
    value: function addQuote(text, cite) {
      var attrs = Object.assign({}, cite && {
        cite: cite
      });
      var element = this.wrap('blockquote', text, attrs);
      return this.addRaw(element).addEOL();
    }
    /**
     * Adds an HTML anchor tag to the summary buffer
     *
     * @param {string} text link text/content
     * @param {string} href hyperlink
     *
     * @returns {Summary} summary instance
     */
  }, {
    key: "addLink",
    value: function addLink(text, href) {
      var element = this.wrap('a', text, {
        href: href
      });
      return this.addRaw(element).addEOL();
    }
  }]);
}();
var _summary = new Summary();
/**
 * @deprecated use `core.summary`
 */
exports.markdownSummary = _summary;
exports.summary = _summary;
//# sourceMappingURL=summary.js.map

/***/ }),

/***/ 426:
/***/ ((__unused_webpack_module, exports) => {



// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
  if (input === null || input === undefined) {
    return '';
  } else if (typeof input === 'string' || input instanceof String) {
    return input;
  }
  return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
  if (!Object.keys(annotationProperties).length) {
    return {};
  }
  return {
    title: annotationProperties.title,
    file: annotationProperties.file,
    line: annotationProperties.startLine,
    endLine: annotationProperties.endLine,
    col: annotationProperties.startColumn,
    endColumn: annotationProperties.endColumn
  };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 3525:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var _regeneratorRuntime = (__webpack_require__(453)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;
var BasicCredentialHandler = /*#__PURE__*/function () {
  function BasicCredentialHandler(username, password) {
    _classCallCheck(this, BasicCredentialHandler);
    this.username = username;
    this.password = password;
  }
  return _createClass(BasicCredentialHandler, [{
    key: "prepareRequest",
    value: function prepareRequest(options) {
      if (!options.headers) {
        throw Error('The request has no headers');
      }
      options.headers['Authorization'] = "Basic ".concat(Buffer.from("".concat(this.username, ":").concat(this.password)).toString('base64'));
    }
    // This handler cannot handle 401
  }, {
    key: "canHandleAuthentication",
    value: function canHandleAuthentication() {
      return false;
    }
  }, {
    key: "handleAuthentication",
    value: function handleAuthentication() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              throw new Error('not implemented');
            case 1:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
    }
  }]);
}();
exports.BasicCredentialHandler = BasicCredentialHandler;
var BearerCredentialHandler = /*#__PURE__*/function () {
  function BearerCredentialHandler(token) {
    _classCallCheck(this, BearerCredentialHandler);
    this.token = token;
  }
  // currently implements pre-authorization
  // TODO: support preAuth = false where it hooks on 401
  return _createClass(BearerCredentialHandler, [{
    key: "prepareRequest",
    value: function prepareRequest(options) {
      if (!options.headers) {
        throw Error('The request has no headers');
      }
      options.headers['Authorization'] = "Bearer ".concat(this.token);
    }
    // This handler cannot handle 401
  }, {
    key: "canHandleAuthentication",
    value: function canHandleAuthentication() {
      return false;
    }
  }, {
    key: "handleAuthentication",
    value: function handleAuthentication() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              throw new Error('not implemented');
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
    }
  }]);
}();
exports.BearerCredentialHandler = BearerCredentialHandler;
var PersonalAccessTokenCredentialHandler = /*#__PURE__*/function () {
  function PersonalAccessTokenCredentialHandler(token) {
    _classCallCheck(this, PersonalAccessTokenCredentialHandler);
    this.token = token;
  }
  // currently implements pre-authorization
  // TODO: support preAuth = false where it hooks on 401
  return _createClass(PersonalAccessTokenCredentialHandler, [{
    key: "prepareRequest",
    value: function prepareRequest(options) {
      if (!options.headers) {
        throw Error('The request has no headers');
      }
      options.headers['Authorization'] = "Basic ".concat(Buffer.from("PAT:".concat(this.token)).toString('base64'));
    }
    // This handler cannot handle 401
  }, {
    key: "canHandleAuthentication",
    value: function canHandleAuthentication() {
      return false;
    }
  }, {
    key: "handleAuthentication",
    value: function handleAuthentication() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              throw new Error('not implemented');
            case 1:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
    }
  }]);
}();
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
//# sourceMappingURL=auth.js.map

/***/ }),

/***/ 9679:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



/* eslint-disable @typescript-eslint/no-explicit-any */
var _createForOfIteratorHelper = (__webpack_require__(3927)["default"]);
var _regeneratorRuntime = (__webpack_require__(453)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var _callSuper = (__webpack_require__(3572)["default"]);
var _inherits = (__webpack_require__(9323)["default"]);
var _wrapNativeSuper = (__webpack_require__(2121)["default"]);
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;
var http = __importStar(__webpack_require__(8611));
var https = __importStar(__webpack_require__(5692));
var pm = __importStar(__webpack_require__(8603));
var tunnel = __importStar(__webpack_require__(1068));
var HttpCodes;
(function (HttpCodes) {
  HttpCodes[HttpCodes["OK"] = 200] = "OK";
  HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
  HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
  HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
  HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
  HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
  HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
  HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
  HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
  HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
  HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
  HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
  HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
  HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
  HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
  HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
  HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
  HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
  HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
  HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
  HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
  HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
  HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
  HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
  HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
  HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
  HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
  Headers["Accept"] = "accept";
  Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
  MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
  var proxyUrl = pm.getProxyUrl(new URL(serverUrl));
  return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
var HttpRedirectCodes = [HttpCodes.MovedPermanently, HttpCodes.ResourceMoved, HttpCodes.SeeOther, HttpCodes.TemporaryRedirect, HttpCodes.PermanentRedirect];
var HttpResponseRetryCodes = [HttpCodes.BadGateway, HttpCodes.ServiceUnavailable, HttpCodes.GatewayTimeout];
var RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
var ExponentialBackoffCeiling = 10;
var ExponentialBackoffTimeSlice = 5;
var HttpClientError = /*#__PURE__*/function (_Error) {
  function HttpClientError(message, statusCode) {
    var _this;
    _classCallCheck(this, HttpClientError);
    _this = _callSuper(this, HttpClientError, [message]);
    _this.name = 'HttpClientError';
    _this.statusCode = statusCode;
    Object.setPrototypeOf(_this, HttpClientError.prototype);
    return _this;
  }
  _inherits(HttpClientError, _Error);
  return _createClass(HttpClientError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
exports.HttpClientError = HttpClientError;
var HttpClientResponse = /*#__PURE__*/function () {
  function HttpClientResponse(message) {
    _classCallCheck(this, HttpClientResponse);
    this.message = message;
  }
  return _createClass(HttpClientResponse, [{
    key: "readBody",
    value: function readBody() {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this2 = this;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", new Promise(function (resolve) {
                return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                  var output;
                  return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while (1) switch (_context.prev = _context.next) {
                      case 0:
                        output = Buffer.alloc(0);
                        this.message.on('data', function (chunk) {
                          output = Buffer.concat([output, chunk]);
                        });
                        this.message.on('end', function () {
                          resolve(output.toString());
                        });
                      case 3:
                      case "end":
                        return _context.stop();
                    }
                  }, _callee, this);
                }));
              }));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
    }
  }]);
}();
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
  var parsedUrl = new URL(requestUrl);
  return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
var HttpClient = /*#__PURE__*/function () {
  function HttpClient(userAgent, handlers, requestOptions) {
    _classCallCheck(this, HttpClient);
    this._ignoreSslError = false;
    this._allowRedirects = true;
    this._allowRedirectDowngrade = false;
    this._maxRedirects = 50;
    this._allowRetries = false;
    this._maxRetries = 1;
    this._keepAlive = false;
    this._disposed = false;
    this.userAgent = userAgent;
    this.handlers = handlers || [];
    this.requestOptions = requestOptions;
    if (requestOptions) {
      if (requestOptions.ignoreSslError != null) {
        this._ignoreSslError = requestOptions.ignoreSslError;
      }
      this._socketTimeout = requestOptions.socketTimeout;
      if (requestOptions.allowRedirects != null) {
        this._allowRedirects = requestOptions.allowRedirects;
      }
      if (requestOptions.allowRedirectDowngrade != null) {
        this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
      }
      if (requestOptions.maxRedirects != null) {
        this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
      }
      if (requestOptions.keepAlive != null) {
        this._keepAlive = requestOptions.keepAlive;
      }
      if (requestOptions.allowRetries != null) {
        this._allowRetries = requestOptions.allowRetries;
      }
      if (requestOptions.maxRetries != null) {
        this._maxRetries = requestOptions.maxRetries;
      }
    }
  }
  return _createClass(HttpClient, [{
    key: "options",
    value: function options(requestUrl, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt("return", this.request('OPTIONS', requestUrl, null, additionalHeaders || {}));
            case 1:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
    }
  }, {
    key: "get",
    value: function get(requestUrl, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              return _context4.abrupt("return", this.request('GET', requestUrl, null, additionalHeaders || {}));
            case 1:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
    }
  }, {
    key: "del",
    value: function del(requestUrl, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              return _context5.abrupt("return", this.request('DELETE', requestUrl, null, additionalHeaders || {}));
            case 1:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "post",
    value: function post(requestUrl, data, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              return _context6.abrupt("return", this.request('POST', requestUrl, data, additionalHeaders || {}));
            case 1:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
    }
  }, {
    key: "patch",
    value: function patch(requestUrl, data, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              return _context7.abrupt("return", this.request('PATCH', requestUrl, data, additionalHeaders || {}));
            case 1:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
    }
  }, {
    key: "put",
    value: function put(requestUrl, data, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              return _context8.abrupt("return", this.request('PUT', requestUrl, data, additionalHeaders || {}));
            case 1:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
    }
  }, {
    key: "head",
    value: function head(requestUrl, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              return _context9.abrupt("return", this.request('HEAD', requestUrl, null, additionalHeaders || {}));
            case 1:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
    }
  }, {
    key: "sendStream",
    value: function sendStream(verb, requestUrl, stream, additionalHeaders) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              return _context10.abrupt("return", this.request(verb, requestUrl, stream, additionalHeaders));
            case 1:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
  }, {
    key: "getJson",
    value: function getJson(requestUrl) {
      var additionalHeaders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        var res;
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
              _context11.next = 3;
              return this.get(requestUrl, additionalHeaders);
            case 3:
              res = _context11.sent;
              return _context11.abrupt("return", this._processResponse(res, this.requestOptions));
            case 5:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
    }
  }, {
    key: "postJson",
    value: function postJson(requestUrl, obj) {
      var additionalHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
        var data, res;
        return _regeneratorRuntime().wrap(function _callee12$(_context12) {
          while (1) switch (_context12.prev = _context12.next) {
            case 0:
              data = JSON.stringify(obj, null, 2);
              additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
              additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
              _context12.next = 5;
              return this.post(requestUrl, data, additionalHeaders);
            case 5:
              res = _context12.sent;
              return _context12.abrupt("return", this._processResponse(res, this.requestOptions));
            case 7:
            case "end":
              return _context12.stop();
          }
        }, _callee12, this);
      }));
    }
  }, {
    key: "putJson",
    value: function putJson(requestUrl, obj) {
      var additionalHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
        var data, res;
        return _regeneratorRuntime().wrap(function _callee13$(_context13) {
          while (1) switch (_context13.prev = _context13.next) {
            case 0:
              data = JSON.stringify(obj, null, 2);
              additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
              additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
              _context13.next = 5;
              return this.put(requestUrl, data, additionalHeaders);
            case 5:
              res = _context13.sent;
              return _context13.abrupt("return", this._processResponse(res, this.requestOptions));
            case 7:
            case "end":
              return _context13.stop();
          }
        }, _callee13, this);
      }));
    }
  }, {
    key: "patchJson",
    value: function patchJson(requestUrl, obj) {
      var additionalHeaders = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var data, res;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              data = JSON.stringify(obj, null, 2);
              additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
              additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
              _context14.next = 5;
              return this.patch(requestUrl, data, additionalHeaders);
            case 5:
              res = _context14.sent;
              return _context14.abrupt("return", this._processResponse(res, this.requestOptions));
            case 7:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
  }, {
    key: "request",
    value: function request(verb, requestUrl, data, headers) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
        var parsedUrl, info, maxTries, numTries, response, authenticationHandler, _iterator, _step, handler, redirectsRemaining, redirectUrl, parsedRedirectUrl, header;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              if (!this._disposed) {
                _context15.next = 2;
                break;
              }
              throw new Error('Client has already been disposed.');
            case 2:
              parsedUrl = new URL(requestUrl);
              info = this._prepareRequest(verb, parsedUrl, headers); // Only perform retries on reads since writes may not be idempotent.
              maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb) ? this._maxRetries + 1 : 1;
              numTries = 0;
            case 6:
              _context15.next = 8;
              return this.requestRaw(info, data);
            case 8:
              response = _context15.sent;
              if (!(response && response.message && response.message.statusCode === HttpCodes.Unauthorized)) {
                _context15.next = 34;
                break;
              }
              authenticationHandler = void 0;
              _iterator = _createForOfIteratorHelper(this.handlers);
              _context15.prev = 12;
              _iterator.s();
            case 14:
              if ((_step = _iterator.n()).done) {
                _context15.next = 21;
                break;
              }
              handler = _step.value;
              if (!handler.canHandleAuthentication(response)) {
                _context15.next = 19;
                break;
              }
              authenticationHandler = handler;
              return _context15.abrupt("break", 21);
            case 19:
              _context15.next = 14;
              break;
            case 21:
              _context15.next = 26;
              break;
            case 23:
              _context15.prev = 23;
              _context15.t0 = _context15["catch"](12);
              _iterator.e(_context15.t0);
            case 26:
              _context15.prev = 26;
              _iterator.f();
              return _context15.finish(26);
            case 29:
              if (!authenticationHandler) {
                _context15.next = 33;
                break;
              }
              return _context15.abrupt("return", authenticationHandler.handleAuthentication(this, info, data));
            case 33:
              return _context15.abrupt("return", response);
            case 34:
              redirectsRemaining = this._maxRedirects;
            case 35:
              if (!(response.message.statusCode && HttpRedirectCodes.includes(response.message.statusCode) && this._allowRedirects && redirectsRemaining > 0)) {
                _context15.next = 52;
                break;
              }
              redirectUrl = response.message.headers['location'];
              if (redirectUrl) {
                _context15.next = 39;
                break;
              }
              return _context15.abrupt("break", 52);
            case 39:
              parsedRedirectUrl = new URL(redirectUrl);
              if (!(parsedUrl.protocol === 'https:' && parsedUrl.protocol !== parsedRedirectUrl.protocol && !this._allowRedirectDowngrade)) {
                _context15.next = 42;
                break;
              }
              throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
            case 42:
              _context15.next = 44;
              return response.readBody();
            case 44:
              // strip authorization header if redirected to a different hostname
              if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                for (header in headers) {
                  // header names are case insensitive
                  if (header.toLowerCase() === 'authorization') {
                    delete headers[header];
                  }
                }
              }
              // let's make the request with the new redirectUrl
              info = this._prepareRequest(verb, parsedRedirectUrl, headers);
              _context15.next = 48;
              return this.requestRaw(info, data);
            case 48:
              response = _context15.sent;
              redirectsRemaining--;
              _context15.next = 35;
              break;
            case 52:
              if (!(!response.message.statusCode || !HttpResponseRetryCodes.includes(response.message.statusCode))) {
                _context15.next = 54;
                break;
              }
              return _context15.abrupt("return", response);
            case 54:
              numTries += 1;
              if (!(numTries < maxTries)) {
                _context15.next = 60;
                break;
              }
              _context15.next = 58;
              return response.readBody();
            case 58:
              _context15.next = 60;
              return this._performExponentialBackoff(numTries);
            case 60:
              if (numTries < maxTries) {
                _context15.next = 6;
                break;
              }
            case 61:
              return _context15.abrupt("return", response);
            case 62:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this, [[12, 23, 26, 29]]);
      }));
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
  }, {
    key: "dispose",
    value: function dispose() {
      if (this._agent) {
        this._agent.destroy();
      }
      this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
  }, {
    key: "requestRaw",
    value: function requestRaw(info, data) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        var _this3 = this;
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              return _context16.abrupt("return", new Promise(function (resolve, reject) {
                function callbackForResult(err, res) {
                  if (err) {
                    reject(err);
                  } else if (!res) {
                    // If `err` is not passed, then `res` must be passed.
                    reject(new Error('Unknown error'));
                  } else {
                    resolve(res);
                  }
                }
                _this3.requestRawWithCallback(info, data, callbackForResult);
              }));
            case 1:
            case "end":
              return _context16.stop();
          }
        }, _callee16);
      }));
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
  }, {
    key: "requestRawWithCallback",
    value: function requestRawWithCallback(info, data, onResult) {
      if (typeof data === 'string') {
        if (!info.options.headers) {
          info.options.headers = {};
        }
        info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
      }
      var callbackCalled = false;
      function handleResult(err, res) {
        if (!callbackCalled) {
          callbackCalled = true;
          onResult(err, res);
        }
      }
      var req = info.httpModule.request(info.options, function (msg) {
        var res = new HttpClientResponse(msg);
        handleResult(undefined, res);
      });
      var socket;
      req.on('socket', function (sock) {
        socket = sock;
      });
      // If we ever get disconnected, we want the socket to timeout eventually
      req.setTimeout(this._socketTimeout || 3 * 60000, function () {
        if (socket) {
          socket.end();
        }
        handleResult(new Error("Request timeout: ".concat(info.options.path)));
      });
      req.on('error', function (err) {
        // err has statusCode property
        // res should have headers
        handleResult(err);
      });
      if (data && typeof data === 'string') {
        req.write(data, 'utf8');
      }
      if (data && typeof data !== 'string') {
        data.on('close', function () {
          req.end();
        });
        data.pipe(req);
      } else {
        req.end();
      }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
  }, {
    key: "getAgent",
    value: function getAgent(serverUrl) {
      var parsedUrl = new URL(serverUrl);
      return this._getAgent(parsedUrl);
    }
  }, {
    key: "_prepareRequest",
    value: function _prepareRequest(method, requestUrl, headers) {
      var info = {};
      info.parsedUrl = requestUrl;
      var usingSsl = info.parsedUrl.protocol === 'https:';
      info.httpModule = usingSsl ? https : http;
      var defaultPort = usingSsl ? 443 : 80;
      info.options = {};
      info.options.host = info.parsedUrl.hostname;
      info.options.port = info.parsedUrl.port ? parseInt(info.parsedUrl.port) : defaultPort;
      info.options.path = (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
      info.options.method = method;
      info.options.headers = this._mergeHeaders(headers);
      if (this.userAgent != null) {
        info.options.headers['user-agent'] = this.userAgent;
      }
      info.options.agent = this._getAgent(info.parsedUrl);
      // gives handlers an opportunity to participate
      if (this.handlers) {
        var _iterator2 = _createForOfIteratorHelper(this.handlers),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var handler = _step2.value;
            handler.prepareRequest(info.options);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return info;
    }
  }, {
    key: "_mergeHeaders",
    value: function _mergeHeaders(headers) {
      if (this.requestOptions && this.requestOptions.headers) {
        return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));
      }
      return lowercaseKeys(headers || {});
    }
  }, {
    key: "_getExistingOrDefaultHeader",
    value: function _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
      var clientHeader;
      if (this.requestOptions && this.requestOptions.headers) {
        clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
      }
      return additionalHeaders[header] || clientHeader || _default;
    }
  }, {
    key: "_getAgent",
    value: function _getAgent(parsedUrl) {
      var agent;
      var proxyUrl = pm.getProxyUrl(parsedUrl);
      var useProxy = proxyUrl && proxyUrl.hostname;
      if (this._keepAlive && useProxy) {
        agent = this._proxyAgent;
      }
      if (this._keepAlive && !useProxy) {
        agent = this._agent;
      }
      // if agent is already assigned use that agent.
      if (agent) {
        return agent;
      }
      var usingSsl = parsedUrl.protocol === 'https:';
      var maxSockets = 100;
      if (this.requestOptions) {
        maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
      }
      // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.
      if (proxyUrl && proxyUrl.hostname) {
        var agentOptions = {
          maxSockets: maxSockets,
          keepAlive: this._keepAlive,
          proxy: Object.assign(Object.assign({}, (proxyUrl.username || proxyUrl.password) && {
            proxyAuth: "".concat(proxyUrl.username, ":").concat(proxyUrl.password)
          }), {
            host: proxyUrl.hostname,
            port: proxyUrl.port
          })
        };
        var tunnelAgent;
        var overHttps = proxyUrl.protocol === 'https:';
        if (usingSsl) {
          tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
        } else {
          tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
        }
        agent = tunnelAgent(agentOptions);
        this._proxyAgent = agent;
      }
      // if reusing agent across request and tunneling agent isn't assigned create a new agent
      if (this._keepAlive && !agent) {
        var options = {
          keepAlive: this._keepAlive,
          maxSockets: maxSockets
        };
        agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
        this._agent = agent;
      }
      // if not using private agent and tunnel agent isn't setup then use global agent
      if (!agent) {
        agent = usingSsl ? https.globalAgent : http.globalAgent;
      }
      if (usingSsl && this._ignoreSslError) {
        // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
        // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
        // we have to cast it to any and change it directly
        agent.options = Object.assign(agent.options || {}, {
          rejectUnauthorized: false
        });
      }
      return agent;
    }
  }, {
    key: "_performExponentialBackoff",
    value: function _performExponentialBackoff(retryNumber) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var ms;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
              ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
              return _context17.abrupt("return", new Promise(function (resolve) {
                return setTimeout(function () {
                  return resolve();
                }, ms);
              }));
            case 3:
            case "end":
              return _context17.stop();
          }
        }, _callee17);
      }));
    }
  }, {
    key: "_processResponse",
    value: function _processResponse(res, options) {
      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {
        var _this4 = this;
        return _regeneratorRuntime().wrap(function _callee19$(_context19) {
          while (1) switch (_context19.prev = _context19.next) {
            case 0:
              return _context19.abrupt("return", new Promise(function (resolve, reject) {
                return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {
                  var statusCode, response, dateTimeDeserializer, obj, contents, msg, err;
                  return _regeneratorRuntime().wrap(function _callee18$(_context18) {
                    while (1) switch (_context18.prev = _context18.next) {
                      case 0:
                        dateTimeDeserializer = function _dateTimeDeserializer(key, value) {
                          if (typeof value === 'string') {
                            var a = new Date(value);
                            if (!isNaN(a.valueOf())) {
                              return a;
                            }
                          }
                          return value;
                        };
                        statusCode = res.message.statusCode || 0;
                        response = {
                          statusCode: statusCode,
                          result: null,
                          headers: {}
                        }; // not found leads to null obj returned
                        if (statusCode === HttpCodes.NotFound) {
                          resolve(response);
                        }
                        // get the result from the body
                        _context18.prev = 4;
                        _context18.next = 7;
                        return res.readBody();
                      case 7:
                        contents = _context18.sent;
                        if (contents && contents.length > 0) {
                          if (options && options.deserializeDates) {
                            obj = JSON.parse(contents, dateTimeDeserializer);
                          } else {
                            obj = JSON.parse(contents);
                          }
                          response.result = obj;
                        }
                        response.headers = res.message.headers;
                        _context18.next = 14;
                        break;
                      case 12:
                        _context18.prev = 12;
                        _context18.t0 = _context18["catch"](4);
                      case 14:
                        // note that 3xx redirects are handled by the http layer.
                        if (statusCode > 299) {
                          // if exception/error in body, attempt to get better error
                          if (obj && obj.message) {
                            msg = obj.message;
                          } else if (contents && contents.length > 0) {
                            // it may be the case that the exception is in the body message as string
                            msg = contents;
                          } else {
                            msg = "Failed request: (".concat(statusCode, ")");
                          }
                          err = new HttpClientError(msg, statusCode);
                          err.result = response.result;
                          reject(err);
                        } else {
                          resolve(response);
                        }
                      case 15:
                      case "end":
                        return _context18.stop();
                    }
                  }, _callee18, null, [[4, 12]]);
                }));
              }));
            case 1:
            case "end":
              return _context19.stop();
          }
        }, _callee19);
      }));
    }
  }]);
}();
exports.HttpClient = HttpClient;
var lowercaseKeys = function lowercaseKeys(obj) {
  return Object.keys(obj).reduce(function (c, k) {
    return c[k.toLowerCase()] = obj[k], c;
  }, {});
};
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 8603:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var _createForOfIteratorHelper = (__webpack_require__(3927)["default"]);
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.checkBypass = exports.getProxyUrl = void 0;
function getProxyUrl(reqUrl) {
  var usingSsl = reqUrl.protocol === 'https:';
  if (checkBypass(reqUrl)) {
    return undefined;
  }
  var proxyVar = function () {
    if (usingSsl) {
      return process.env['https_proxy'] || process.env['HTTPS_PROXY'];
    } else {
      return process.env['http_proxy'] || process.env['HTTP_PROXY'];
    }
  }();
  if (proxyVar) {
    return new URL(proxyVar);
  } else {
    return undefined;
  }
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
  if (!reqUrl.hostname) {
    return false;
  }
  var reqHost = reqUrl.hostname;
  if (isLoopbackAddress(reqHost)) {
    return true;
  }
  var noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
  if (!noProxy) {
    return false;
  }
  // Determine the request port
  var reqPort;
  if (reqUrl.port) {
    reqPort = Number(reqUrl.port);
  } else if (reqUrl.protocol === 'http:') {
    reqPort = 80;
  } else if (reqUrl.protocol === 'https:') {
    reqPort = 443;
  }
  // Format the request hostname and hostname with port
  var upperReqHosts = [reqUrl.hostname.toUpperCase()];
  if (typeof reqPort === 'number') {
    upperReqHosts.push("".concat(upperReqHosts[0], ":").concat(reqPort));
  }
  // Compare request host against noproxy
  var _iterator = _createForOfIteratorHelper(noProxy.split(',').map(function (x) {
      return x.trim().toUpperCase();
    }).filter(function (x) {
      return x;
    })),
    _step;
  try {
    var _loop = function _loop() {
        var upperNoProxyItem = _step.value;
        if (upperNoProxyItem === '*' || upperReqHosts.some(function (x) {
          return x === upperNoProxyItem || x.endsWith(".".concat(upperNoProxyItem)) || upperNoProxyItem.startsWith('.') && x.endsWith("".concat(upperNoProxyItem));
        })) {
          return {
            v: true
          };
        }
      },
      _ret;
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      _ret = _loop();
      if (_ret) return _ret.v;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return false;
}
exports.checkBypass = checkBypass;
function isLoopbackAddress(host) {
  var hostLower = host.toLowerCase();
  return hostLower === 'localhost' || hostLower.startsWith('127.') || hostLower.startsWith('[::1]') || hostLower.startsWith('[0:0:0:0:0:0:0:1]');
}
//# sourceMappingURL=proxy.js.map

/***/ }),

/***/ 2413:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32 = void 0;
var tslib_1 = __webpack_require__(3683);
var util_1 = __webpack_require__(6744);
var index_1 = __webpack_require__(9864);
var AwsCrc32 = /** @class */function () {
  function AwsCrc32() {
    this.crc32 = new index_1.Crc32();
  }
  AwsCrc32.prototype.update = function (toHash) {
    if ((0, util_1.isEmptyData)(toHash)) return;
    this.crc32.update((0, util_1.convertToBuffer)(toHash));
  };
  AwsCrc32.prototype.digest = function () {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
      return tslib_1.__generator(this, function (_a) {
        return [2 /*return*/, (0, util_1.numToUint8)(this.crc32.digest())];
      });
    });
  };
  AwsCrc32.prototype.reset = function () {
    this.crc32 = new index_1.Crc32();
  };
  return AwsCrc32;
}();
exports.AwsCrc32 = AwsCrc32;
//# sourceMappingURL=aws_crc32.js.map

/***/ }),

/***/ 9864:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;
var tslib_1 = __webpack_require__(3683);
var util_1 = __webpack_require__(6744);
function crc32(data) {
  return new Crc32().update(data).digest();
}
exports.crc32 = crc32;
var Crc32 = /** @class */function () {
  function Crc32() {
    this.checksum = 0xffffffff;
  }
  Crc32.prototype.update = function (data) {
    var e_1, _a;
    try {
      for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
        var _byte = data_1_1.value;
        this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ _byte) & 0xff];
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (data_1_1 && !data_1_1.done && (_a = data_1["return"])) _a.call(data_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
    return this;
  };
  Crc32.prototype.digest = function () {
    return (this.checksum ^ 0xffffffff) >>> 0;
  };
  return Crc32;
}();
exports.Crc32 = Crc32;
// prettier-ignore
var a_lookUpTable = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];
var lookupTable = (0, util_1.uint32ArrayFrom)(a_lookUpTable);
var aws_crc32_1 = __webpack_require__(2413);
Object.defineProperty(exports, "AwsCrc32", ({
  enumerable: true,
  get: function get() {
    return aws_crc32_1.AwsCrc32;
  }
}));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 2324:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32c = void 0;
var tslib_1 = __webpack_require__(3683);
var util_1 = __webpack_require__(6744);
var index_1 = __webpack_require__(4820);
var AwsCrc32c = /** @class */function () {
  function AwsCrc32c() {
    this.crc32c = new index_1.Crc32c();
  }
  AwsCrc32c.prototype.update = function (toHash) {
    if ((0, util_1.isEmptyData)(toHash)) return;
    this.crc32c.update((0, util_1.convertToBuffer)(toHash));
  };
  AwsCrc32c.prototype.digest = function () {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
      return tslib_1.__generator(this, function (_a) {
        return [2 /*return*/, (0, util_1.numToUint8)(this.crc32c.digest())];
      });
    });
  };
  AwsCrc32c.prototype.reset = function () {
    this.crc32c = new index_1.Crc32c();
  };
  return AwsCrc32c;
}();
exports.AwsCrc32c = AwsCrc32c;
//# sourceMappingURL=aws_crc32c.js.map

/***/ }),

/***/ 4820:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AwsCrc32c = exports.Crc32c = exports.crc32c = void 0;
var tslib_1 = __webpack_require__(3683);
var util_1 = __webpack_require__(6744);
function crc32c(data) {
  return new Crc32c().update(data).digest();
}
exports.crc32c = crc32c;
var Crc32c = /** @class */function () {
  function Crc32c() {
    this.checksum = 0xffffffff;
  }
  Crc32c.prototype.update = function (data) {
    var e_1, _a;
    try {
      for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
        var _byte = data_1_1.value;
        this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ _byte) & 0xff];
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (data_1_1 && !data_1_1.done && (_a = data_1["return"])) _a.call(data_1);
      } finally {
        if (e_1) throw e_1.error;
      }
    }
    return this;
  };
  Crc32c.prototype.digest = function () {
    return (this.checksum ^ 0xffffffff) >>> 0;
  };
  return Crc32c;
}();
exports.Crc32c = Crc32c;
// prettier-ignore
var a_lookupTable = [0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB, 0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24, 0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C45070, 0x25AFD373, 0x36FF2087, 0xC494A384, 0x9A879FA0, 0x68EC1CA3, 0x7BBCEF57, 0x89D76C54, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B, 0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 0x33ED7D2A, 0xE72719C1, 0x154C9AC2, 0x061C6936, 0xF477EA35, 0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA, 0x30E349B1, 0xC288CAB2, 0xD1D83946, 0x23B3BA45, 0xF779DEAE, 0x05125DAD, 0x1642AE59, 0xE4292D5A, 0xBA3A117E, 0x4851927D, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, 0x9C9BF696, 0x6EF07595, 0x417B1DBC, 0xB3109EBF, 0xA0406D4B, 0x522BEE48, 0x86E18AA3, 0x748A09A0, 0x67DAFA54, 0x95B17957, 0xCBA24573, 0x39C9C670, 0x2A993584, 0xD8F2B687, 0x0C38D26C, 0xFE53516F, 0xED03A29B, 0x1F682198, 0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 0x42752927, 0x96BF4DCC, 0x64D4CECF, 0x77843D3B, 0x85EFBE38, 0xDBFC821C, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, 0xFD5D65F4, 0x0F36E6F7, 0x61C69362, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 0x5437877E, 0x4767748A, 0xB50CF789, 0xEB1FCBAD, 0x197448AE, 0x0A24BB5A, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46, 0x7198540D, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6, 0xFB410CC2, 0x092A8FC1, 0x1A7A7C35, 0xE811FF36, 0x3CDB9BDD, 0xCEB018DE, 0xDDE0EB2A, 0x2F8B6829, 0x82F63B78, 0x709DB87B, 0x63CD4B8F, 0x91A6C88C, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93, 0x082F63B7, 0xFA44E0B4, 0xE9141340, 0x1B7F9043, 0xCFB5F4A8, 0x3DDE77AB, 0x2E8E845F, 0xDCE5075C, 0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC, 0x1871A4D8, 0xEA1A27DB, 0xF94AD42F, 0x0B21572C, 0xDFEB33C7, 0x2D80B0C4, 0x3ED04330, 0xCCBBC033, 0xA24BB5A6, 0x502036A5, 0x4370C551, 0xB11B4652, 0x65D122B9, 0x97BAA1BA, 0x84EA524E, 0x7681D14D, 0x2892ED69, 0xDAF96E6A, 0xC9A99D9E, 0x3BC21E9D, 0xEF087A76, 0x1D63F975, 0x0E330A81, 0xFC588982, 0xB21572C9, 0x407EF1CA, 0x532E023E, 0xA145813D, 0x758FE5D6, 0x87E466D5, 0x94B49521, 0x66DF1622, 0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, 0xFF56BD19, 0x0D3D3E1A, 0x1E6DCDEE, 0xEC064EED, 0xC38D26C4, 0x31E6A5C7, 0x22B65633, 0xD0DDD530, 0x0417B1DB, 0xF67C32D8, 0xE52CC12C, 0x1747422F, 0x49547E0B, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, 0x8ECEE914, 0x7CA56A17, 0x6FF599E3, 0x9D9E1AE0, 0xD3D3E1AB, 0x21B862A8, 0x32E8915C, 0xC083125F, 0x144976B4, 0xE622F5B7, 0xF5720643, 0x07198540, 0x590AB964, 0xAB613A67, 0xB831C993, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, 0x8DC0DD8F, 0xE330A81A, 0x115B2B19, 0x020BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1, 0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, 0xAE7367CA, 0x5C18E4C9, 0x4F48173D, 0xBD23943E, 0xF36E6F75, 0x0105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 0x27A40B9E, 0x79B737BA, 0x8BDCB4B9, 0x988C474D, 0x6AE7C44E, 0xBE2DA0A5, 0x4C4623A6, 0x5F16D052, 0xAD7D5351];
var lookupTable = (0, util_1.uint32ArrayFrom)(a_lookupTable);
var aws_crc32c_1 = __webpack_require__(2324);
Object.defineProperty(exports, "AwsCrc32c", ({
  enumerable: true,
  get: function get() {
    return aws_crc32c_1.AwsCrc32c;
  }
}));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 5452:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.convertToBuffer = void 0;
var util_utf8_browser_1 = __webpack_require__(1340);
// Quick polyfill
var fromUtf8 = typeof Buffer !== "undefined" && Buffer.from ? function (input) {
  return Buffer.from(input, "utf8");
} : util_utf8_browser_1.fromUtf8;
function convertToBuffer(data) {
  // Already a Uint8, do nothing
  if (data instanceof Uint8Array) return data;
  if (typeof data === "string") {
    return fromUtf8(data);
  }
  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }
  return new Uint8Array(data);
}
exports.convertToBuffer = convertToBuffer;
//# sourceMappingURL=convertToBuffer.js.map

/***/ }),

/***/ 6744:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;
var convertToBuffer_1 = __webpack_require__(5452);
Object.defineProperty(exports, "convertToBuffer", ({
  enumerable: true,
  get: function get() {
    return convertToBuffer_1.convertToBuffer;
  }
}));
var isEmptyData_1 = __webpack_require__(3121);
Object.defineProperty(exports, "isEmptyData", ({
  enumerable: true,
  get: function get() {
    return isEmptyData_1.isEmptyData;
  }
}));
var numToUint8_1 = __webpack_require__(5601);
Object.defineProperty(exports, "numToUint8", ({
  enumerable: true,
  get: function get() {
    return numToUint8_1.numToUint8;
  }
}));
var uint32ArrayFrom_1 = __webpack_require__(6914);
Object.defineProperty(exports, "uint32ArrayFrom", ({
  enumerable: true,
  get: function get() {
    return uint32ArrayFrom_1.uint32ArrayFrom;
  }
}));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 3121:
/***/ ((__unused_webpack_module, exports) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isEmptyData = void 0;
function isEmptyData(data) {
  if (typeof data === "string") {
    return data.length === 0;
  }
  return data.byteLength === 0;
}
exports.isEmptyData = isEmptyData;
//# sourceMappingURL=isEmptyData.js.map

/***/ }),

/***/ 5601:
/***/ ((__unused_webpack_module, exports) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.numToUint8 = void 0;
function numToUint8(num) {
  return new Uint8Array([(num & 0xff000000) >> 24, (num & 0x00ff0000) >> 16, (num & 0x0000ff00) >> 8, num & 0x000000ff]);
}
exports.numToUint8 = numToUint8;
//# sourceMappingURL=numToUint8.js.map

/***/ }),

/***/ 6914:
/***/ ((__unused_webpack_module, exports) => {



// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.uint32ArrayFrom = void 0;
// IE 11 does not support Array.from, so we do it manually
function uint32ArrayFrom(a_lookUpTable) {
  if (!Uint32Array.from) {
    var return_array = new Uint32Array(a_lookUpTable.length);
    var a_index = 0;
    while (a_index < a_lookUpTable.length) {
      return_array[a_index] = a_lookUpTable[a_index];
      a_index += 1;
    }
    return return_array;
  }
  return Uint32Array.from(a_lookUpTable);
}
exports.uint32ArrayFrom = uint32ArrayFrom;
//# sourceMappingURL=uint32ArrayFrom.js.map

/***/ }),

/***/ 1340:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  fromUtf8: () => (/* binding */ fromUtf8),
  toUtf8: () => (/* binding */ toUtf8)
});

;// ./node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js
var pureJs_fromUtf8 = function fromUtf8(input) {
  var bytes = [];
  for (var i = 0, len = input.length; i < len; i++) {
    var value = input.charCodeAt(i);
    if (value < 0x80) {
      bytes.push(value);
    } else if (value < 0x800) {
      bytes.push(value >> 6 | 192, value & 63 | 128);
    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
      var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
      bytes.push(surrogatePair >> 18 | 240, surrogatePair >> 12 & 63 | 128, surrogatePair >> 6 & 63 | 128, surrogatePair & 63 | 128);
    } else {
      bytes.push(value >> 12 | 224, value >> 6 & 63 | 128, value & 63 | 128);
    }
  }
  return Uint8Array.from(bytes);
};
var pureJs_toUtf8 = function toUtf8(input) {
  var decoded = "";
  for (var i = 0, len = input.length; i < len; i++) {
    var _byte = input[i];
    if (_byte < 0x80) {
      decoded += String.fromCharCode(_byte);
    } else if (192 <= _byte && _byte < 224) {
      var nextByte = input[++i];
      decoded += String.fromCharCode((_byte & 31) << 6 | nextByte & 63);
    } else if (240 <= _byte && _byte < 365) {
      var surrogatePair = [_byte, input[++i], input[++i], input[++i]];
      var encoded = "%" + surrogatePair.map(function (byteValue) {
        return byteValue.toString(16);
      }).join("%");
      decoded += decodeURIComponent(encoded);
    } else {
      decoded += String.fromCharCode((_byte & 15) << 12 | (input[++i] & 63) << 6 | input[++i] & 63);
    }
  }
  return decoded;
};
;// ./node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js
function whatwgEncodingApi_fromUtf8(input) {
  return new TextEncoder().encode(input);
}
function whatwgEncodingApi_toUtf8(input) {
  return new TextDecoder("utf-8").decode(input);
}
;// ./node_modules/.pnpm/@aws-sdk+util-utf8-browser@3.259.0/node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js


var fromUtf8 = function fromUtf8(input) {
  return typeof TextEncoder === "function" ? whatwgEncodingApi_fromUtf8(input) : pureJs_fromUtf8(input);
};
var toUtf8 = function toUtf8(input) {
  return typeof TextDecoder === "function" ? whatwgEncodingApi_toUtf8(input) : pureJs_toUtf8(input);
};

/***/ }),

/***/ 6752:
/***/ ((module) => {

var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function stringToBytes(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },
    // Convert a byte array to a string
    bytesToString: function bytesToString(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },
  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function stringToBytes(str) {
      for (var bytes = [], i = 0; i < str.length; i++) bytes.push(str.charCodeAt(i) & 0xFF);
      return bytes;
    },
    // Convert a byte array to a string
    bytesToString: function bytesToString(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++) str.push(String.fromCharCode(bytes[i]));
      return str.join('');
    }
  }
};
module.exports = charenc;

/***/ }),

/***/ 5012:
/***/ ((module) => {

(function () {
  var base64map = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
    crypt = {
      // Bit-wise rotation left
      rotl: function rotl(n, b) {
        return n << b | n >>> 32 - b;
      },
      // Bit-wise rotation right
      rotr: function rotr(n, b) {
        return n << 32 - b | n >>> b;
      },
      // Swap big-endian to little-endian and vice versa
      endian: function endian(n) {
        // If number given, swap endian
        if (n.constructor == Number) {
          return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
        }

        // Else, assume array and swap all items
        for (var i = 0; i < n.length; i++) n[i] = crypt.endian(n[i]);
        return n;
      },
      // Generate an array of any length of random bytes
      randomBytes: function randomBytes(n) {
        for (var bytes = []; n > 0; n--) bytes.push(Math.floor(Math.random() * 256));
        return bytes;
      },
      // Convert a byte array to big-endian 32-bit words
      bytesToWords: function bytesToWords(bytes) {
        for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8) words[b >>> 5] |= bytes[i] << 24 - b % 32;
        return words;
      },
      // Convert big-endian 32-bit words to a byte array
      wordsToBytes: function wordsToBytes(words) {
        for (var bytes = [], b = 0; b < words.length * 32; b += 8) bytes.push(words[b >>> 5] >>> 24 - b % 32 & 0xFF);
        return bytes;
      },
      // Convert a byte array to a hex string
      bytesToHex: function bytesToHex(bytes) {
        for (var hex = [], i = 0; i < bytes.length; i++) {
          hex.push((bytes[i] >>> 4).toString(16));
          hex.push((bytes[i] & 0xF).toString(16));
        }
        return hex.join('');
      },
      // Convert a hex string to a byte array
      hexToBytes: function hexToBytes(hex) {
        for (var bytes = [], c = 0; c < hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16));
        return bytes;
      },
      // Convert a byte array to a base-64 string
      bytesToBase64: function bytesToBase64(bytes) {
        for (var base64 = [], i = 0; i < bytes.length; i += 3) {
          var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];
          for (var j = 0; j < 4; j++) if (i * 8 + j * 6 <= bytes.length * 8) base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 0x3F));else base64.push('=');
        }
        return base64.join('');
      },
      // Convert a base-64 string to a byte array
      base64ToBytes: function base64ToBytes(base64) {
        // Remove non-base-64 characters
        base64 = base64.replace(/[^A-Z0-9+\/]/ig, '');
        for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4) {
          if (imod4 == 0) continue;
          bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << imod4 * 2 | base64map.indexOf(base64.charAt(i)) >>> 6 - imod4 * 2);
        }
        return bytes;
      }
    };
  module.exports = crypt;
})();

/***/ }),

/***/ 1330:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



var validator = __webpack_require__(5178);
var XMLParser = __webpack_require__(7911);
var XMLBuilder = __webpack_require__(2132);
module.exports = {
  XMLParser: XMLParser,
  XMLValidator: validator,
  XMLBuilder: XMLBuilder
};

/***/ }),

/***/ 8122:
/***/ ((__unused_webpack_module, exports) => {



var nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
var nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';
var regexName = new RegExp('^' + nameRegexp + '$');
var getAllMatches = function getAllMatches(string, regex) {
  var matches = [];
  var match = regex.exec(string);
  while (match) {
    var allmatches = [];
    allmatches.startIndex = regex.lastIndex - match[0].length;
    var len = match.length;
    for (var index = 0; index < len; index++) {
      allmatches.push(match[index]);
    }
    matches.push(allmatches);
    match = regex.exec(string);
  }
  return matches;
};
var isName = function isName(string) {
  var match = regexName.exec(string);
  return !(match === null || typeof match === 'undefined');
};
exports.isExist = function (v) {
  return typeof v !== 'undefined';
};
exports.isEmptyObject = function (obj) {
  return Object.keys(obj).length === 0;
};

/**
 * Copy all the properties of a into b.
 * @param {*} target
 * @param {*} a
 */
exports.merge = function (target, a, arrayMode) {
  if (a) {
    var keys = Object.keys(a); // will return an array of own properties
    var len = keys.length; //don't make it inline
    for (var i = 0; i < len; i++) {
      if (arrayMode === 'strict') {
        target[keys[i]] = [a[keys[i]]];
      } else {
        target[keys[i]] = a[keys[i]];
      }
    }
  }
};
/* exports.merge =function (b,a){
  return Object.assign(b,a);
} */

exports.getValue = function (v) {
  if (exports.isExist(v)) {
    return v;
  } else {
    return '';
  }
};

// const fakeCall = function(a) {return a;};
// const fakeCallNoReturn = function() {};

exports.isName = isName;
exports.getAllMatches = getAllMatches;
exports.nameRegexp = nameRegexp;

/***/ }),

/***/ 5178:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var util = __webpack_require__(8122);
var defaultOptions = {
  allowBooleanAttributes: false,
  //A tag can have attributes without any value
  unpairedTags: []
};

//const tagsPattern = new RegExp("<\\/?([\\w:\\-_\.]+)\\s*\/?>","g");
exports.validate = function (xmlData, options) {
  options = Object.assign({}, defaultOptions, options);

  //xmlData = xmlData.replace(/(\r\n|\n|\r)/gm,"");//make it single line
  //xmlData = xmlData.replace(/(^\s*<\?xml.*?\?>)/g,"");//Remove XML starting tag
  //xmlData = xmlData.replace(/(<!DOCTYPE[\s\w\"\.\/\-\:]+(\[.*\])*\s*>)/g,"");//Remove DOCTYPE
  var tags = [];
  var tagFound = false;

  //indicates that the root tag has been closed (aka. depth 0 has been reached)
  var reachedRoot = false;
  if (xmlData[0] === "\uFEFF") {
    // check for byte order mark (BOM)
    xmlData = xmlData.substr(1);
  }
  for (var i = 0; i < xmlData.length; i++) {
    if (xmlData[i] === '<' && xmlData[i + 1] === '?') {
      i += 2;
      i = readPI(xmlData, i);
      if (i.err) return i;
    } else if (xmlData[i] === '<') {
      //starting of tag
      //read until you reach to '>' avoiding any '>' in attribute value
      var tagStartPos = i;
      i++;
      if (xmlData[i] === '!') {
        i = readCommentAndCDATA(xmlData, i);
        continue;
      } else {
        var closingTag = false;
        if (xmlData[i] === '/') {
          //closing tag
          closingTag = true;
          i++;
        }
        //read tagname
        var tagName = '';
        for (; i < xmlData.length && xmlData[i] !== '>' && xmlData[i] !== ' ' && xmlData[i] !== '\t' && xmlData[i] !== '\n' && xmlData[i] !== '\r'; i++) {
          tagName += xmlData[i];
        }
        tagName = tagName.trim();
        //console.log(tagName);

        if (tagName[tagName.length - 1] === '/') {
          //self closing tag without attributes
          tagName = tagName.substring(0, tagName.length - 1);
          //continue;
          i--;
        }
        if (!validateTagName(tagName)) {
          var msg = void 0;
          if (tagName.trim().length === 0) {
            msg = "Invalid space after '<'.";
          } else {
            msg = "Tag '" + tagName + "' is an invalid name.";
          }
          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));
        }
        var result = readAttributeStr(xmlData, i);
        if (result === false) {
          return getErrorObject('InvalidAttr', "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i));
        }
        var attrStr = result.value;
        i = result.index;
        if (attrStr[attrStr.length - 1] === '/') {
          //self closing tag
          var attrStrStart = i - attrStr.length;
          attrStr = attrStr.substring(0, attrStr.length - 1);
          var isValid = validateAttributeString(attrStr, options);
          if (isValid === true) {
            tagFound = true;
            //continue; //text may presents after self closing tag
          } else {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
          }
        } else if (closingTag) {
          if (!result.tagClosed) {
            return getErrorObject('InvalidTag', "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i));
          } else if (attrStr.trim().length > 0) {
            return getErrorObject('InvalidTag', "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
          } else {
            var otg = tags.pop();
            if (tagName !== otg.tagName) {
              var openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
              return getErrorObject('InvalidTag', "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName + "'.", getLineNumberForPosition(xmlData, tagStartPos));
            }

            //when there are no more tags, we reached the root level.
            if (tags.length == 0) {
              reachedRoot = true;
            }
          }
        } else {
          var _isValid = validateAttributeString(attrStr, options);
          if (_isValid !== true) {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(_isValid.err.code, _isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + _isValid.err.line));
          }

          //if the root level has been reached before ...
          if (reachedRoot === true) {
            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));
          } else if (options.unpairedTags.indexOf(tagName) !== -1) {
            //don't push into stack
          } else {
            tags.push({
              tagName: tagName,
              tagStartPos: tagStartPos
            });
          }
          tagFound = true;
        }

        //skip tag text value
        //It may include comments and CDATA value
        for (i++; i < xmlData.length; i++) {
          if (xmlData[i] === '<') {
            if (xmlData[i + 1] === '!') {
              //comment or CADATA
              i++;
              i = readCommentAndCDATA(xmlData, i);
              continue;
            } else if (xmlData[i + 1] === '?') {
              i = readPI(xmlData, ++i);
              if (i.err) return i;
            } else {
              break;
            }
          } else if (xmlData[i] === '&') {
            var afterAmp = validateAmpersand(xmlData, i);
            if (afterAmp == -1) return getErrorObject('InvalidChar', "char '&' is not expected.", getLineNumberForPosition(xmlData, i));
            i = afterAmp;
          } else {
            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {
              return getErrorObject('InvalidXml', "Extra text at the end", getLineNumberForPosition(xmlData, i));
            }
          }
        } //end of reading tag text value
        if (xmlData[i] === '<') {
          i--;
        }
      }
    } else {
      if (isWhiteSpace(xmlData[i])) {
        continue;
      }
      return getErrorObject('InvalidChar', "char '" + xmlData[i] + "' is not expected.", getLineNumberForPosition(xmlData, i));
    }
  }
  if (!tagFound) {
    return getErrorObject('InvalidXml', 'Start tag expected.', 1);
  } else if (tags.length == 1) {
    return getErrorObject('InvalidTag', "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
  } else if (tags.length > 0) {
    return getErrorObject('InvalidXml', "Invalid '" + JSON.stringify(tags.map(function (t) {
      return t.tagName;
    }), null, 4).replace(/\r?\n/g, '') + "' found.", {
      line: 1,
      col: 1
    });
  }
  return true;
};
function isWhiteSpace(_char) {
  return _char === ' ' || _char === '\t' || _char === '\n' || _char === '\r';
}
/**
 * Read Processing insstructions and skip
 * @param {*} xmlData
 * @param {*} i
 */
function readPI(xmlData, i) {
  var start = i;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] == '?' || xmlData[i] == ' ') {
      //tagname
      var tagname = xmlData.substr(start, i - start);
      if (i > 5 && tagname === 'xml') {
        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));
      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {
        //check if valid attribut string
        i++;
        break;
      } else {
        continue;
      }
    }
  }
  return i;
}
function readCommentAndCDATA(xmlData, i) {
  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {
    //comment
    for (i += 3; i < xmlData.length; i++) {
      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  } else if (xmlData.length > i + 8 && xmlData[i + 1] === 'D' && xmlData[i + 2] === 'O' && xmlData[i + 3] === 'C' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'Y' && xmlData[i + 6] === 'P' && xmlData[i + 7] === 'E') {
    var angleBracketsCount = 1;
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === '<') {
        angleBracketsCount++;
      } else if (xmlData[i] === '>') {
        angleBracketsCount--;
        if (angleBracketsCount === 0) {
          break;
        }
      }
    }
  } else if (xmlData.length > i + 9 && xmlData[i + 1] === '[' && xmlData[i + 2] === 'C' && xmlData[i + 3] === 'D' && xmlData[i + 4] === 'A' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'A' && xmlData[i + 7] === '[') {
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  }
  return i;
}
var doubleQuote = '"';
var singleQuote = "'";

/**
 * Keep reading xmlData until '<' is found outside the attribute value.
 * @param {string} xmlData
 * @param {number} i
 */
function readAttributeStr(xmlData, i) {
  var attrStr = '';
  var startChar = '';
  var tagClosed = false;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {
      if (startChar === '') {
        startChar = xmlData[i];
      } else if (startChar !== xmlData[i]) {
        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa
      } else {
        startChar = '';
      }
    } else if (xmlData[i] === '>') {
      if (startChar === '') {
        tagClosed = true;
        break;
      }
    }
    attrStr += xmlData[i];
  }
  if (startChar !== '') {
    return false;
  }
  return {
    value: attrStr,
    index: i,
    tagClosed: tagClosed
  };
}

/**
 * Select all the attributes whether valid or invalid.
 */
var validAttrStrRegxp = new RegExp('(\\s*)([^\\s=]+)(\\s*=)?(\\s*([\'"])(([\\s\\S])*?)\\5)?', 'g');

//attr, ="sd", a="amit's", a="sd"b="saf", ab  cd=""

function validateAttributeString(attrStr, options) {
  //console.log("start:"+attrStr+":end");

  //if(attrStr.trim().length === 0) return true; //empty string

  var matches = util.getAllMatches(attrStr, validAttrStrRegxp);
  var attrNames = {};
  for (var i = 0; i < matches.length; i++) {
    if (matches[i][1].length === 0) {
      //nospace before attribute name: a="sd"b="saf"
      return getErrorObject('InvalidAttr', "Attribute '" + matches[i][2] + "' has no space in starting.", getPositionFromMatch(matches[i]));
    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {
      return getErrorObject('InvalidAttr', "Attribute '" + matches[i][2] + "' is without value.", getPositionFromMatch(matches[i]));
    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {
      //independent attribute: ab
      return getErrorObject('InvalidAttr', "boolean attribute '" + matches[i][2] + "' is not allowed.", getPositionFromMatch(matches[i]));
    }
    /* else if(matches[i][6] === undefined){//attribute without value: ab=
                    return { err: { code:"InvalidAttr",msg:"attribute " + matches[i][2] + " has no value assigned."}};
                } */
    var attrName = matches[i][2];
    if (!validateAttrName(attrName)) {
      return getErrorObject('InvalidAttr', "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches[i]));
    }
    if (!attrNames.hasOwnProperty(attrName)) {
      //check for duplicate attribute.
      attrNames[attrName] = 1;
    } else {
      return getErrorObject('InvalidAttr', "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches[i]));
    }
  }
  return true;
}
function validateNumberAmpersand(xmlData, i) {
  var re = /\d/;
  if (xmlData[i] === 'x') {
    i++;
    re = /[\da-fA-F]/;
  }
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === ';') return i;
    if (!xmlData[i].match(re)) break;
  }
  return -1;
}
function validateAmpersand(xmlData, i) {
  // https://www.w3.org/TR/xml/#dt-charref
  i++;
  if (xmlData[i] === ';') return -1;
  if (xmlData[i] === '#') {
    i++;
    return validateNumberAmpersand(xmlData, i);
  }
  var count = 0;
  for (; i < xmlData.length; i++, count++) {
    if (xmlData[i].match(/\w/) && count < 20) continue;
    if (xmlData[i] === ';') break;
    return -1;
  }
  return i;
}
function getErrorObject(code, message, lineNumber) {
  return {
    err: {
      code: code,
      msg: message,
      line: lineNumber.line || lineNumber,
      col: lineNumber.col
    }
  };
}
function validateAttrName(attrName) {
  return util.isName(attrName);
}

// const startsWithXML = /^xml/i;

function validateTagName(tagname) {
  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;
}

//this function returns the line number for the character at the given index
function getLineNumberForPosition(xmlData, index) {
  var lines = xmlData.substring(0, index).split(/\r?\n/);
  return {
    line: lines.length,
    // column number is last line's length + 1, because column numbering starts at 1:
    col: lines[lines.length - 1].length + 1
  };
}

//this function returns the position of the first character of match within attrStr
function getPositionFromMatch(match) {
  return match.startIndex + match[1].length;
}

/***/ }),

/***/ 2132:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



//parse Empty Node as self closing node
var _defineProperty = (__webpack_require__(8681)["default"]);
var buildFromOrderedJs = __webpack_require__(5600);
var defaultOptions = {
  attributeNamePrefix: '@_',
  attributesGroupName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  cdataPropName: false,
  format: false,
  indentBy: '  ',
  suppressEmptyNode: false,
  suppressUnpairedNode: true,
  suppressBooleanAttributes: true,
  tagValueProcessor: function tagValueProcessor(key, a) {
    return a;
  },
  attributeValueProcessor: function attributeValueProcessor(attrName, a) {
    return a;
  },
  preserveOrder: false,
  commentPropName: false,
  unpairedTags: [],
  entities: [{
    regex: new RegExp("&", "g"),
    val: "&amp;"
  },
  //it must be on top
  {
    regex: new RegExp(">", "g"),
    val: "&gt;"
  }, {
    regex: new RegExp("<", "g"),
    val: "&lt;"
  }, {
    regex: new RegExp("\'", "g"),
    val: "&apos;"
  }, {
    regex: new RegExp("\"", "g"),
    val: "&quot;"
  }],
  processEntities: true,
  stopNodes: [],
  // transformTagName: false,
  // transformAttributeName: false,
  oneListGroup: false
};
function Builder(options) {
  this.options = Object.assign({}, defaultOptions, options);
  if (this.options.ignoreAttributes || this.options.attributesGroupName) {
    this.isAttribute = function /*a*/
    () {
      return false;
    };
  } else {
    this.attrPrefixLen = this.options.attributeNamePrefix.length;
    this.isAttribute = isAttribute;
  }
  this.processTextOrObjNode = processTextOrObjNode;
  if (this.options.format) {
    this.indentate = indentate;
    this.tagEndChar = '>\n';
    this.newLine = '\n';
  } else {
    this.indentate = function () {
      return '';
    };
    this.tagEndChar = '>';
    this.newLine = '';
  }
}
Builder.prototype.build = function (jObj) {
  if (this.options.preserveOrder) {
    return buildFromOrderedJs(jObj, this.options);
  } else {
    if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {
      jObj = _defineProperty({}, this.options.arrayNodeName, jObj);
    }
    return this.j2x(jObj, 0).val;
  }
};
Builder.prototype.j2x = function (jObj, level) {
  var attrStr = '';
  var val = '';
  for (var key in jObj) {
    if (typeof jObj[key] === 'undefined') {
      // supress undefined node
    } else if (jObj[key] === null) {
      if (key[0] === "?") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
    } else if (jObj[key] instanceof Date) {
      val += this.buildTextValNode(jObj[key], key, '', level);
    } else if (typeof jObj[key] !== 'object') {
      //premitive type
      var attr = this.isAttribute(key);
      if (attr) {
        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);
      } else {
        //tag value
        if (key === this.options.textNodeName) {
          var newval = this.options.tagValueProcessor(key, '' + jObj[key]);
          val += this.replaceEntitiesValue(newval);
        } else {
          val += this.buildTextValNode(jObj[key], key, '', level);
        }
      }
    } else if (Array.isArray(jObj[key])) {
      //repeated nodes
      var arrLen = jObj[key].length;
      var listTagVal = "";
      for (var j = 0; j < arrLen; j++) {
        var item = jObj[key][j];
        if (typeof item === 'undefined') {
          // supress undefined node
        } else if (item === null) {
          if (key[0] === "?") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
        } else if (typeof item === 'object') {
          if (this.options.oneListGroup) {
            listTagVal += this.j2x(item, level + 1).val;
          } else {
            listTagVal += this.processTextOrObjNode(item, key, level);
          }
        } else {
          listTagVal += this.buildTextValNode(item, key, '', level);
        }
      }
      if (this.options.oneListGroup) {
        listTagVal = this.buildObjectNode(listTagVal, key, '', level);
      }
      val += listTagVal;
    } else {
      //nested node
      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {
        var Ks = Object.keys(jObj[key]);
        var L = Ks.length;
        for (var _j = 0; _j < L; _j++) {
          attrStr += this.buildAttrPairStr(Ks[_j], '' + jObj[key][Ks[_j]]);
        }
      } else {
        val += this.processTextOrObjNode(jObj[key], key, level);
      }
    }
  }
  return {
    attrStr: attrStr,
    val: val
  };
};
Builder.prototype.buildAttrPairStr = function (attrName, val) {
  val = this.options.attributeValueProcessor(attrName, '' + val);
  val = this.replaceEntitiesValue(val);
  if (this.options.suppressBooleanAttributes && val === "true") {
    return ' ' + attrName;
  } else return ' ' + attrName + '="' + val + '"';
};
function processTextOrObjNode(object, key, level) {
  var result = this.j2x(object, level + 1);
  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {
    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);
  } else {
    return this.buildObjectNode(result.val, key, result.attrStr, level);
  }
}
Builder.prototype.buildObjectNode = function (val, key, attrStr, level) {
  if (val === "") {
    if (key[0] === "?") return this.indentate(level) + '<' + key + attrStr + '?' + this.tagEndChar;else {
      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;
    }
  } else {
    var tagEndExp = '</' + key + this.tagEndChar;
    var piClosingChar = "";
    if (key[0] === "?") {
      piClosingChar = "?";
      tagEndExp = "";
    }
    if (attrStr && val.indexOf('<') === -1) {
      return this.indentate(level) + '<' + key + attrStr + piClosingChar + '>' + val + tagEndExp;
    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {
      return this.indentate(level) + "<!--".concat(val, "-->") + this.newLine;
    } else {
      return this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar + val + this.indentate(level) + tagEndExp;
    }
  }
};
Builder.prototype.closeTag = function (key) {
  var closeTag = "";
  if (this.options.unpairedTags.indexOf(key) !== -1) {
    //unpaired
    if (!this.options.suppressUnpairedNode) closeTag = "/";
  } else if (this.options.suppressEmptyNode) {
    //empty
    closeTag = "/";
  } else {
    closeTag = "></".concat(key);
  }
  return closeTag;
};
function buildEmptyObjNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildObjectNode(val, key, attrStr, level);
  } else {
    if (key[0] === "?") return this.indentate(level) + '<' + key + attrStr + '?' + this.tagEndChar;else {
      return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
      // return this.buildTagStr(level,key, attrStr);
    }
  }
}
Builder.prototype.buildTextValNode = function (val, key, attrStr, level) {
  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {
    return this.indentate(level) + "<![CDATA[".concat(val, "]]>") + this.newLine;
  } else if (this.options.commentPropName !== false && key === this.options.commentPropName) {
    return this.indentate(level) + "<!--".concat(val, "-->") + this.newLine;
  } else if (key[0] === "?") {
    //PI tag
    return this.indentate(level) + '<' + key + attrStr + '?' + this.tagEndChar;
  } else {
    var textValue = this.options.tagValueProcessor(key, val);
    textValue = this.replaceEntitiesValue(textValue);
    if (textValue === '') {
      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;
    } else {
      return this.indentate(level) + '<' + key + attrStr + '>' + textValue + '</' + key + this.tagEndChar;
    }
  }
};
Builder.prototype.replaceEntitiesValue = function (textValue) {
  if (textValue && textValue.length > 0 && this.options.processEntities) {
    for (var i = 0; i < this.options.entities.length; i++) {
      var entity = this.options.entities[i];
      textValue = textValue.replace(entity.regex, entity.val);
    }
  }
  return textValue;
};
function indentate(level) {
  return this.options.indentBy.repeat(level);
}
function isAttribute(name /*, options*/) {
  if (name.startsWith(this.options.attributeNamePrefix)) {
    return name.substr(this.attrPrefixLen);
  } else {
    return false;
  }
}
module.exports = Builder;

/***/ }),

/***/ 5600:
/***/ ((module) => {

var EOL = "\n";

/**
 * 
 * @param {array} jArray 
 * @param {any} options 
 * @returns 
 */
function toXml(jArray, options) {
  var indentation = "";
  if (options.format && options.indentBy.length > 0) {
    indentation = EOL;
  }
  return arrToStr(jArray, options, "", indentation);
}
function arrToStr(arr, options, jPath, indentation) {
  var xmlStr = "";
  var isPreviousElementTag = false;
  for (var i = 0; i < arr.length; i++) {
    var tagObj = arr[i];
    var tagName = propName(tagObj);
    var newJPath = "";
    if (jPath.length === 0) newJPath = tagName;else newJPath = "".concat(jPath, ".").concat(tagName);
    if (tagName === options.textNodeName) {
      var tagText = tagObj[tagName];
      if (!isStopNode(newJPath, options)) {
        tagText = options.tagValueProcessor(tagName, tagText);
        tagText = replaceEntitiesValue(tagText, options);
      }
      if (isPreviousElementTag) {
        xmlStr += indentation;
      }
      xmlStr += tagText;
      isPreviousElementTag = false;
      continue;
    } else if (tagName === options.cdataPropName) {
      if (isPreviousElementTag) {
        xmlStr += indentation;
      }
      xmlStr += "<![CDATA[".concat(tagObj[tagName][0][options.textNodeName], "]]>");
      isPreviousElementTag = false;
      continue;
    } else if (tagName === options.commentPropName) {
      xmlStr += indentation + "<!--".concat(tagObj[tagName][0][options.textNodeName], "-->");
      isPreviousElementTag = true;
      continue;
    } else if (tagName[0] === "?") {
      var _attStr = attr_to_str(tagObj[":@"], options);
      var tempInd = tagName === "?xml" ? "" : indentation;
      var piTextNodeName = tagObj[tagName][0][options.textNodeName];
      piTextNodeName = piTextNodeName.length !== 0 ? " " + piTextNodeName : ""; //remove extra spacing
      xmlStr += tempInd + "<".concat(tagName).concat(piTextNodeName).concat(_attStr, "?>");
      isPreviousElementTag = true;
      continue;
    }
    var newIdentation = indentation;
    if (newIdentation !== "") {
      newIdentation += options.indentBy;
    }
    var attStr = attr_to_str(tagObj[":@"], options);
    var tagStart = indentation + "<".concat(tagName).concat(attStr);
    var tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);
    if (options.unpairedTags.indexOf(tagName) !== -1) {
      if (options.suppressUnpairedNode) xmlStr += tagStart + ">";else xmlStr += tagStart + "/>";
    } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {
      xmlStr += tagStart + "/>";
    } else if (tagValue && tagValue.endsWith(">")) {
      xmlStr += tagStart + ">".concat(tagValue).concat(indentation, "</").concat(tagName, ">");
    } else {
      xmlStr += tagStart + ">";
      if (tagValue && indentation !== "" && (tagValue.includes("/>") || tagValue.includes("</"))) {
        xmlStr += indentation + options.indentBy + tagValue + indentation;
      } else {
        xmlStr += tagValue;
      }
      xmlStr += "</".concat(tagName, ">");
    }
    isPreviousElementTag = true;
  }
  return xmlStr;
}
function propName(obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== ":@") return key;
  }
}
function attr_to_str(attrMap, options) {
  var attrStr = "";
  if (attrMap && !options.ignoreAttributes) {
    for (var attr in attrMap) {
      var attrVal = options.attributeValueProcessor(attr, attrMap[attr]);
      attrVal = replaceEntitiesValue(attrVal, options);
      if (attrVal === true && options.suppressBooleanAttributes) {
        attrStr += " ".concat(attr.substr(options.attributeNamePrefix.length));
      } else {
        attrStr += " ".concat(attr.substr(options.attributeNamePrefix.length), "=\"").concat(attrVal, "\"");
      }
    }
  }
  return attrStr;
}
function isStopNode(jPath, options) {
  jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);
  var tagName = jPath.substr(jPath.lastIndexOf(".") + 1);
  for (var index in options.stopNodes) {
    if (options.stopNodes[index] === jPath || options.stopNodes[index] === "*." + tagName) return true;
  }
  return false;
}
function replaceEntitiesValue(textValue, options) {
  if (textValue && textValue.length > 0 && options.processEntities) {
    for (var i = 0; i < options.entities.length; i++) {
      var entity = options.entities[i];
      textValue = textValue.replace(entity.regex, entity.val);
    }
  }
  return textValue;
}
module.exports = toXml;

/***/ }),

/***/ 2148:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _slicedToArray = (__webpack_require__(431)["default"]);
var util = __webpack_require__(8122);

//TODO: handle comments
function readDocType(xmlData, i) {
  var entities = {};
  if (xmlData[i + 3] === 'O' && xmlData[i + 4] === 'C' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'Y' && xmlData[i + 7] === 'P' && xmlData[i + 8] === 'E') {
    i = i + 9;
    var angleBracketsCount = 1;
    var hasBody = false,
      comment = false;
    var exp = "";
    for (; i < xmlData.length; i++) {
      if (xmlData[i] === '<' && !comment) {
        //Determine the tag type
        if (hasBody && isEntity(xmlData, i)) {
          i += 7;
          var _readEntityExp = readEntityExp(xmlData, i + 1);
          var _readEntityExp2 = _slicedToArray(_readEntityExp, 3);
          entityName = _readEntityExp2[0];
          val = _readEntityExp2[1];
          i = _readEntityExp2[2];
          if (val.indexOf("&") === -1)
            //Parameter entities are not supported
            entities[validateEntityName(entityName)] = {
              regx: RegExp("&".concat(entityName, ";"), "g"),
              val: val
            };
        } else if (hasBody && isElement(xmlData, i)) i += 8; //Not supported
        else if (hasBody && isAttlist(xmlData, i)) i += 8; //Not supported
        else if (hasBody && isNotation(xmlData, i)) i += 9; //Not supported
        else if (isComment) comment = true;else throw new Error("Invalid DOCTYPE");
        angleBracketsCount++;
        exp = "";
      } else if (xmlData[i] === '>') {
        //Read tag content
        if (comment) {
          if (xmlData[i - 1] === "-" && xmlData[i - 2] === "-") {
            comment = false;
            angleBracketsCount--;
          }
        } else {
          angleBracketsCount--;
        }
        if (angleBracketsCount === 0) {
          break;
        }
      } else if (xmlData[i] === '[') {
        hasBody = true;
      } else {
        exp += xmlData[i];
      }
    }
    if (angleBracketsCount !== 0) {
      throw new Error("Unclosed DOCTYPE");
    }
  } else {
    throw new Error("Invalid Tag instead of DOCTYPE");
  }
  return {
    entities: entities,
    i: i
  };
}
function readEntityExp(xmlData, i) {
  //External entities are not supported
  //    <!ENTITY ext SYSTEM "http://normal-website.com" >

  //Parameter entities are not supported
  //    <!ENTITY entityname "&anotherElement;">

  //Internal entities are supported
  //    <!ENTITY entityname "replacement text">

  //read EntityName
  var entityName = "";
  for (; i < xmlData.length && xmlData[i] !== "'" && xmlData[i] !== '"'; i++) {
    // if(xmlData[i] === " ") continue;
    // else 
    entityName += xmlData[i];
  }
  entityName = entityName.trim();
  if (entityName.indexOf(" ") !== -1) throw new Error("External entites are not supported");

  //read Entity Value
  var startChar = xmlData[i++];
  var val = "";
  for (; i < xmlData.length && xmlData[i] !== startChar; i++) {
    val += xmlData[i];
  }
  return [entityName, val, i];
}
function isComment(xmlData, i) {
  if (xmlData[i + 1] === '!' && xmlData[i + 2] === '-' && xmlData[i + 3] === '-') return true;
  return false;
}
function isEntity(xmlData, i) {
  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'N' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'I' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'Y') return true;
  return false;
}
function isElement(xmlData, i) {
  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'E' && xmlData[i + 3] === 'L' && xmlData[i + 4] === 'E' && xmlData[i + 5] === 'M' && xmlData[i + 6] === 'E' && xmlData[i + 7] === 'N' && xmlData[i + 8] === 'T') return true;
  return false;
}
function isAttlist(xmlData, i) {
  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'A' && xmlData[i + 3] === 'T' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'L' && xmlData[i + 6] === 'I' && xmlData[i + 7] === 'S' && xmlData[i + 8] === 'T') return true;
  return false;
}
function isNotation(xmlData, i) {
  if (xmlData[i + 1] === '!' && xmlData[i + 2] === 'N' && xmlData[i + 3] === 'O' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'A' && xmlData[i + 6] === 'T' && xmlData[i + 7] === 'I' && xmlData[i + 8] === 'O' && xmlData[i + 9] === 'N') return true;
  return false;
}
function validateEntityName(name) {
  if (util.isName(name)) return name;else throw new Error("Invalid entity name ".concat(name));
}
module.exports = readDocType;

/***/ }),

/***/ 968:
/***/ ((__unused_webpack_module, exports) => {

var defaultOptions = {
  preserveOrder: false,
  attributeNamePrefix: '@_',
  attributesGroupName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  removeNSPrefix: false,
  // remove NS from tag name or attribute name if true
  allowBooleanAttributes: false,
  //a tag can have attributes without any value
  //ignoreRootElement : false,
  parseTagValue: true,
  parseAttributeValue: false,
  trimValues: true,
  //Trim string values of tag and attributes
  cdataPropName: false,
  numberParseOptions: {
    hex: true,
    leadingZeros: true,
    eNotation: true
  },
  tagValueProcessor: function tagValueProcessor(tagName, val) {
    return val;
  },
  attributeValueProcessor: function attributeValueProcessor(attrName, val) {
    return val;
  },
  stopNodes: [],
  //nested tags will not be parsed even for errors
  alwaysCreateTextNode: false,
  isArray: function isArray() {
    return false;
  },
  commentPropName: false,
  unpairedTags: [],
  processEntities: true,
  htmlEntities: false,
  ignoreDeclaration: false,
  ignorePiTags: false,
  transformTagName: false,
  transformAttributeName: false,
  updateTag: function updateTag(tagName, jPath, attrs) {
    return tagName;
  }
  // skipEmptyListItem: false
};
var buildOptions = function buildOptions(options) {
  return Object.assign({}, defaultOptions, options);
};
exports.buildOptions = buildOptions;
exports.defaultOptions = defaultOptions;

/***/ }),

/***/ 6596:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



///@ts-check
var _defineProperty = (__webpack_require__(8681)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var util = __webpack_require__(8122);
var xmlNode = __webpack_require__(3388);
var readDocType = __webpack_require__(2148);
var toNumber = __webpack_require__(2253);
var regx = '<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)'.replace(/NAME/g, util.nameRegexp);

//const tagsRegx = new RegExp("<(\\/?[\\w:\\-\._]+)([^>]*)>(\\s*"+cdataRegx+")*([^<]+)?","g");
//const tagsRegx = new RegExp("<(\\/?)((\\w*:)?([\\w:\\-\._]+))([^>]*)>([^<]*)("+cdataRegx+"([^<]*))*([^<]+)?","g");
var OrderedObjParser = /*#__PURE__*/_createClass(function OrderedObjParser(options) {
  _classCallCheck(this, OrderedObjParser);
  this.options = options;
  this.currentNode = null;
  this.tagsNodeStack = [];
  this.docTypeEntities = {};
  this.lastEntities = {
    "apos": {
      regex: /&(apos|#39|#x27);/g,
      val: "'"
    },
    "gt": {
      regex: /&(gt|#62|#x3E);/g,
      val: ">"
    },
    "lt": {
      regex: /&(lt|#60|#x3C);/g,
      val: "<"
    },
    "quot": {
      regex: /&(quot|#34|#x22);/g,
      val: "\""
    }
  };
  this.ampEntity = {
    regex: /&(amp|#38|#x26);/g,
    val: "&"
  };
  this.htmlEntities = {
    "space": {
      regex: /&(nbsp|#160);/g,
      val: " "
    },
    // "lt" : { regex: /&(lt|#60);/g, val: "<" },
    // "gt" : { regex: /&(gt|#62);/g, val: ">" },
    // "amp" : { regex: /&(amp|#38);/g, val: "&" },
    // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
    // "apos" : { regex: /&(apos|#39);/g, val: "'" },
    "cent": {
      regex: /&(cent|#162);/g,
      val: "¢"
    },
    "pound": {
      regex: /&(pound|#163);/g,
      val: "£"
    },
    "yen": {
      regex: /&(yen|#165);/g,
      val: "¥"
    },
    "euro": {
      regex: /&(euro|#8364);/g,
      val: "€"
    },
    "copyright": {
      regex: /&(copy|#169);/g,
      val: "©"
    },
    "reg": {
      regex: /&(reg|#174);/g,
      val: "®"
    },
    "inr": {
      regex: /&(inr|#8377);/g,
      val: "₹"
    }
  };
  this.addExternalEntities = addExternalEntities;
  this.parseXml = parseXml;
  this.parseTextData = parseTextData;
  this.resolveNameSpace = resolveNameSpace;
  this.buildAttributesMap = buildAttributesMap;
  this.isItStopNode = isItStopNode;
  this.replaceEntitiesValue = replaceEntitiesValue;
  this.readStopNodeData = readStopNodeData;
  this.saveTextToParentTag = saveTextToParentTag;
  this.addChild = addChild;
});
function addExternalEntities(externalEntities) {
  var entKeys = Object.keys(externalEntities);
  for (var i = 0; i < entKeys.length; i++) {
    var ent = entKeys[i];
    this.lastEntities[ent] = {
      regex: new RegExp("&" + ent + ";", "g"),
      val: externalEntities[ent]
    };
  }
}

/**
 * @param {string} val
 * @param {string} tagName
 * @param {string} jPath
 * @param {boolean} dontTrim
 * @param {boolean} hasAttributes
 * @param {boolean} isLeafNode
 * @param {boolean} escapeEntities
 */
function parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
  if (val !== undefined) {
    if (this.options.trimValues && !dontTrim) {
      val = val.trim();
    }
    if (val.length > 0) {
      if (!escapeEntities) val = this.replaceEntitiesValue(val);
      var newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);
      if (newval === null || newval === undefined) {
        //don't parse
        return val;
      } else if (typeof newval !== typeof val || newval !== val) {
        //overwrite
        return newval;
      } else if (this.options.trimValues) {
        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
      } else {
        var trimmedVal = val.trim();
        if (trimmedVal === val) {
          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
        } else {
          return val;
        }
      }
    }
  }
}
function resolveNameSpace(tagname) {
  if (this.options.removeNSPrefix) {
    var tags = tagname.split(':');
    var prefix = tagname.charAt(0) === '/' ? '/' : '';
    if (tags[0] === 'xmlns') {
      return '';
    }
    if (tags.length === 2) {
      tagname = prefix + tags[1];
    }
  }
  return tagname;
}

//TODO: change regex to capture NS
//const attrsRegx = new RegExp("([\\w\\-\\.\\:]+)\\s*=\\s*(['\"])((.|\n)*?)\\2","gm");
var attrsRegx = new RegExp('([^\\s=]+)\\s*(=\\s*([\'"])([\\s\\S]*?)\\3)?', 'gm');
function buildAttributesMap(attrStr, jPath, tagName) {
  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {
    // attrStr = attrStr.replace(/\r?\n/g, ' ');
    //attrStr = attrStr || attrStr.trim();

    var matches = util.getAllMatches(attrStr, attrsRegx);
    var len = matches.length; //don't make it inline
    var attrs = {};
    for (var i = 0; i < len; i++) {
      var attrName = this.resolveNameSpace(matches[i][1]);
      var oldVal = matches[i][4];
      var aName = this.options.attributeNamePrefix + attrName;
      if (attrName.length) {
        if (this.options.transformAttributeName) {
          aName = this.options.transformAttributeName(aName);
        }
        if (aName === "__proto__") aName = "#__proto__";
        if (oldVal !== undefined) {
          if (this.options.trimValues) {
            oldVal = oldVal.trim();
          }
          oldVal = this.replaceEntitiesValue(oldVal);
          var newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
          if (newVal === null || newVal === undefined) {
            //don't parse
            attrs[aName] = oldVal;
          } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
            //overwrite
            attrs[aName] = newVal;
          } else {
            //parse
            attrs[aName] = parseValue(oldVal, this.options.parseAttributeValue, this.options.numberParseOptions);
          }
        } else if (this.options.allowBooleanAttributes) {
          attrs[aName] = true;
        }
      }
    }
    if (!Object.keys(attrs).length) {
      return;
    }
    if (this.options.attributesGroupName) {
      var attrCollection = {};
      attrCollection[this.options.attributesGroupName] = attrs;
      return attrCollection;
    }
    return attrs;
  }
}
var parseXml = function parseXml(xmlData) {
  xmlData = xmlData.replace(/\r\n?/g, "\n"); //TODO: remove this line
  var xmlObj = new xmlNode('!xml');
  var currentNode = xmlObj;
  var textData = "";
  var jPath = "";
  for (var i = 0; i < xmlData.length; i++) {
    //for each char in XML data
    var ch = xmlData[i];
    if (ch === '<') {
      // const nextIndex = i+1;
      // const _2ndChar = xmlData[nextIndex];
      if (xmlData[i + 1] === '/') {
        //Closing Tag
        var closeIndex = findClosingIndex(xmlData, ">", i, "Closing Tag is not closed.");
        var tagName = xmlData.substring(i + 2, closeIndex).trim();
        if (this.options.removeNSPrefix) {
          var colonIndex = tagName.indexOf(":");
          if (colonIndex !== -1) {
            tagName = tagName.substr(colonIndex + 1);
          }
        }
        if (this.options.transformTagName) {
          tagName = this.options.transformTagName(tagName);
        }
        if (currentNode) {
          textData = this.saveTextToParentTag(textData, currentNode, jPath);
        }

        //check if last tag of nested tag was unpaired tag
        var lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
        if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {
          throw new Error("Unpaired tag can not be used as closing tag: </".concat(tagName, ">"));
        }
        var propIndex = 0;
        if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.') - 1);
          this.tagsNodeStack.pop();
        } else {
          propIndex = jPath.lastIndexOf(".");
        }
        jPath = jPath.substring(0, propIndex);
        currentNode = this.tagsNodeStack.pop(); //avoid recursion, set the parent tag scope
        textData = "";
        i = closeIndex;
      } else if (xmlData[i + 1] === '?') {
        var tagData = readTagExp(xmlData, i, false, "?>");
        if (!tagData) throw new Error("Pi Tag is not closed.");
        textData = this.saveTextToParentTag(textData, currentNode, jPath);
        if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) {} else {
          var childNode = new xmlNode(tagData.tagName);
          childNode.add(this.options.textNodeName, "");
          if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
            childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
          }
          this.addChild(currentNode, childNode, jPath);
        }
        i = tagData.closeIndex + 1;
      } else if (xmlData.substr(i + 1, 3) === '!--') {
        var endIndex = findClosingIndex(xmlData, "-->", i + 4, "Comment is not closed.");
        if (this.options.commentPropName) {
          var comment = xmlData.substring(i + 4, endIndex - 2);
          textData = this.saveTextToParentTag(textData, currentNode, jPath);
          currentNode.add(this.options.commentPropName, [_defineProperty({}, this.options.textNodeName, comment)]);
        }
        i = endIndex;
      } else if (xmlData.substr(i + 1, 2) === '!D') {
        var result = readDocType(xmlData, i);
        this.docTypeEntities = result.entities;
        i = result.i;
      } else if (xmlData.substr(i + 1, 2) === '![') {
        var _closeIndex = findClosingIndex(xmlData, "]]>", i, "CDATA is not closed.") - 2;
        var tagExp = xmlData.substring(i + 9, _closeIndex);
        textData = this.saveTextToParentTag(textData, currentNode, jPath);

        //cdata should be set even if it is 0 length string
        if (this.options.cdataPropName) {
          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + "." + this.options.cdataPropName, true, false, true);
          // if(!val) val = "";
          currentNode.add(this.options.cdataPropName, [_defineProperty({}, this.options.textNodeName, tagExp)]);
        } else {
          var val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);
          if (val == undefined) val = "";
          currentNode.add(this.options.textNodeName, val);
        }
        i = _closeIndex + 2;
      } else {
        //Opening tag
        var _result = readTagExp(xmlData, i, this.options.removeNSPrefix);
        var _tagName = _result.tagName;
        var _tagExp = _result.tagExp;
        var attrExpPresent = _result.attrExpPresent;
        var _closeIndex2 = _result.closeIndex;
        if (this.options.transformTagName) {
          _tagName = this.options.transformTagName(_tagName);
        }

        //save text as child node
        if (currentNode && textData) {
          if (currentNode.tagname !== '!xml') {
            //when nested tag is found
            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
          }
        }

        //check if last tag was unpaired tag
        var lastTag = currentNode;
        if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
          currentNode = this.tagsNodeStack.pop();
          jPath = jPath.substring(0, jPath.lastIndexOf("."));
        }
        if (_tagName !== xmlObj.tagname) {
          jPath += jPath ? "." + _tagName : _tagName;
        }
        if (this.isItStopNode(this.options.stopNodes, jPath, _tagName)) {
          //TODO: namespace
          var tagContent = "";
          //self-closing tag
          if (_tagExp.length > 0 && _tagExp.lastIndexOf("/") === _tagExp.length - 1) {
            i = _result.closeIndex;
          }
          //unpaired tag
          else if (this.options.unpairedTags.indexOf(_tagName) !== -1) {
            i = _result.closeIndex;
          }
          //normal tag
          else {
            //read until closing tag is found
            var _result2 = this.readStopNodeData(xmlData, _tagName, _closeIndex2 + 1);
            if (!_result2) throw new Error("Unexpected end of ".concat(_tagName));
            i = _result2.i;
            tagContent = _result2.tagContent;
          }
          var _childNode = new xmlNode(_tagName);
          if (_tagName !== _tagExp && attrExpPresent) {
            _childNode[":@"] = this.buildAttributesMap(_tagExp, jPath, _tagName);
          }
          if (tagContent) {
            tagContent = this.parseTextData(tagContent, _tagName, jPath, true, attrExpPresent, true, true);
          }
          jPath = jPath.substr(0, jPath.lastIndexOf("."));
          _childNode.add(this.options.textNodeName, tagContent);
          this.addChild(currentNode, _childNode, jPath);
        } else {
          //selfClosing tag
          if (_tagExp.length > 0 && _tagExp.lastIndexOf("/") === _tagExp.length - 1) {
            if (_tagName[_tagName.length - 1] === "/") {
              //remove trailing '/'
              _tagName = _tagName.substr(0, _tagName.length - 1);
              _tagExp = _tagName;
            } else {
              _tagExp = _tagExp.substr(0, _tagExp.length - 1);
            }
            if (this.options.transformTagName) {
              _tagName = this.options.transformTagName(_tagName);
            }
            var _childNode2 = new xmlNode(_tagName);
            if (_tagName !== _tagExp && attrExpPresent) {
              _childNode2[":@"] = this.buildAttributesMap(_tagExp, jPath, _tagName);
            }
            this.addChild(currentNode, _childNode2, jPath);
            jPath = jPath.substr(0, jPath.lastIndexOf("."));
          }
          //opening tag
          else {
            var _childNode3 = new xmlNode(_tagName);
            this.tagsNodeStack.push(currentNode);
            if (_tagName !== _tagExp && attrExpPresent) {
              _childNode3[":@"] = this.buildAttributesMap(_tagExp, jPath, _tagName);
            }
            this.addChild(currentNode, _childNode3, jPath);
            currentNode = _childNode3;
          }
          textData = "";
          i = _closeIndex2;
        }
      }
    } else {
      textData += xmlData[i];
    }
  }
  return xmlObj.child;
};
function addChild(currentNode, childNode, jPath) {
  var result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
  if (result === false) {} else if (typeof result === "string") {
    childNode.tagname = result;
    currentNode.addChild(childNode);
  } else {
    currentNode.addChild(childNode);
  }
}
var replaceEntitiesValue = function replaceEntitiesValue(val) {
  if (this.options.processEntities) {
    for (var entityName in this.docTypeEntities) {
      var entity = this.docTypeEntities[entityName];
      val = val.replace(entity.regx, entity.val);
    }
    for (var _entityName in this.lastEntities) {
      var _entity = this.lastEntities[_entityName];
      val = val.replace(_entity.regex, _entity.val);
    }
    if (this.options.htmlEntities) {
      for (var _entityName2 in this.htmlEntities) {
        var _entity2 = this.htmlEntities[_entityName2];
        val = val.replace(_entity2.regex, _entity2.val);
      }
    }
    val = val.replace(this.ampEntity.regex, this.ampEntity.val);
  }
  return val;
};
function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
  if (textData) {
    //store previously collected data as textNode
    if (isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0;
    textData = this.parseTextData(textData, currentNode.tagname, jPath, false, currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false, isLeafNode);
    if (textData !== undefined && textData !== "") currentNode.add(this.options.textNodeName, textData);
    textData = "";
  }
  return textData;
}

//TODO: use jPath to simplify the logic
/**
 * 
 * @param {string[]} stopNodes 
 * @param {string} jPath
 * @param {string} currentTagName 
 */
function isItStopNode(stopNodes, jPath, currentTagName) {
  var allNodesExp = "*." + currentTagName;
  for (var stopNodePath in stopNodes) {
    var stopNodeExp = stopNodes[stopNodePath];
    if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;
  }
  return false;
}

/**
 * Returns the tag Expression and where it is ending handling single-double quotes situation
 * @param {string} xmlData 
 * @param {number} i starting index
 * @returns 
 */
function tagExpWithClosingIndex(xmlData, i) {
  var closingChar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ">";
  var attrBoundary;
  var tagExp = "";
  for (var index = i; index < xmlData.length; index++) {
    var ch = xmlData[index];
    if (attrBoundary) {
      if (ch === attrBoundary) attrBoundary = ""; //reset
    } else if (ch === '"' || ch === "'") {
      attrBoundary = ch;
    } else if (ch === closingChar[0]) {
      if (closingChar[1]) {
        if (xmlData[index + 1] === closingChar[1]) {
          return {
            data: tagExp,
            index: index
          };
        }
      } else {
        return {
          data: tagExp,
          index: index
        };
      }
    } else if (ch === '\t') {
      ch = " ";
    }
    tagExp += ch;
  }
}
function findClosingIndex(xmlData, str, i, errMsg) {
  var closingIndex = xmlData.indexOf(str, i);
  if (closingIndex === -1) {
    throw new Error(errMsg);
  } else {
    return closingIndex + str.length - 1;
  }
}
function readTagExp(xmlData, i, removeNSPrefix) {
  var closingChar = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ">";
  var result = tagExpWithClosingIndex(xmlData, i + 1, closingChar);
  if (!result) return;
  var tagExp = result.data;
  var closeIndex = result.index;
  var separatorIndex = tagExp.search(/\s/);
  var tagName = tagExp;
  var attrExpPresent = true;
  if (separatorIndex !== -1) {
    //separate tag name and attributes expression
    tagName = tagExp.substr(0, separatorIndex).replace(/\s\s*$/, '');
    tagExp = tagExp.substr(separatorIndex + 1);
  }
  if (removeNSPrefix) {
    var colonIndex = tagName.indexOf(":");
    if (colonIndex !== -1) {
      tagName = tagName.substr(colonIndex + 1);
      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);
    }
  }
  return {
    tagName: tagName,
    tagExp: tagExp,
    closeIndex: closeIndex,
    attrExpPresent: attrExpPresent
  };
}
/**
 * find paired tag for a stop node
 * @param {string} xmlData 
 * @param {string} tagName 
 * @param {number} i 
 */
function readStopNodeData(xmlData, tagName, i) {
  var startIndex = i;
  // Starting at 1 since we already have an open tag
  var openTagCount = 1;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === "<") {
      if (xmlData[i + 1] === "/") {
        //close tag
        var closeIndex = findClosingIndex(xmlData, ">", i, "".concat(tagName, " is not closed"));
        var closeTagName = xmlData.substring(i + 2, closeIndex).trim();
        if (closeTagName === tagName) {
          openTagCount--;
          if (openTagCount === 0) {
            return {
              tagContent: xmlData.substring(startIndex, i),
              i: closeIndex
            };
          }
        }
        i = closeIndex;
      } else if (xmlData[i + 1] === '?') {
        var _closeIndex3 = findClosingIndex(xmlData, "?>", i + 1, "StopNode is not closed.");
        i = _closeIndex3;
      } else if (xmlData.substr(i + 1, 3) === '!--') {
        var _closeIndex4 = findClosingIndex(xmlData, "-->", i + 3, "StopNode is not closed.");
        i = _closeIndex4;
      } else if (xmlData.substr(i + 1, 2) === '![') {
        var _closeIndex5 = findClosingIndex(xmlData, "]]>", i, "StopNode is not closed.") - 2;
        i = _closeIndex5;
      } else {
        var tagData = readTagExp(xmlData, i, '>');
        if (tagData) {
          var openTagName = tagData && tagData.tagName;
          if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
            openTagCount++;
          }
          i = tagData.closeIndex;
        }
      }
    }
  } //end for loop
}
function parseValue(val, shouldParse, options) {
  if (shouldParse && typeof val === 'string') {
    //console.log(options)
    var newval = val.trim();
    if (newval === 'true') return true;else if (newval === 'false') return false;else return toNumber(val, options);
  } else {
    if (util.isExist(val)) {
      return val;
    } else {
      return '';
    }
  }
}
module.exports = OrderedObjParser;

/***/ }),

/***/ 7911:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var _require = __webpack_require__(968),
  buildOptions = _require.buildOptions;
var OrderedObjParser = __webpack_require__(6596);
var _require2 = __webpack_require__(6961),
  prettify = _require2.prettify;
var validator = __webpack_require__(5178);
var XMLParser = /*#__PURE__*/function () {
  "use strict";

  function XMLParser(options) {
    _classCallCheck(this, XMLParser);
    this.externalEntities = {};
    this.options = buildOptions(options);
  }
  /**
   * Parse XML dats to JS object 
   * @param {string|Buffer} xmlData 
   * @param {boolean|Object} validationOption 
   */
  return _createClass(XMLParser, [{
    key: "parse",
    value: function parse(xmlData, validationOption) {
      if (typeof xmlData === "string") {} else if (xmlData.toString) {
        xmlData = xmlData.toString();
      } else {
        throw new Error("XML data is accepted in String or Bytes[] form.");
      }
      if (validationOption) {
        if (validationOption === true) validationOption = {}; //validate with default options

        var result = validator.validate(xmlData, validationOption);
        if (result !== true) {
          throw Error("".concat(result.err.msg, ":").concat(result.err.line, ":").concat(result.err.col));
        }
      }
      var orderedObjParser = new OrderedObjParser(this.options);
      orderedObjParser.addExternalEntities(this.externalEntities);
      var orderedResult = orderedObjParser.parseXml(xmlData);
      if (this.options.preserveOrder || orderedResult === undefined) return orderedResult;else return prettify(orderedResult, this.options);
    }

    /**
     * Add Entity which is not by default supported by this library
     * @param {string} key 
     * @param {string} value 
     */
  }, {
    key: "addEntity",
    value: function addEntity(key, value) {
      if (value.indexOf("&") !== -1) {
        throw new Error("Entity value can't have '&'");
      } else if (key.indexOf("&") !== -1 || key.indexOf(";") !== -1) {
        throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
      } else if (value === "&") {
        throw new Error("An entity with value '&' is not permitted");
      } else {
        this.externalEntities[key] = value;
      }
    }
  }]);
}();
module.exports = XMLParser;

/***/ }),

/***/ 6961:
/***/ ((__unused_webpack_module, exports) => {



/**
 * 
 * @param {array} node 
 * @param {any} options 
 * @returns 
 */
function prettify(node, options) {
  return compress(node, options);
}

/**
 * 
 * @param {array} arr 
 * @param {object} options 
 * @param {string} jPath 
 * @returns object
 */
function compress(arr, options, jPath) {
  var text;
  var compressedObj = {};
  for (var i = 0; i < arr.length; i++) {
    var tagObj = arr[i];
    var property = propName(tagObj);
    var newJpath = "";
    if (jPath === undefined) newJpath = property;else newJpath = jPath + "." + property;
    if (property === options.textNodeName) {
      if (text === undefined) text = tagObj[property];else text += "" + tagObj[property];
    } else if (property === undefined) {
      continue;
    } else if (tagObj[property]) {
      var val = compress(tagObj[property], options, newJpath);
      var isLeaf = isLeafTag(val, options);
      if (tagObj[":@"]) {
        assignAttributes(val, tagObj[":@"], newJpath, options);
      } else if (Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode) {
        val = val[options.textNodeName];
      } else if (Object.keys(val).length === 0) {
        if (options.alwaysCreateTextNode) val[options.textNodeName] = "";else val = "";
      }
      if (compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {
        if (!Array.isArray(compressedObj[property])) {
          compressedObj[property] = [compressedObj[property]];
        }
        compressedObj[property].push(val);
      } else {
        //TODO: if a node is not an array, then check if it should be an array
        //also determine if it is a leaf node
        if (options.isArray(property, newJpath, isLeaf)) {
          compressedObj[property] = [val];
        } else {
          compressedObj[property] = val;
        }
      }
    }
  }
  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;
  if (typeof text === "string") {
    if (text.length > 0) compressedObj[options.textNodeName] = text;
  } else if (text !== undefined) compressedObj[options.textNodeName] = text;
  return compressedObj;
}
function propName(obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== ":@") return key;
  }
}
function assignAttributes(obj, attrMap, jpath, options) {
  if (attrMap) {
    var keys = Object.keys(attrMap);
    var len = keys.length; //don't make it inline
    for (var i = 0; i < len; i++) {
      var atrrName = keys[i];
      if (options.isArray(atrrName, jpath + "." + atrrName, true, true)) {
        obj[atrrName] = [attrMap[atrrName]];
      } else {
        obj[atrrName] = attrMap[atrrName];
      }
    }
  }
}
function isLeafTag(obj, options) {
  var textNodeName = options.textNodeName;
  var propCount = Object.keys(obj).length;
  if (propCount === 0) {
    return true;
  }
  if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
    return true;
  }
  return false;
}
exports.prettify = prettify;

/***/ }),

/***/ 3388:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



var _defineProperty = (__webpack_require__(8681)["default"]);
var _classCallCheck = (__webpack_require__(5907)["default"]);
var _createClass = (__webpack_require__(6455)["default"]);
var XmlNode = /*#__PURE__*/function () {
  function XmlNode(tagname) {
    _classCallCheck(this, XmlNode);
    this.tagname = tagname;
    this.child = []; //nested tags, text, cdata, comments in order
    this[":@"] = {}; //attributes map
  }
  return _createClass(XmlNode, [{
    key: "add",
    value: function add(key, val) {
      // this.child.push( {name : key, val: val, isCdata: isCdata });
      if (key === "__proto__") key = "#__proto__";
      this.child.push(_defineProperty({}, key, val));
    }
  }, {
    key: "addChild",
    value: function addChild(node) {
      if (node.tagname === "__proto__") node.tagname = "#__proto__";
      if (node[":@"] && Object.keys(node[":@"]).length > 0) {
        this.child.push(_defineProperty(_defineProperty({}, node.tagname, node.child), ":@", node[":@"]));
      } else {
        this.child.push(_defineProperty({}, node.tagname, node.child));
      }
    }
  }]);
}();
;
module.exports = XmlNode;

/***/ }),

/***/ 8826:
/***/ ((module) => {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
};
function isBuffer(obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer(obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));
}

/***/ }),

/***/ 5151:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function () {
  var crypt = __webpack_require__(5012),
    utf8 = (__webpack_require__(6752).utf8),
    isBuffer = __webpack_require__(8826),
    bin = (__webpack_require__(6752).bin),
    // The core
    md5 = function md5(message, options) {
      // Convert to byte array
      if (message.constructor == String) {
        if (options && options.encoding === 'binary') message = bin.stringToBytes(message);else message = utf8.stringToBytes(message);
      } else if (isBuffer(message)) message = Array.prototype.slice.call(message, 0);else if (!Array.isArray(message) && message.constructor !== Uint8Array) message = message.toString();
      // else, assume byte array already

      var m = crypt.bytesToWords(message),
        l = message.length * 8,
        a = 1732584193,
        b = -271733879,
        c = -1732584194,
        d = 271733878;

      // Swap endian
      for (var i = 0; i < m.length; i++) {
        m[i] = (m[i] << 8 | m[i] >>> 24) & 0x00FF00FF | (m[i] << 24 | m[i] >>> 8) & 0xFF00FF00;
      }

      // Padding
      m[l >>> 5] |= 0x80 << l % 32;
      m[(l + 64 >>> 9 << 4) + 14] = l;

      // Method shortcuts
      var FF = md5._ff,
        GG = md5._gg,
        HH = md5._hh,
        II = md5._ii;
      for (var i = 0; i < m.length; i += 16) {
        var aa = a,
          bb = b,
          cc = c,
          dd = d;
        a = FF(a, b, c, d, m[i + 0], 7, -680876936);
        d = FF(d, a, b, c, m[i + 1], 12, -389564586);
        c = FF(c, d, a, b, m[i + 2], 17, 606105819);
        b = FF(b, c, d, a, m[i + 3], 22, -1044525330);
        a = FF(a, b, c, d, m[i + 4], 7, -176418897);
        d = FF(d, a, b, c, m[i + 5], 12, 1200080426);
        c = FF(c, d, a, b, m[i + 6], 17, -1473231341);
        b = FF(b, c, d, a, m[i + 7], 22, -45705983);
        a = FF(a, b, c, d, m[i + 8], 7, 1770035416);
        d = FF(d, a, b, c, m[i + 9], 12, -1958414417);
        c = FF(c, d, a, b, m[i + 10], 17, -42063);
        b = FF(b, c, d, a, m[i + 11], 22, -1990404162);
        a = FF(a, b, c, d, m[i + 12], 7, 1804603682);
        d = FF(d, a, b, c, m[i + 13], 12, -40341101);
        c = FF(c, d, a, b, m[i + 14], 17, -1502002290);
        b = FF(b, c, d, a, m[i + 15], 22, 1236535329);
        a = GG(a, b, c, d, m[i + 1], 5, -165796510);
        d = GG(d, a, b, c, m[i + 6], 9, -1069501632);
        c = GG(c, d, a, b, m[i + 11], 14, 643717713);
        b = GG(b, c, d, a, m[i + 0], 20, -373897302);
        a = GG(a, b, c, d, m[i + 5], 5, -701558691);
        d = GG(d, a, b, c, m[i + 10], 9, 38016083);
        c = GG(c, d, a, b, m[i + 15], 14, -660478335);
        b = GG(b, c, d, a, m[i + 4], 20, -405537848);
        a = GG(a, b, c, d, m[i + 9], 5, 568446438);
        d = GG(d, a, b, c, m[i + 14], 9, -1019803690);
        c = GG(c, d, a, b, m[i + 3], 14, -187363961);
        b = GG(b, c, d, a, m[i + 8], 20, 1163531501);
        a = GG(a, b, c, d, m[i + 13], 5, -1444681467);
        d = GG(d, a, b, c, m[i + 2], 9, -51403784);
        c = GG(c, d, a, b, m[i + 7], 14, 1735328473);
        b = GG(b, c, d, a, m[i + 12], 20, -1926607734);
        a = HH(a, b, c, d, m[i + 5], 4, -378558);
        d = HH(d, a, b, c, m[i + 8], 11, -2022574463);
        c = HH(c, d, a, b, m[i + 11], 16, 1839030562);
        b = HH(b, c, d, a, m[i + 14], 23, -35309556);
        a = HH(a, b, c, d, m[i + 1], 4, -1530992060);
        d = HH(d, a, b, c, m[i + 4], 11, 1272893353);
        c = HH(c, d, a, b, m[i + 7], 16, -155497632);
        b = HH(b, c, d, a, m[i + 10], 23, -1094730640);
        a = HH(a, b, c, d, m[i + 13], 4, 681279174);
        d = HH(d, a, b, c, m[i + 0], 11, -358537222);
        c = HH(c, d, a, b, m[i + 3], 16, -722521979);
        b = HH(b, c, d, a, m[i + 6], 23, 76029189);
        a = HH(a, b, c, d, m[i + 9], 4, -640364487);
        d = HH(d, a, b, c, m[i + 12], 11, -421815835);
        c = HH(c, d, a, b, m[i + 15], 16, 530742520);
        b = HH(b, c, d, a, m[i + 2], 23, -995338651);
        a = II(a, b, c, d, m[i + 0], 6, -198630844);
        d = II(d, a, b, c, m[i + 7], 10, 1126891415);
        c = II(c, d, a, b, m[i + 14], 15, -1416354905);
        b = II(b, c, d, a, m[i + 5], 21, -57434055);
        a = II(a, b, c, d, m[i + 12], 6, 1700485571);
        d = II(d, a, b, c, m[i + 3], 10, -1894986606);
        c = II(c, d, a, b, m[i + 10], 15, -1051523);
        b = II(b, c, d, a, m[i + 1], 21, -2054922799);
        a = II(a, b, c, d, m[i + 8], 6, 1873313359);
        d = II(d, a, b, c, m[i + 15], 10, -30611744);
        c = II(c, d, a, b, m[i + 6], 15, -1560198380);
        b = II(b, c, d, a, m[i + 13], 21, 1309151649);
        a = II(a, b, c, d, m[i + 4], 6, -145523070);
        d = II(d, a, b, c, m[i + 11], 10, -1120210379);
        c = II(c, d, a, b, m[i + 2], 15, 718787259);
        b = II(b, c, d, a, m[i + 9], 21, -343485551);
        a = a + aa >>> 0;
        b = b + bb >>> 0;
        c = c + cc >>> 0;
        d = d + dd >>> 0;
      }
      return crypt.endian([a, b, c, d]);
    };

  // Auxiliary functions
  md5._ff = function (a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + (x >>> 0) + t;
    return (n << s | n >>> 32 - s) + b;
  };
  md5._gg = function (a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + (x >>> 0) + t;
    return (n << s | n >>> 32 - s) + b;
  };
  md5._hh = function (a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + (x >>> 0) + t;
    return (n << s | n >>> 32 - s) + b;
  };
  md5._ii = function (a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
    return (n << s | n >>> 32 - s) + b;
  };

  // Package private blocksize
  md5._blocksize = 16;
  md5._digestsize = 16;
  module.exports = function (message, options) {
    if (message === undefined || message === null) throw new Error('Illegal argument ' + message);
    var digestbytes = crypt.wordsToBytes(md5(message, options));
    return options && options.asBytes ? digestbytes : options && options.asString ? bin.bytesToString(digestbytes) : crypt.bytesToHex(digestbytes);
  };
})();

/***/ }),

/***/ 31:
/***/ ((module) => {



/**
 * @param typeMap [Object] Map of MIME type -> Array[extensions]
 * @param ...
 */
function Mime() {
  this._types = Object.create(null);
  this._extensions = Object.create(null);
  for (var i = 0; i < arguments.length; i++) {
    this.define(arguments[i]);
  }
  this.define = this.define.bind(this);
  this.getType = this.getType.bind(this);
  this.getExtension = this.getExtension.bind(this);
}

/**
 * Define mimetype -> extension mappings.  Each key is a mime-type that maps
 * to an array of extensions associated with the type.  The first extension is
 * used as the default extension for the type.
 *
 * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});
 *
 * If a type declares an extension that has already been defined, an error will
 * be thrown.  To suppress this error and force the extension to be associated
 * with the new type, pass `force`=true.  Alternatively, you may prefix the
 * extension with "*" to map the type to extension, without mapping the
 * extension to the type.
 *
 * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});
 *
 *
 * @param map (Object) type definitions
 * @param force (Boolean) if true, force overriding of existing definitions
 */
Mime.prototype.define = function (typeMap, force) {
  for (var type in typeMap) {
    var extensions = typeMap[type].map(function (t) {
      return t.toLowerCase();
    });
    type = type.toLowerCase();
    for (var i = 0; i < extensions.length; i++) {
      var ext = extensions[i];

      // '*' prefix = not the preferred type for this extension.  So fixup the
      // extension, and skip it.
      if (ext[0] === '*') {
        continue;
      }
      if (!force && ext in this._types) {
        throw new Error('Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".');
      }
      this._types[ext] = type;
    }

    // Use first extension as default
    if (force || !this._extensions[type]) {
      var _ext = extensions[0];
      this._extensions[type] = _ext[0] !== '*' ? _ext : _ext.substr(1);
    }
  }
};

/**
 * Lookup a mime type based on extension
 */
Mime.prototype.getType = function (path) {
  path = String(path);
  var last = path.replace(/^.*[/\\]/, '').toLowerCase();
  var ext = last.replace(/^.*\./, '').toLowerCase();
  var hasPath = last.length < path.length;
  var hasDot = ext.length < last.length - 1;
  return (hasDot || !hasPath) && this._types[ext] || null;
};

/**
 * Return file extension associated with a mime type
 */
Mime.prototype.getExtension = function (type) {
  type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
  return type && this._extensions[type.toLowerCase()] || null;
};
module.exports = Mime;

/***/ }),

/***/ 7595:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



var Mime = __webpack_require__(31);
module.exports = new Mime(__webpack_require__(2768), __webpack_require__(5063));

/***/ }),

/***/ 5063:
/***/ ((module) => {

module.exports = {
  "application/prs.cww": ["cww"],
  "application/vnd.1000minds.decision-model+xml": ["1km"],
  "application/vnd.3gpp.pic-bw-large": ["plb"],
  "application/vnd.3gpp.pic-bw-small": ["psb"],
  "application/vnd.3gpp.pic-bw-var": ["pvb"],
  "application/vnd.3gpp2.tcap": ["tcap"],
  "application/vnd.3m.post-it-notes": ["pwn"],
  "application/vnd.accpac.simply.aso": ["aso"],
  "application/vnd.accpac.simply.imp": ["imp"],
  "application/vnd.acucobol": ["acu"],
  "application/vnd.acucorp": ["atc", "acutc"],
  "application/vnd.adobe.air-application-installer-package+zip": ["air"],
  "application/vnd.adobe.formscentral.fcdt": ["fcdt"],
  "application/vnd.adobe.fxp": ["fxp", "fxpl"],
  "application/vnd.adobe.xdp+xml": ["xdp"],
  "application/vnd.adobe.xfdf": ["xfdf"],
  "application/vnd.ahead.space": ["ahead"],
  "application/vnd.airzip.filesecure.azf": ["azf"],
  "application/vnd.airzip.filesecure.azs": ["azs"],
  "application/vnd.amazon.ebook": ["azw"],
  "application/vnd.americandynamics.acc": ["acc"],
  "application/vnd.amiga.ami": ["ami"],
  "application/vnd.android.package-archive": ["apk"],
  "application/vnd.anser-web-certificate-issue-initiation": ["cii"],
  "application/vnd.anser-web-funds-transfer-initiation": ["fti"],
  "application/vnd.antix.game-component": ["atx"],
  "application/vnd.apple.installer+xml": ["mpkg"],
  "application/vnd.apple.keynote": ["key"],
  "application/vnd.apple.mpegurl": ["m3u8"],
  "application/vnd.apple.numbers": ["numbers"],
  "application/vnd.apple.pages": ["pages"],
  "application/vnd.apple.pkpass": ["pkpass"],
  "application/vnd.aristanetworks.swi": ["swi"],
  "application/vnd.astraea-software.iota": ["iota"],
  "application/vnd.audiograph": ["aep"],
  "application/vnd.balsamiq.bmml+xml": ["bmml"],
  "application/vnd.blueice.multipass": ["mpm"],
  "application/vnd.bmi": ["bmi"],
  "application/vnd.businessobjects": ["rep"],
  "application/vnd.chemdraw+xml": ["cdxml"],
  "application/vnd.chipnuts.karaoke-mmd": ["mmd"],
  "application/vnd.cinderella": ["cdy"],
  "application/vnd.citationstyles.style+xml": ["csl"],
  "application/vnd.claymore": ["cla"],
  "application/vnd.cloanto.rp9": ["rp9"],
  "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"],
  "application/vnd.cluetrust.cartomobile-config": ["c11amc"],
  "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"],
  "application/vnd.commonspace": ["csp"],
  "application/vnd.contact.cmsg": ["cdbcmsg"],
  "application/vnd.cosmocaller": ["cmc"],
  "application/vnd.crick.clicker": ["clkx"],
  "application/vnd.crick.clicker.keyboard": ["clkk"],
  "application/vnd.crick.clicker.palette": ["clkp"],
  "application/vnd.crick.clicker.template": ["clkt"],
  "application/vnd.crick.clicker.wordbank": ["clkw"],
  "application/vnd.criticaltools.wbs+xml": ["wbs"],
  "application/vnd.ctc-posml": ["pml"],
  "application/vnd.cups-ppd": ["ppd"],
  "application/vnd.curl.car": ["car"],
  "application/vnd.curl.pcurl": ["pcurl"],
  "application/vnd.dart": ["dart"],
  "application/vnd.data-vision.rdz": ["rdz"],
  "application/vnd.dbf": ["dbf"],
  "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"],
  "application/vnd.dece.ttml+xml": ["uvt", "uvvt"],
  "application/vnd.dece.unspecified": ["uvx", "uvvx"],
  "application/vnd.dece.zip": ["uvz", "uvvz"],
  "application/vnd.denovo.fcselayout-link": ["fe_launch"],
  "application/vnd.dna": ["dna"],
  "application/vnd.dolby.mlp": ["mlp"],
  "application/vnd.dpgraph": ["dpg"],
  "application/vnd.dreamfactory": ["dfac"],
  "application/vnd.ds-keypoint": ["kpxx"],
  "application/vnd.dvb.ait": ["ait"],
  "application/vnd.dvb.service": ["svc"],
  "application/vnd.dynageo": ["geo"],
  "application/vnd.ecowin.chart": ["mag"],
  "application/vnd.enliven": ["nml"],
  "application/vnd.epson.esf": ["esf"],
  "application/vnd.epson.msf": ["msf"],
  "application/vnd.epson.quickanime": ["qam"],
  "application/vnd.epson.salt": ["slt"],
  "application/vnd.epson.ssf": ["ssf"],
  "application/vnd.eszigno3+xml": ["es3", "et3"],
  "application/vnd.ezpix-album": ["ez2"],
  "application/vnd.ezpix-package": ["ez3"],
  "application/vnd.fdf": ["fdf"],
  "application/vnd.fdsn.mseed": ["mseed"],
  "application/vnd.fdsn.seed": ["seed", "dataless"],
  "application/vnd.flographit": ["gph"],
  "application/vnd.fluxtime.clip": ["ftc"],
  "application/vnd.framemaker": ["fm", "frame", "maker", "book"],
  "application/vnd.frogans.fnc": ["fnc"],
  "application/vnd.frogans.ltf": ["ltf"],
  "application/vnd.fsc.weblaunch": ["fsc"],
  "application/vnd.fujitsu.oasys": ["oas"],
  "application/vnd.fujitsu.oasys2": ["oa2"],
  "application/vnd.fujitsu.oasys3": ["oa3"],
  "application/vnd.fujitsu.oasysgp": ["fg5"],
  "application/vnd.fujitsu.oasysprs": ["bh2"],
  "application/vnd.fujixerox.ddd": ["ddd"],
  "application/vnd.fujixerox.docuworks": ["xdw"],
  "application/vnd.fujixerox.docuworks.binder": ["xbd"],
  "application/vnd.fuzzysheet": ["fzs"],
  "application/vnd.genomatix.tuxedo": ["txd"],
  "application/vnd.geogebra.file": ["ggb"],
  "application/vnd.geogebra.tool": ["ggt"],
  "application/vnd.geometry-explorer": ["gex", "gre"],
  "application/vnd.geonext": ["gxt"],
  "application/vnd.geoplan": ["g2w"],
  "application/vnd.geospace": ["g3w"],
  "application/vnd.gmx": ["gmx"],
  "application/vnd.google-apps.document": ["gdoc"],
  "application/vnd.google-apps.presentation": ["gslides"],
  "application/vnd.google-apps.spreadsheet": ["gsheet"],
  "application/vnd.google-earth.kml+xml": ["kml"],
  "application/vnd.google-earth.kmz": ["kmz"],
  "application/vnd.grafeq": ["gqf", "gqs"],
  "application/vnd.groove-account": ["gac"],
  "application/vnd.groove-help": ["ghf"],
  "application/vnd.groove-identity-message": ["gim"],
  "application/vnd.groove-injector": ["grv"],
  "application/vnd.groove-tool-message": ["gtm"],
  "application/vnd.groove-tool-template": ["tpl"],
  "application/vnd.groove-vcard": ["vcg"],
  "application/vnd.hal+xml": ["hal"],
  "application/vnd.handheld-entertainment+xml": ["zmm"],
  "application/vnd.hbci": ["hbci"],
  "application/vnd.hhe.lesson-player": ["les"],
  "application/vnd.hp-hpgl": ["hpgl"],
  "application/vnd.hp-hpid": ["hpid"],
  "application/vnd.hp-hps": ["hps"],
  "application/vnd.hp-jlyt": ["jlt"],
  "application/vnd.hp-pcl": ["pcl"],
  "application/vnd.hp-pclxl": ["pclxl"],
  "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"],
  "application/vnd.ibm.minipay": ["mpy"],
  "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"],
  "application/vnd.ibm.rights-management": ["irm"],
  "application/vnd.ibm.secure-container": ["sc"],
  "application/vnd.iccprofile": ["icc", "icm"],
  "application/vnd.igloader": ["igl"],
  "application/vnd.immervision-ivp": ["ivp"],
  "application/vnd.immervision-ivu": ["ivu"],
  "application/vnd.insors.igm": ["igm"],
  "application/vnd.intercon.formnet": ["xpw", "xpx"],
  "application/vnd.intergeo": ["i2g"],
  "application/vnd.intu.qbo": ["qbo"],
  "application/vnd.intu.qfx": ["qfx"],
  "application/vnd.ipunplugged.rcprofile": ["rcprofile"],
  "application/vnd.irepository.package+xml": ["irp"],
  "application/vnd.is-xpr": ["xpr"],
  "application/vnd.isac.fcs": ["fcs"],
  "application/vnd.jam": ["jam"],
  "application/vnd.jcp.javame.midlet-rms": ["rms"],
  "application/vnd.jisp": ["jisp"],
  "application/vnd.joost.joda-archive": ["joda"],
  "application/vnd.kahootz": ["ktz", "ktr"],
  "application/vnd.kde.karbon": ["karbon"],
  "application/vnd.kde.kchart": ["chrt"],
  "application/vnd.kde.kformula": ["kfo"],
  "application/vnd.kde.kivio": ["flw"],
  "application/vnd.kde.kontour": ["kon"],
  "application/vnd.kde.kpresenter": ["kpr", "kpt"],
  "application/vnd.kde.kspread": ["ksp"],
  "application/vnd.kde.kword": ["kwd", "kwt"],
  "application/vnd.kenameaapp": ["htke"],
  "application/vnd.kidspiration": ["kia"],
  "application/vnd.kinar": ["kne", "knp"],
  "application/vnd.koan": ["skp", "skd", "skt", "skm"],
  "application/vnd.kodak-descriptor": ["sse"],
  "application/vnd.las.las+xml": ["lasxml"],
  "application/vnd.llamagraphics.life-balance.desktop": ["lbd"],
  "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"],
  "application/vnd.lotus-1-2-3": ["123"],
  "application/vnd.lotus-approach": ["apr"],
  "application/vnd.lotus-freelance": ["pre"],
  "application/vnd.lotus-notes": ["nsf"],
  "application/vnd.lotus-organizer": ["org"],
  "application/vnd.lotus-screencam": ["scm"],
  "application/vnd.lotus-wordpro": ["lwp"],
  "application/vnd.macports.portpkg": ["portpkg"],
  "application/vnd.mapbox-vector-tile": ["mvt"],
  "application/vnd.mcd": ["mcd"],
  "application/vnd.medcalcdata": ["mc1"],
  "application/vnd.mediastation.cdkey": ["cdkey"],
  "application/vnd.mfer": ["mwf"],
  "application/vnd.mfmp": ["mfm"],
  "application/vnd.micrografx.flo": ["flo"],
  "application/vnd.micrografx.igx": ["igx"],
  "application/vnd.mif": ["mif"],
  "application/vnd.mobius.daf": ["daf"],
  "application/vnd.mobius.dis": ["dis"],
  "application/vnd.mobius.mbk": ["mbk"],
  "application/vnd.mobius.mqy": ["mqy"],
  "application/vnd.mobius.msl": ["msl"],
  "application/vnd.mobius.plc": ["plc"],
  "application/vnd.mobius.txf": ["txf"],
  "application/vnd.mophun.application": ["mpn"],
  "application/vnd.mophun.certificate": ["mpc"],
  "application/vnd.mozilla.xul+xml": ["xul"],
  "application/vnd.ms-artgalry": ["cil"],
  "application/vnd.ms-cab-compressed": ["cab"],
  "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"],
  "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"],
  "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"],
  "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"],
  "application/vnd.ms-excel.template.macroenabled.12": ["xltm"],
  "application/vnd.ms-fontobject": ["eot"],
  "application/vnd.ms-htmlhelp": ["chm"],
  "application/vnd.ms-ims": ["ims"],
  "application/vnd.ms-lrm": ["lrm"],
  "application/vnd.ms-officetheme": ["thmx"],
  "application/vnd.ms-outlook": ["msg"],
  "application/vnd.ms-pki.seccat": ["cat"],
  "application/vnd.ms-pki.stl": ["*stl"],
  "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"],
  "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"],
  "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"],
  "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"],
  "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"],
  "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"],
  "application/vnd.ms-project": ["mpp", "mpt"],
  "application/vnd.ms-word.document.macroenabled.12": ["docm"],
  "application/vnd.ms-word.template.macroenabled.12": ["dotm"],
  "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"],
  "application/vnd.ms-wpl": ["wpl"],
  "application/vnd.ms-xpsdocument": ["xps"],
  "application/vnd.mseq": ["mseq"],
  "application/vnd.musician": ["mus"],
  "application/vnd.muvee.style": ["msty"],
  "application/vnd.mynfc": ["taglet"],
  "application/vnd.neurolanguage.nlu": ["nlu"],
  "application/vnd.nitf": ["ntf", "nitf"],
  "application/vnd.noblenet-directory": ["nnd"],
  "application/vnd.noblenet-sealer": ["nns"],
  "application/vnd.noblenet-web": ["nnw"],
  "application/vnd.nokia.n-gage.ac+xml": ["*ac"],
  "application/vnd.nokia.n-gage.data": ["ngdat"],
  "application/vnd.nokia.n-gage.symbian.install": ["n-gage"],
  "application/vnd.nokia.radio-preset": ["rpst"],
  "application/vnd.nokia.radio-presets": ["rpss"],
  "application/vnd.novadigm.edm": ["edm"],
  "application/vnd.novadigm.edx": ["edx"],
  "application/vnd.novadigm.ext": ["ext"],
  "application/vnd.oasis.opendocument.chart": ["odc"],
  "application/vnd.oasis.opendocument.chart-template": ["otc"],
  "application/vnd.oasis.opendocument.database": ["odb"],
  "application/vnd.oasis.opendocument.formula": ["odf"],
  "application/vnd.oasis.opendocument.formula-template": ["odft"],
  "application/vnd.oasis.opendocument.graphics": ["odg"],
  "application/vnd.oasis.opendocument.graphics-template": ["otg"],
  "application/vnd.oasis.opendocument.image": ["odi"],
  "application/vnd.oasis.opendocument.image-template": ["oti"],
  "application/vnd.oasis.opendocument.presentation": ["odp"],
  "application/vnd.oasis.opendocument.presentation-template": ["otp"],
  "application/vnd.oasis.opendocument.spreadsheet": ["ods"],
  "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"],
  "application/vnd.oasis.opendocument.text": ["odt"],
  "application/vnd.oasis.opendocument.text-master": ["odm"],
  "application/vnd.oasis.opendocument.text-template": ["ott"],
  "application/vnd.oasis.opendocument.text-web": ["oth"],
  "application/vnd.olpc-sugar": ["xo"],
  "application/vnd.oma.dd2+xml": ["dd2"],
  "application/vnd.openblox.game+xml": ["obgx"],
  "application/vnd.openofficeorg.extension": ["oxt"],
  "application/vnd.openstreetmap.data+xml": ["osm"],
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"],
  "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"],
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"],
  "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"],
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"],
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"],
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"],
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"],
  "application/vnd.osgeo.mapguide.package": ["mgp"],
  "application/vnd.osgi.dp": ["dp"],
  "application/vnd.osgi.subsystem": ["esa"],
  "application/vnd.palm": ["pdb", "pqa", "oprc"],
  "application/vnd.pawaafile": ["paw"],
  "application/vnd.pg.format": ["str"],
  "application/vnd.pg.osasli": ["ei6"],
  "application/vnd.picsel": ["efif"],
  "application/vnd.pmi.widget": ["wg"],
  "application/vnd.pocketlearn": ["plf"],
  "application/vnd.powerbuilder6": ["pbd"],
  "application/vnd.previewsystems.box": ["box"],
  "application/vnd.proteus.magazine": ["mgz"],
  "application/vnd.publishare-delta-tree": ["qps"],
  "application/vnd.pvi.ptid1": ["ptid"],
  "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"],
  "application/vnd.rar": ["rar"],
  "application/vnd.realvnc.bed": ["bed"],
  "application/vnd.recordare.musicxml": ["mxl"],
  "application/vnd.recordare.musicxml+xml": ["musicxml"],
  "application/vnd.rig.cryptonote": ["cryptonote"],
  "application/vnd.rim.cod": ["cod"],
  "application/vnd.rn-realmedia": ["rm"],
  "application/vnd.rn-realmedia-vbr": ["rmvb"],
  "application/vnd.route66.link66+xml": ["link66"],
  "application/vnd.sailingtracker.track": ["st"],
  "application/vnd.seemail": ["see"],
  "application/vnd.sema": ["sema"],
  "application/vnd.semd": ["semd"],
  "application/vnd.semf": ["semf"],
  "application/vnd.shana.informed.formdata": ["ifm"],
  "application/vnd.shana.informed.formtemplate": ["itp"],
  "application/vnd.shana.informed.interchange": ["iif"],
  "application/vnd.shana.informed.package": ["ipk"],
  "application/vnd.simtech-mindmapper": ["twd", "twds"],
  "application/vnd.smaf": ["mmf"],
  "application/vnd.smart.teacher": ["teacher"],
  "application/vnd.software602.filler.form+xml": ["fo"],
  "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"],
  "application/vnd.spotfire.dxp": ["dxp"],
  "application/vnd.spotfire.sfs": ["sfs"],
  "application/vnd.stardivision.calc": ["sdc"],
  "application/vnd.stardivision.draw": ["sda"],
  "application/vnd.stardivision.impress": ["sdd"],
  "application/vnd.stardivision.math": ["smf"],
  "application/vnd.stardivision.writer": ["sdw", "vor"],
  "application/vnd.stardivision.writer-global": ["sgl"],
  "application/vnd.stepmania.package": ["smzip"],
  "application/vnd.stepmania.stepchart": ["sm"],
  "application/vnd.sun.wadl+xml": ["wadl"],
  "application/vnd.sun.xml.calc": ["sxc"],
  "application/vnd.sun.xml.calc.template": ["stc"],
  "application/vnd.sun.xml.draw": ["sxd"],
  "application/vnd.sun.xml.draw.template": ["std"],
  "application/vnd.sun.xml.impress": ["sxi"],
  "application/vnd.sun.xml.impress.template": ["sti"],
  "application/vnd.sun.xml.math": ["sxm"],
  "application/vnd.sun.xml.writer": ["sxw"],
  "application/vnd.sun.xml.writer.global": ["sxg"],
  "application/vnd.sun.xml.writer.template": ["stw"],
  "application/vnd.sus-calendar": ["sus", "susp"],
  "application/vnd.svd": ["svd"],
  "application/vnd.symbian.install": ["sis", "sisx"],
  "application/vnd.syncml+xml": ["xsm"],
  "application/vnd.syncml.dm+wbxml": ["bdm"],
  "application/vnd.syncml.dm+xml": ["xdm"],
  "application/vnd.syncml.dmddf+xml": ["ddf"],
  "application/vnd.tao.intent-module-archive": ["tao"],
  "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"],
  "application/vnd.tmobile-livetv": ["tmo"],
  "application/vnd.trid.tpt": ["tpt"],
  "application/vnd.triscape.mxs": ["mxs"],
  "application/vnd.trueapp": ["tra"],
  "application/vnd.ufdl": ["ufd", "ufdl"],
  "application/vnd.uiq.theme": ["utz"],
  "application/vnd.umajin": ["umj"],
  "application/vnd.unity": ["unityweb"],
  "application/vnd.uoml+xml": ["uoml"],
  "application/vnd.vcx": ["vcx"],
  "application/vnd.visio": ["vsd", "vst", "vss", "vsw"],
  "application/vnd.visionary": ["vis"],
  "application/vnd.vsf": ["vsf"],
  "application/vnd.wap.wbxml": ["wbxml"],
  "application/vnd.wap.wmlc": ["wmlc"],
  "application/vnd.wap.wmlscriptc": ["wmlsc"],
  "application/vnd.webturbo": ["wtb"],
  "application/vnd.wolfram.player": ["nbp"],
  "application/vnd.wordperfect": ["wpd"],
  "application/vnd.wqd": ["wqd"],
  "application/vnd.wt.stf": ["stf"],
  "application/vnd.xara": ["xar"],
  "application/vnd.xfdl": ["xfdl"],
  "application/vnd.yamaha.hv-dic": ["hvd"],
  "application/vnd.yamaha.hv-script": ["hvs"],
  "application/vnd.yamaha.hv-voice": ["hvp"],
  "application/vnd.yamaha.openscoreformat": ["osf"],
  "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"],
  "application/vnd.yamaha.smaf-audio": ["saf"],
  "application/vnd.yamaha.smaf-phrase": ["spf"],
  "application/vnd.yellowriver-custom-menu": ["cmp"],
  "application/vnd.zul": ["zir", "zirz"],
  "application/vnd.zzazz.deck+xml": ["zaz"],
  "application/x-7z-compressed": ["7z"],
  "application/x-abiword": ["abw"],
  "application/x-ace-compressed": ["ace"],
  "application/x-apple-diskimage": ["*dmg"],
  "application/x-arj": ["arj"],
  "application/x-authorware-bin": ["aab", "x32", "u32", "vox"],
  "application/x-authorware-map": ["aam"],
  "application/x-authorware-seg": ["aas"],
  "application/x-bcpio": ["bcpio"],
  "application/x-bdoc": ["*bdoc"],
  "application/x-bittorrent": ["torrent"],
  "application/x-blorb": ["blb", "blorb"],
  "application/x-bzip": ["bz"],
  "application/x-bzip2": ["bz2", "boz"],
  "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"],
  "application/x-cdlink": ["vcd"],
  "application/x-cfs-compressed": ["cfs"],
  "application/x-chat": ["chat"],
  "application/x-chess-pgn": ["pgn"],
  "application/x-chrome-extension": ["crx"],
  "application/x-cocoa": ["cco"],
  "application/x-conference": ["nsc"],
  "application/x-cpio": ["cpio"],
  "application/x-csh": ["csh"],
  "application/x-debian-package": ["*deb", "udeb"],
  "application/x-dgc-compressed": ["dgc"],
  "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"],
  "application/x-doom": ["wad"],
  "application/x-dtbncx+xml": ["ncx"],
  "application/x-dtbook+xml": ["dtb"],
  "application/x-dtbresource+xml": ["res"],
  "application/x-dvi": ["dvi"],
  "application/x-envoy": ["evy"],
  "application/x-eva": ["eva"],
  "application/x-font-bdf": ["bdf"],
  "application/x-font-ghostscript": ["gsf"],
  "application/x-font-linux-psf": ["psf"],
  "application/x-font-pcf": ["pcf"],
  "application/x-font-snf": ["snf"],
  "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"],
  "application/x-freearc": ["arc"],
  "application/x-futuresplash": ["spl"],
  "application/x-gca-compressed": ["gca"],
  "application/x-glulx": ["ulx"],
  "application/x-gnumeric": ["gnumeric"],
  "application/x-gramps-xml": ["gramps"],
  "application/x-gtar": ["gtar"],
  "application/x-hdf": ["hdf"],
  "application/x-httpd-php": ["php"],
  "application/x-install-instructions": ["install"],
  "application/x-iso9660-image": ["*iso"],
  "application/x-iwork-keynote-sffkey": ["*key"],
  "application/x-iwork-numbers-sffnumbers": ["*numbers"],
  "application/x-iwork-pages-sffpages": ["*pages"],
  "application/x-java-archive-diff": ["jardiff"],
  "application/x-java-jnlp-file": ["jnlp"],
  "application/x-keepass2": ["kdbx"],
  "application/x-latex": ["latex"],
  "application/x-lua-bytecode": ["luac"],
  "application/x-lzh-compressed": ["lzh", "lha"],
  "application/x-makeself": ["run"],
  "application/x-mie": ["mie"],
  "application/x-mobipocket-ebook": ["prc", "mobi"],
  "application/x-ms-application": ["application"],
  "application/x-ms-shortcut": ["lnk"],
  "application/x-ms-wmd": ["wmd"],
  "application/x-ms-wmz": ["wmz"],
  "application/x-ms-xbap": ["xbap"],
  "application/x-msaccess": ["mdb"],
  "application/x-msbinder": ["obd"],
  "application/x-mscardfile": ["crd"],
  "application/x-msclip": ["clp"],
  "application/x-msdos-program": ["*exe"],
  "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"],
  "application/x-msmediaview": ["mvb", "m13", "m14"],
  "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"],
  "application/x-msmoney": ["mny"],
  "application/x-mspublisher": ["pub"],
  "application/x-msschedule": ["scd"],
  "application/x-msterminal": ["trm"],
  "application/x-mswrite": ["wri"],
  "application/x-netcdf": ["nc", "cdf"],
  "application/x-ns-proxy-autoconfig": ["pac"],
  "application/x-nzb": ["nzb"],
  "application/x-perl": ["pl", "pm"],
  "application/x-pilot": ["*prc", "*pdb"],
  "application/x-pkcs12": ["p12", "pfx"],
  "application/x-pkcs7-certificates": ["p7b", "spc"],
  "application/x-pkcs7-certreqresp": ["p7r"],
  "application/x-rar-compressed": ["*rar"],
  "application/x-redhat-package-manager": ["rpm"],
  "application/x-research-info-systems": ["ris"],
  "application/x-sea": ["sea"],
  "application/x-sh": ["sh"],
  "application/x-shar": ["shar"],
  "application/x-shockwave-flash": ["swf"],
  "application/x-silverlight-app": ["xap"],
  "application/x-sql": ["sql"],
  "application/x-stuffit": ["sit"],
  "application/x-stuffitx": ["sitx"],
  "application/x-subrip": ["srt"],
  "application/x-sv4cpio": ["sv4cpio"],
  "application/x-sv4crc": ["sv4crc"],
  "application/x-t3vm-image": ["t3"],
  "application/x-tads": ["gam"],
  "application/x-tar": ["tar"],
  "application/x-tcl": ["tcl", "tk"],
  "application/x-tex": ["tex"],
  "application/x-tex-tfm": ["tfm"],
  "application/x-texinfo": ["texinfo", "texi"],
  "application/x-tgif": ["*obj"],
  "application/x-ustar": ["ustar"],
  "application/x-virtualbox-hdd": ["hdd"],
  "application/x-virtualbox-ova": ["ova"],
  "application/x-virtualbox-ovf": ["ovf"],
  "application/x-virtualbox-vbox": ["vbox"],
  "application/x-virtualbox-vbox-extpack": ["vbox-extpack"],
  "application/x-virtualbox-vdi": ["vdi"],
  "application/x-virtualbox-vhd": ["vhd"],
  "application/x-virtualbox-vmdk": ["vmdk"],
  "application/x-wais-source": ["src"],
  "application/x-web-app-manifest+json": ["webapp"],
  "application/x-x509-ca-cert": ["der", "crt", "pem"],
  "application/x-xfig": ["fig"],
  "application/x-xliff+xml": ["*xlf"],
  "application/x-xpinstall": ["xpi"],
  "application/x-xz": ["xz"],
  "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"],
  "audio/vnd.dece.audio": ["uva", "uvva"],
  "audio/vnd.digital-winds": ["eol"],
  "audio/vnd.dra": ["dra"],
  "audio/vnd.dts": ["dts"],
  "audio/vnd.dts.hd": ["dtshd"],
  "audio/vnd.lucent.voice": ["lvp"],
  "audio/vnd.ms-playready.media.pya": ["pya"],
  "audio/vnd.nuera.ecelp4800": ["ecelp4800"],
  "audio/vnd.nuera.ecelp7470": ["ecelp7470"],
  "audio/vnd.nuera.ecelp9600": ["ecelp9600"],
  "audio/vnd.rip": ["rip"],
  "audio/x-aac": ["aac"],
  "audio/x-aiff": ["aif", "aiff", "aifc"],
  "audio/x-caf": ["caf"],
  "audio/x-flac": ["flac"],
  "audio/x-m4a": ["*m4a"],
  "audio/x-matroska": ["mka"],
  "audio/x-mpegurl": ["m3u"],
  "audio/x-ms-wax": ["wax"],
  "audio/x-ms-wma": ["wma"],
  "audio/x-pn-realaudio": ["ram", "ra"],
  "audio/x-pn-realaudio-plugin": ["rmp"],
  "audio/x-realaudio": ["*ra"],
  "audio/x-wav": ["*wav"],
  "chemical/x-cdx": ["cdx"],
  "chemical/x-cif": ["cif"],
  "chemical/x-cmdf": ["cmdf"],
  "chemical/x-cml": ["cml"],
  "chemical/x-csml": ["csml"],
  "chemical/x-xyz": ["xyz"],
  "image/prs.btif": ["btif"],
  "image/prs.pti": ["pti"],
  "image/vnd.adobe.photoshop": ["psd"],
  "image/vnd.airzip.accelerator.azv": ["azv"],
  "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"],
  "image/vnd.djvu": ["djvu", "djv"],
  "image/vnd.dvb.subtitle": ["*sub"],
  "image/vnd.dwg": ["dwg"],
  "image/vnd.dxf": ["dxf"],
  "image/vnd.fastbidsheet": ["fbs"],
  "image/vnd.fpx": ["fpx"],
  "image/vnd.fst": ["fst"],
  "image/vnd.fujixerox.edmics-mmr": ["mmr"],
  "image/vnd.fujixerox.edmics-rlc": ["rlc"],
  "image/vnd.microsoft.icon": ["ico"],
  "image/vnd.ms-dds": ["dds"],
  "image/vnd.ms-modi": ["mdi"],
  "image/vnd.ms-photo": ["wdp"],
  "image/vnd.net-fpx": ["npx"],
  "image/vnd.pco.b16": ["b16"],
  "image/vnd.tencent.tap": ["tap"],
  "image/vnd.valve.source.texture": ["vtf"],
  "image/vnd.wap.wbmp": ["wbmp"],
  "image/vnd.xiff": ["xif"],
  "image/vnd.zbrush.pcx": ["pcx"],
  "image/x-3ds": ["3ds"],
  "image/x-cmu-raster": ["ras"],
  "image/x-cmx": ["cmx"],
  "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"],
  "image/x-icon": ["*ico"],
  "image/x-jng": ["jng"],
  "image/x-mrsid-image": ["sid"],
  "image/x-ms-bmp": ["*bmp"],
  "image/x-pcx": ["*pcx"],
  "image/x-pict": ["pic", "pct"],
  "image/x-portable-anymap": ["pnm"],
  "image/x-portable-bitmap": ["pbm"],
  "image/x-portable-graymap": ["pgm"],
  "image/x-portable-pixmap": ["ppm"],
  "image/x-rgb": ["rgb"],
  "image/x-tga": ["tga"],
  "image/x-xbitmap": ["xbm"],
  "image/x-xpixmap": ["xpm"],
  "image/x-xwindowdump": ["xwd"],
  "message/vnd.wfa.wsc": ["wsc"],
  "model/vnd.collada+xml": ["dae"],
  "model/vnd.dwf": ["dwf"],
  "model/vnd.gdl": ["gdl"],
  "model/vnd.gtw": ["gtw"],
  "model/vnd.mts": ["mts"],
  "model/vnd.opengex": ["ogex"],
  "model/vnd.parasolid.transmit.binary": ["x_b"],
  "model/vnd.parasolid.transmit.text": ["x_t"],
  "model/vnd.sap.vds": ["vds"],
  "model/vnd.usdz+zip": ["usdz"],
  "model/vnd.valve.source.compiled-map": ["bsp"],
  "model/vnd.vtu": ["vtu"],
  "text/prs.lines.tag": ["dsc"],
  "text/vnd.curl": ["curl"],
  "text/vnd.curl.dcurl": ["dcurl"],
  "text/vnd.curl.mcurl": ["mcurl"],
  "text/vnd.curl.scurl": ["scurl"],
  "text/vnd.dvb.subtitle": ["sub"],
  "text/vnd.fly": ["fly"],
  "text/vnd.fmi.flexstor": ["flx"],
  "text/vnd.graphviz": ["gv"],
  "text/vnd.in3d.3dml": ["3dml"],
  "text/vnd.in3d.spot": ["spot"],
  "text/vnd.sun.j2me.app-descriptor": ["jad"],
  "text/vnd.wap.wml": ["wml"],
  "text/vnd.wap.wmlscript": ["wmls"],
  "text/x-asm": ["s", "asm"],
  "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"],
  "text/x-component": ["htc"],
  "text/x-fortran": ["f", "for", "f77", "f90"],
  "text/x-handlebars-template": ["hbs"],
  "text/x-java-source": ["java"],
  "text/x-lua": ["lua"],
  "text/x-markdown": ["mkd"],
  "text/x-nfo": ["nfo"],
  "text/x-opml": ["opml"],
  "text/x-org": ["*org"],
  "text/x-pascal": ["p", "pas"],
  "text/x-processing": ["pde"],
  "text/x-sass": ["sass"],
  "text/x-scss": ["scss"],
  "text/x-setext": ["etx"],
  "text/x-sfv": ["sfv"],
  "text/x-suse-ymp": ["ymp"],
  "text/x-uuencode": ["uu"],
  "text/x-vcalendar": ["vcs"],
  "text/x-vcard": ["vcf"],
  "video/vnd.dece.hd": ["uvh", "uvvh"],
  "video/vnd.dece.mobile": ["uvm", "uvvm"],
  "video/vnd.dece.pd": ["uvp", "uvvp"],
  "video/vnd.dece.sd": ["uvs", "uvvs"],
  "video/vnd.dece.video": ["uvv", "uvvv"],
  "video/vnd.dvb.file": ["dvb"],
  "video/vnd.fvt": ["fvt"],
  "video/vnd.mpegurl": ["mxu", "m4u"],
  "video/vnd.ms-playready.media.pyv": ["pyv"],
  "video/vnd.uvvu.mp4": ["uvu", "uvvu"],
  "video/vnd.vivo": ["viv"],
  "video/x-f4v": ["f4v"],
  "video/x-fli": ["fli"],
  "video/x-flv": ["flv"],
  "video/x-m4v": ["m4v"],
  "video/x-matroska": ["mkv", "mk3d", "mks"],
  "video/x-mng": ["mng"],
  "video/x-ms-asf": ["asf", "asx"],
  "video/x-ms-vob": ["vob"],
  "video/x-ms-wm": ["wm"],
  "video/x-ms-wmv": ["wmv"],
  "video/x-ms-wmx": ["wmx"],
  "video/x-ms-wvx": ["wvx"],
  "video/x-msvideo": ["avi"],
  "video/x-sgi-movie": ["movie"],
  "video/x-smv": ["smv"],
  "x-conference/x-cooltalk": ["ice"]
};

/***/ }),

/***/ 2768:
/***/ ((module) => {

module.exports = {
  "application/andrew-inset": ["ez"],
  "application/applixware": ["aw"],
  "application/atom+xml": ["atom"],
  "application/atomcat+xml": ["atomcat"],
  "application/atomdeleted+xml": ["atomdeleted"],
  "application/atomsvc+xml": ["atomsvc"],
  "application/atsc-dwd+xml": ["dwd"],
  "application/atsc-held+xml": ["held"],
  "application/atsc-rsat+xml": ["rsat"],
  "application/bdoc": ["bdoc"],
  "application/calendar+xml": ["xcs"],
  "application/ccxml+xml": ["ccxml"],
  "application/cdfx+xml": ["cdfx"],
  "application/cdmi-capability": ["cdmia"],
  "application/cdmi-container": ["cdmic"],
  "application/cdmi-domain": ["cdmid"],
  "application/cdmi-object": ["cdmio"],
  "application/cdmi-queue": ["cdmiq"],
  "application/cu-seeme": ["cu"],
  "application/dash+xml": ["mpd"],
  "application/davmount+xml": ["davmount"],
  "application/docbook+xml": ["dbk"],
  "application/dssc+der": ["dssc"],
  "application/dssc+xml": ["xdssc"],
  "application/ecmascript": ["es", "ecma"],
  "application/emma+xml": ["emma"],
  "application/emotionml+xml": ["emotionml"],
  "application/epub+zip": ["epub"],
  "application/exi": ["exi"],
  "application/express": ["exp"],
  "application/fdt+xml": ["fdt"],
  "application/font-tdpfr": ["pfr"],
  "application/geo+json": ["geojson"],
  "application/gml+xml": ["gml"],
  "application/gpx+xml": ["gpx"],
  "application/gxf": ["gxf"],
  "application/gzip": ["gz"],
  "application/hjson": ["hjson"],
  "application/hyperstudio": ["stk"],
  "application/inkml+xml": ["ink", "inkml"],
  "application/ipfix": ["ipfix"],
  "application/its+xml": ["its"],
  "application/java-archive": ["jar", "war", "ear"],
  "application/java-serialized-object": ["ser"],
  "application/java-vm": ["class"],
  "application/javascript": ["js", "mjs"],
  "application/json": ["json", "map"],
  "application/json5": ["json5"],
  "application/jsonml+json": ["jsonml"],
  "application/ld+json": ["jsonld"],
  "application/lgr+xml": ["lgr"],
  "application/lost+xml": ["lostxml"],
  "application/mac-binhex40": ["hqx"],
  "application/mac-compactpro": ["cpt"],
  "application/mads+xml": ["mads"],
  "application/manifest+json": ["webmanifest"],
  "application/marc": ["mrc"],
  "application/marcxml+xml": ["mrcx"],
  "application/mathematica": ["ma", "nb", "mb"],
  "application/mathml+xml": ["mathml"],
  "application/mbox": ["mbox"],
  "application/mediaservercontrol+xml": ["mscml"],
  "application/metalink+xml": ["metalink"],
  "application/metalink4+xml": ["meta4"],
  "application/mets+xml": ["mets"],
  "application/mmt-aei+xml": ["maei"],
  "application/mmt-usd+xml": ["musd"],
  "application/mods+xml": ["mods"],
  "application/mp21": ["m21", "mp21"],
  "application/mp4": ["mp4s", "m4p"],
  "application/msword": ["doc", "dot"],
  "application/mxf": ["mxf"],
  "application/n-quads": ["nq"],
  "application/n-triples": ["nt"],
  "application/node": ["cjs"],
  "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"],
  "application/oda": ["oda"],
  "application/oebps-package+xml": ["opf"],
  "application/ogg": ["ogx"],
  "application/omdoc+xml": ["omdoc"],
  "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"],
  "application/oxps": ["oxps"],
  "application/p2p-overlay+xml": ["relo"],
  "application/patch-ops-error+xml": ["xer"],
  "application/pdf": ["pdf"],
  "application/pgp-encrypted": ["pgp"],
  "application/pgp-signature": ["asc", "sig"],
  "application/pics-rules": ["prf"],
  "application/pkcs10": ["p10"],
  "application/pkcs7-mime": ["p7m", "p7c"],
  "application/pkcs7-signature": ["p7s"],
  "application/pkcs8": ["p8"],
  "application/pkix-attr-cert": ["ac"],
  "application/pkix-cert": ["cer"],
  "application/pkix-crl": ["crl"],
  "application/pkix-pkipath": ["pkipath"],
  "application/pkixcmp": ["pki"],
  "application/pls+xml": ["pls"],
  "application/postscript": ["ai", "eps", "ps"],
  "application/provenance+xml": ["provx"],
  "application/pskc+xml": ["pskcxml"],
  "application/raml+yaml": ["raml"],
  "application/rdf+xml": ["rdf", "owl"],
  "application/reginfo+xml": ["rif"],
  "application/relax-ng-compact-syntax": ["rnc"],
  "application/resource-lists+xml": ["rl"],
  "application/resource-lists-diff+xml": ["rld"],
  "application/rls-services+xml": ["rs"],
  "application/route-apd+xml": ["rapd"],
  "application/route-s-tsid+xml": ["sls"],
  "application/route-usd+xml": ["rusd"],
  "application/rpki-ghostbusters": ["gbr"],
  "application/rpki-manifest": ["mft"],
  "application/rpki-roa": ["roa"],
  "application/rsd+xml": ["rsd"],
  "application/rss+xml": ["rss"],
  "application/rtf": ["rtf"],
  "application/sbml+xml": ["sbml"],
  "application/scvp-cv-request": ["scq"],
  "application/scvp-cv-response": ["scs"],
  "application/scvp-vp-request": ["spq"],
  "application/scvp-vp-response": ["spp"],
  "application/sdp": ["sdp"],
  "application/senml+xml": ["senmlx"],
  "application/sensml+xml": ["sensmlx"],
  "application/set-payment-initiation": ["setpay"],
  "application/set-registration-initiation": ["setreg"],
  "application/shf+xml": ["shf"],
  "application/sieve": ["siv", "sieve"],
  "application/smil+xml": ["smi", "smil"],
  "application/sparql-query": ["rq"],
  "application/sparql-results+xml": ["srx"],
  "application/srgs": ["gram"],
  "application/srgs+xml": ["grxml"],
  "application/sru+xml": ["sru"],
  "application/ssdl+xml": ["ssdl"],
  "application/ssml+xml": ["ssml"],
  "application/swid+xml": ["swidtag"],
  "application/tei+xml": ["tei", "teicorpus"],
  "application/thraud+xml": ["tfi"],
  "application/timestamped-data": ["tsd"],
  "application/toml": ["toml"],
  "application/trig": ["trig"],
  "application/ttml+xml": ["ttml"],
  "application/ubjson": ["ubj"],
  "application/urc-ressheet+xml": ["rsheet"],
  "application/urc-targetdesc+xml": ["td"],
  "application/voicexml+xml": ["vxml"],
  "application/wasm": ["wasm"],
  "application/widget": ["wgt"],
  "application/winhlp": ["hlp"],
  "application/wsdl+xml": ["wsdl"],
  "application/wspolicy+xml": ["wspolicy"],
  "application/xaml+xml": ["xaml"],
  "application/xcap-att+xml": ["xav"],
  "application/xcap-caps+xml": ["xca"],
  "application/xcap-diff+xml": ["xdf"],
  "application/xcap-el+xml": ["xel"],
  "application/xcap-ns+xml": ["xns"],
  "application/xenc+xml": ["xenc"],
  "application/xhtml+xml": ["xhtml", "xht"],
  "application/xliff+xml": ["xlf"],
  "application/xml": ["xml", "xsl", "xsd", "rng"],
  "application/xml-dtd": ["dtd"],
  "application/xop+xml": ["xop"],
  "application/xproc+xml": ["xpl"],
  "application/xslt+xml": ["*xsl", "xslt"],
  "application/xspf+xml": ["xspf"],
  "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"],
  "application/yang": ["yang"],
  "application/yin+xml": ["yin"],
  "application/zip": ["zip"],
  "audio/3gpp": ["*3gpp"],
  "audio/adpcm": ["adp"],
  "audio/amr": ["amr"],
  "audio/basic": ["au", "snd"],
  "audio/midi": ["mid", "midi", "kar", "rmi"],
  "audio/mobile-xmf": ["mxmf"],
  "audio/mp3": ["*mp3"],
  "audio/mp4": ["m4a", "mp4a"],
  "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"],
  "audio/ogg": ["oga", "ogg", "spx", "opus"],
  "audio/s3m": ["s3m"],
  "audio/silk": ["sil"],
  "audio/wav": ["wav"],
  "audio/wave": ["*wav"],
  "audio/webm": ["weba"],
  "audio/xm": ["xm"],
  "font/collection": ["ttc"],
  "font/otf": ["otf"],
  "font/ttf": ["ttf"],
  "font/woff": ["woff"],
  "font/woff2": ["woff2"],
  "image/aces": ["exr"],
  "image/apng": ["apng"],
  "image/avif": ["avif"],
  "image/bmp": ["bmp"],
  "image/cgm": ["cgm"],
  "image/dicom-rle": ["drle"],
  "image/emf": ["emf"],
  "image/fits": ["fits"],
  "image/g3fax": ["g3"],
  "image/gif": ["gif"],
  "image/heic": ["heic"],
  "image/heic-sequence": ["heics"],
  "image/heif": ["heif"],
  "image/heif-sequence": ["heifs"],
  "image/hej2k": ["hej2"],
  "image/hsj2": ["hsj2"],
  "image/ief": ["ief"],
  "image/jls": ["jls"],
  "image/jp2": ["jp2", "jpg2"],
  "image/jpeg": ["jpeg", "jpg", "jpe"],
  "image/jph": ["jph"],
  "image/jphc": ["jhc"],
  "image/jpm": ["jpm"],
  "image/jpx": ["jpx", "jpf"],
  "image/jxr": ["jxr"],
  "image/jxra": ["jxra"],
  "image/jxrs": ["jxrs"],
  "image/jxs": ["jxs"],
  "image/jxsc": ["jxsc"],
  "image/jxsi": ["jxsi"],
  "image/jxss": ["jxss"],
  "image/ktx": ["ktx"],
  "image/ktx2": ["ktx2"],
  "image/png": ["png"],
  "image/sgi": ["sgi"],
  "image/svg+xml": ["svg", "svgz"],
  "image/t38": ["t38"],
  "image/tiff": ["tif", "tiff"],
  "image/tiff-fx": ["tfx"],
  "image/webp": ["webp"],
  "image/wmf": ["wmf"],
  "message/disposition-notification": ["disposition-notification"],
  "message/global": ["u8msg"],
  "message/global-delivery-status": ["u8dsn"],
  "message/global-disposition-notification": ["u8mdn"],
  "message/global-headers": ["u8hdr"],
  "message/rfc822": ["eml", "mime"],
  "model/3mf": ["3mf"],
  "model/gltf+json": ["gltf"],
  "model/gltf-binary": ["glb"],
  "model/iges": ["igs", "iges"],
  "model/mesh": ["msh", "mesh", "silo"],
  "model/mtl": ["mtl"],
  "model/obj": ["obj"],
  "model/step+xml": ["stpx"],
  "model/step+zip": ["stpz"],
  "model/step-xml+zip": ["stpxz"],
  "model/stl": ["stl"],
  "model/vrml": ["wrl", "vrml"],
  "model/x3d+binary": ["*x3db", "x3dbz"],
  "model/x3d+fastinfoset": ["x3db"],
  "model/x3d+vrml": ["*x3dv", "x3dvz"],
  "model/x3d+xml": ["x3d", "x3dz"],
  "model/x3d-vrml": ["x3dv"],
  "text/cache-manifest": ["appcache", "manifest"],
  "text/calendar": ["ics", "ifb"],
  "text/coffeescript": ["coffee", "litcoffee"],
  "text/css": ["css"],
  "text/csv": ["csv"],
  "text/html": ["html", "htm", "shtml"],
  "text/jade": ["jade"],
  "text/jsx": ["jsx"],
  "text/less": ["less"],
  "text/markdown": ["markdown", "md"],
  "text/mathml": ["mml"],
  "text/mdx": ["mdx"],
  "text/n3": ["n3"],
  "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"],
  "text/richtext": ["rtx"],
  "text/rtf": ["*rtf"],
  "text/sgml": ["sgml", "sgm"],
  "text/shex": ["shex"],
  "text/slim": ["slim", "slm"],
  "text/spdx": ["spdx"],
  "text/stylus": ["stylus", "styl"],
  "text/tab-separated-values": ["tsv"],
  "text/troff": ["t", "tr", "roff", "man", "me", "ms"],
  "text/turtle": ["ttl"],
  "text/uri-list": ["uri", "uris", "urls"],
  "text/vcard": ["vcard"],
  "text/vtt": ["vtt"],
  "text/xml": ["*xml"],
  "text/yaml": ["yaml", "yml"],
  "video/3gpp": ["3gp", "3gpp"],
  "video/3gpp2": ["3g2"],
  "video/h261": ["h261"],
  "video/h263": ["h263"],
  "video/h264": ["h264"],
  "video/iso.segment": ["m4s"],
  "video/jpeg": ["jpgv"],
  "video/jpm": ["*jpm", "jpgm"],
  "video/mj2": ["mj2", "mjp2"],
  "video/mp2t": ["ts"],
  "video/mp4": ["mp4", "mp4v", "mpg4"],
  "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"],
  "video/ogg": ["ogv"],
  "video/quicktime": ["qt", "mov"],
  "video/webm": ["webm"]
};

/***/ }),

/***/ 2253:
/***/ ((module) => {

var hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
var numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;
// const octRegex = /0x[a-z0-9]+/;
// const binRegex = /0x[a-z0-9]+/;

//polyfill
if (!Number.parseInt && window.parseInt) {
  Number.parseInt = window.parseInt;
}
if (!Number.parseFloat && window.parseFloat) {
  Number.parseFloat = window.parseFloat;
}
var consider = {
  hex: true,
  leadingZeros: true,
  decimalPoint: "\.",
  eNotation: true
  //skipLike: /regex/
};
function toNumber(str) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  // const options = Object.assign({}, consider);
  // if(opt.leadingZeros === false){
  //     options.leadingZeros = false;
  // }else if(opt.hex === false){
  //     options.hex = false;
  // }

  options = Object.assign({}, consider, options);
  if (!str || typeof str !== "string") return str;
  var trimmedStr = str.trim();
  // if(trimmedStr === "0.0") return 0;
  // else if(trimmedStr === "+0.0") return 0;
  // else if(trimmedStr === "-0.0") return -0;

  if (options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;else if (options.hex && hexRegex.test(trimmedStr)) {
    return Number.parseInt(trimmedStr, 16);
    // } else if (options.parseOct && octRegex.test(str)) {
    //     return Number.parseInt(val, 8);
    // }else if (options.parseBin && binRegex.test(str)) {
    //     return Number.parseInt(val, 2);
  } else {
    //separate negative sign, leading zeros, and rest number
    var match = numRegex.exec(trimmedStr);
    if (match) {
      var sign = match[1];
      var leadingZeros = match[2];
      var numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros
      //trim ending zeros for floating number

      var eNotation = match[4] || match[6];
      if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== ".") return str; //-0123
      else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== ".") return str; //0123
      else {
        //no leading zeros or leading zeros are allowed
        var num = Number(trimmedStr);
        var numStr = "" + num;
        if (numStr.search(/[eE]/) !== -1) {
          //given number is long and parsed to eNotation
          if (options.eNotation) return num;else return str;
        } else if (eNotation) {
          //given number has enotation
          if (options.eNotation) return num;else return str;
        } else if (trimmedStr.indexOf(".") !== -1) {
          //floating number
          // const decimalPart = match[5].substr(1);
          // const intPart = trimmedStr.substr(0,trimmedStr.indexOf("."));

          // const p = numStr.indexOf(".");
          // const givenIntPart = numStr.substr(0,p);
          // const givenDecPart = numStr.substr(p+1);
          if (numStr === "0" && numTrimmedByZeros === "") return num; //0.0
          else if (numStr === numTrimmedByZeros) return num; //0.456. 0.79000
          else if (sign && numStr === "-" + numTrimmedByZeros) return num;else return str;
        }
        if (leadingZeros) {
          // if(numTrimmedByZeros === numStr){
          //     if(options.leadingZeros) return num;
          //     else return str;
          // }else return str;
          if (numTrimmedByZeros === numStr) return num;else if (sign + numTrimmedByZeros === numStr) return num;else return str;
        }
        if (trimmedStr === numStr) return num;else if (trimmedStr === sign + numStr) return num;
        // else{
        //     //number with +/- sign
        //     trimmedStr.test(/[-+][0-9]);

        // }
        return str;
      }
      // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;
    } else {
      //non-numeric string
      return str;
    }
  }
}

/**
 * 
 * @param {string} numStr without leading zeros
 * @returns 
 */
function trimZeros(numStr) {
  if (numStr && numStr.indexOf(".") !== -1) {
    //float
    numStr = numStr.replace(/0+$/, ""); //remove ending zeros
    if (numStr === ".") numStr = "0";else if (numStr[0] === ".") numStr = "0" + numStr;else if (numStr[numStr.length - 1] === ".") numStr = numStr.substr(0, numStr.length - 1);
    return numStr;
  }
  return numStr;
}
module.exports = toNumber;

/***/ }),

/***/ 3683:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __assign: () => (/* binding */ _assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };
  return _extendStatics(d, b);
};
function __extends(d, b) {
  _extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return _assign.apply(this, arguments);
};

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
    d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
      label: 0,
      sent: function sent() {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
    i,
    q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;
  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
    i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result["default"] = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}

/***/ }),

/***/ 1068:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(7452);

/***/ }),

/***/ 7452:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



var net = __webpack_require__(9278);
var tls = __webpack_require__(4756);
var http = __webpack_require__(8611);
var https = __webpack_require__(5692);
var events = __webpack_require__(4434);
var assert = __webpack_require__(2613);
var util = __webpack_require__(9023);
exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;
function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}
function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}
function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}
function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}
function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];
  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);
TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({
    request: req
  }, self.options, toOptions(host, port, localAddress));
  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function (socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);
    function onFree() {
      self.emit('free', socket, options);
    }
    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};
TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);
  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' + new Buffer(connectOptions.proxyAuth).toString('base64');
  }
  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade); // for v0.6
  connectReq.once('connect', onConnect); // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();
  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }
  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function () {
      onConnect(res, socket, head);
    });
  }
  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();
    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d', res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }
  function onError(cause) {
    connectReq.removeAllListeners();
    debug('tunneling socket could not be established, cause=%s\n', cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};
TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket);
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);
  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function (socket) {
      pending.request.onSocket(socket);
    });
  }
};
function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function (socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}
function toOptions(host, port, localAddress) {
  if (typeof host === 'string') {
    // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}
function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}
var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function debug() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  };
} else {
  debug = function debug() {};
}
exports.debug = debug; // for test

/***/ }),

/***/ 4985:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  NIL: () => (/* reexport */ nil),
  parse: () => (/* reexport */ esm_node_parse),
  stringify: () => (/* reexport */ stringify/* default */.A),
  v1: () => (/* reexport */ esm_node_v1),
  v3: () => (/* reexport */ esm_node_v3),
  v4: () => (/* reexport */ v4/* default */.A),
  v5: () => (/* reexport */ esm_node_v5),
  validate: () => (/* reexport */ validate/* default */.A),
  version: () => (/* reexport */ esm_node_version)
});

// EXTERNAL MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/rng.js
var rng = __webpack_require__(3364);
// EXTERNAL MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/stringify.js
var stringify = __webpack_require__(2416);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v1.js

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;
var _clockseq; // Previous uuid creation time

var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || new Array(16);
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || rng/* default */.A)();
    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }
    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.

  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval

  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested

  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }
  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }
  return buf || (0,stringify/* default */.A)(b);
}
/* harmony default export */ const esm_node_v1 = (v1);
// EXTERNAL MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/validate.js + 1 modules
var validate = __webpack_require__(5708);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/parse.js

function parse(uuid) {
  if (!(0,validate/* default */.A)(uuid)) {
    throw TypeError('Invalid UUID');
  }
  var v;
  var arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}
/* harmony default export */ const esm_node_parse = (parse);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v35.js


function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];
  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }
  return bytes;
}
var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function v35(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }
    if (typeof namespace === 'string') {
      namespace = esm_node_parse(namespace);
    }
    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`

    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;
    if (buf) {
      offset = offset || 0;
      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }
      return buf;
    }
    return (0,stringify/* default */.A)(bytes);
  } // Function#name is not settable on some platforms (#270)

  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support

  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}
// EXTERNAL MODULE: external "crypto"
var external_crypto_ = __webpack_require__(6982);
var external_crypto_default = /*#__PURE__*/__webpack_require__.n(external_crypto_);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/md5.js

function md5(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }
  return external_crypto_default().createHash('md5').update(bytes).digest();
}
/* harmony default export */ const esm_node_md5 = (md5);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v3.js


var v3 = v35('v3', 0x30, esm_node_md5);
/* harmony default export */ const esm_node_v3 = (v3);
// EXTERNAL MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v4.js
var v4 = __webpack_require__(2415);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/sha1.js

function sha1(bytes) {
  if (Array.isArray(bytes)) {
    bytes = Buffer.from(bytes);
  } else if (typeof bytes === 'string') {
    bytes = Buffer.from(bytes, 'utf8');
  }
  return external_crypto_default().createHash('sha1').update(bytes).digest();
}
/* harmony default export */ const esm_node_sha1 = (sha1);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v5.js


var v5 = v35('v5', 0x50, esm_node_sha1);
/* harmony default export */ const esm_node_v5 = (v5);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/nil.js
/* harmony default export */ const nil = ('00000000-0000-0000-0000-000000000000');
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/version.js

function version(uuid) {
  if (!(0,validate/* default */.A)(uuid)) {
    throw TypeError('Invalid UUID');
  }
  return parseInt(uuid.substr(14, 1), 16);
}
/* harmony default export */ const esm_node_version = (version);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/index.js










/***/ }),

/***/ 3364:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (/* binding */ rng)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6982);
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);

var rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

var poolPtr = rnds8Pool.length;
function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);
    poolPtr = 0;
  }
  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ 2416:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5708);

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex = [];
for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}
function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }
  return uuid;
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ 2415:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3364);
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2416);


function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;
    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A)(rnds);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ 5708:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {


// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  A: () => (/* binding */ esm_node_validate)
});

;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/regex.js
/* harmony default export */ const regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);
;// ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/validate.js

function validate(uuid) {
  return typeof uuid === 'string' && regex.test(uuid);
}
/* harmony default export */ const esm_node_validate = (validate);

/***/ }),

/***/ 2613:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("assert");

/***/ }),

/***/ 6982:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("crypto");

/***/ }),

/***/ 4434:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("events");

/***/ }),

/***/ 9896:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("fs");

/***/ }),

/***/ 8611:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("http");

/***/ }),

/***/ 5692:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("https");

/***/ }),

/***/ 9278:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("net");

/***/ }),

/***/ 857:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("os");

/***/ }),

/***/ 6928:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("path");

/***/ }),

/***/ 4756:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("tls");

/***/ }),

/***/ 9023:
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("util");

/***/ }),

/***/ 3355:
/***/ ((module) => {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2543:
/***/ ((module) => {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 335:
/***/ ((module) => {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3572:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getPrototypeOf = __webpack_require__(7788);
var isNativeReflectConstruct = __webpack_require__(698);
var possibleConstructorReturn = __webpack_require__(7264);
function _callSuper(t, o, e) {
  return o = getPrototypeOf(o), possibleConstructorReturn(t, isNativeReflectConstruct() ? Reflect.construct(o, e || [], getPrototypeOf(t).constructor) : o.apply(t, e));
}
module.exports = _callSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 5907:
/***/ ((module) => {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8058:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var setPrototypeOf = __webpack_require__(8648);
var isNativeReflectConstruct = __webpack_require__(698);
function _construct(t, e, r) {
  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && setPrototypeOf(p, r.prototype), p;
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6455:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPropertyKey = __webpack_require__(4508);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3927:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var unsupportedIterableToArray = __webpack_require__(7750);
function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
module.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8681:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPropertyKey = __webpack_require__(4508);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7788:
/***/ ((module) => {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9323:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var setPrototypeOf = __webpack_require__(8648);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 3868:
/***/ ((module) => {

function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 698:
/***/ ((module) => {

function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9032:
/***/ ((module) => {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6388:
/***/ ((module) => {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7264:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(8214)["default"]);
var assertThisInitialized = __webpack_require__(335);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 453:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(8214)["default"]);
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return e;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function define(t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function value(t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw new Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(_typeof(e) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function stop() {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw new Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function complete(t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function finish(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    "catch": function _catch(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8648:
/***/ ((module) => {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 431:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayWithHoles = __webpack_require__(2543);
var iterableToArrayLimit = __webpack_require__(9032);
var unsupportedIterableToArray = __webpack_require__(7750);
var nonIterableRest = __webpack_require__(6388);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 825:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(8214)["default"]);
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 4508:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var _typeof = (__webpack_require__(8214)["default"]);
var toPrimitive = __webpack_require__(825);
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : String(i);
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8214:
/***/ ((module) => {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7750:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayLikeToArray = __webpack_require__(3355);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2121:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getPrototypeOf = __webpack_require__(7788);
var setPrototypeOf = __webpack_require__(8648);
var isNativeFunction = __webpack_require__(3868);
var construct = __webpack_require__(8058);
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};

// NAMESPACE OBJECT: ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/index.js
var aws_namespaceObject = {};
__webpack_require__.r(aws_namespaceObject);
__webpack_require__.d(aws_namespaceObject, {
  getUserAgentPrefix: () => (getUserAgentPrefix),
  isVirtualHostableS3Bucket: () => (isVirtualHostableS3Bucket),
  parseArn: () => (parseArn_parseArn),
  partition: () => (partition),
  setPartitionInfo: () => (setPartitionInfo),
  useDefaultPartitionInfo: () => (useDefaultPartitionInfo)
});

// NAMESPACE OBJECT: ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/index.js
var lib_namespaceObject = {};
__webpack_require__.r(lib_namespaceObject);
__webpack_require__.d(lib_namespaceObject, {
  aws: () => (aws_namespaceObject),
  booleanEquals: () => (booleanEquals),
  getAttr: () => (getAttr),
  isSet: () => (isSet),
  isValidHostLabel: () => (isValidHostLabel),
  not: () => (not),
  parseURL: () => (parseURL),
  stringEquals: () => (stringEquals),
  substring: () => (substring),
  uriEncode: () => (uriEncode)
});

;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js

function regeneratorRuntime_regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  regeneratorRuntime_regeneratorRuntime = function _regeneratorRuntime() {
    return e;
  };
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function define(t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function value(t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw new Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(_typeof(e) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function stop() {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw new Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function complete(t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function finish(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    "catch": function _catch(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function asyncToGenerator_asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js

function createForOfIteratorHelper_createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      var F = function F() {};
      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var normalCompletion = true,
    didErr = false,
    err;
  return {
    s: function s() {
      it = it.call(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
// EXTERNAL MODULE: ./node_modules/.pnpm/@actions+core@1.10.1/node_modules/@actions/core/lib/core.js
var core = __webpack_require__(4984);
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function classCallCheck_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/toPrimitive.js

function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js


function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : String(i);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/createClass.js

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function createClass_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function getPrototypeOf_getPrototypeOf(o) {
  getPrototypeOf_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return getPrototypeOf_getPrototypeOf(o);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  })();
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/callSuper.js



function callSuper_callSuper(t, o, e) {
  return o = getPrototypeOf_getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], getPrototypeOf_getPrototypeOf(t).constructor) : o.apply(t, e));
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/superPropBase.js

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf_getPrototypeOf(object);
    if (object === null) break;
  }
  return object;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/get.js

function get_get() {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    get_get = Reflect.get.bind();
  } else {
    get_get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);
      if (desc.get) {
        return desc.get.call(arguments.length < 3 ? target : receiver);
      }
      return desc.value;
    };
  }
  return get_get.apply(this, arguments);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/inherits.js

function inherits_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/defineProperty.js

function defineProperty_defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/objectSpread2.js

function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      defineProperty_defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/auth.js
var HttpAuthLocation;
(function (HttpAuthLocation) {
  HttpAuthLocation["HEADER"] = "header";
  HttpAuthLocation["QUERY"] = "query";
})(HttpAuthLocation || (HttpAuthLocation = {}));
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/endpoint.js
var EndpointURLScheme;
(function (EndpointURLScheme) {
  EndpointURLScheme["HTTP"] = "http";
  EndpointURLScheme["HTTPS"] = "https";
})(EndpointURLScheme || (EndpointURLScheme = {}));
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/extensions/checksum.js
var AlgorithmId;
(function (AlgorithmId) {
  AlgorithmId["MD5"] = "md5";
  AlgorithmId["CRC32"] = "crc32";
  AlgorithmId["CRC32C"] = "crc32c";
  AlgorithmId["SHA1"] = "sha1";
  AlgorithmId["SHA256"] = "sha256";
})(AlgorithmId || (AlgorithmId = {}));
var getChecksumConfiguration = function getChecksumConfiguration(runtimeConfig) {
  var checksumAlgorithms = [];
  if (runtimeConfig.sha256 !== undefined) {
    checksumAlgorithms.push({
      algorithmId: function algorithmId() {
        return AlgorithmId.SHA256;
      },
      checksumConstructor: function checksumConstructor() {
        return runtimeConfig.sha256;
      }
    });
  }
  if (runtimeConfig.md5 != undefined) {
    checksumAlgorithms.push({
      algorithmId: function algorithmId() {
        return AlgorithmId.MD5;
      },
      checksumConstructor: function checksumConstructor() {
        return runtimeConfig.md5;
      }
    });
  }
  return {
    _checksumAlgorithms: checksumAlgorithms,
    addChecksumAlgorithm: function addChecksumAlgorithm(algo) {
      this._checksumAlgorithms.push(algo);
    },
    checksumAlgorithms: function checksumAlgorithms() {
      return this._checksumAlgorithms;
    }
  };
};
var resolveChecksumRuntimeConfig = function resolveChecksumRuntimeConfig(clientConfig) {
  var runtimeConfig = {};
  clientConfig.checksumAlgorithms().forEach(function (checksumAlgorithm) {
    runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();
  });
  return runtimeConfig;
};
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/extensions/defaultClientConfiguration.js


var getDefaultClientConfiguration = function getDefaultClientConfiguration(runtimeConfig) {
  return _objectSpread2({}, getChecksumConfiguration(runtimeConfig));
};
var resolveDefaultRuntimeConfig = function resolveDefaultRuntimeConfig(config) {
  return _objectSpread2({}, resolveChecksumRuntimeConfig(config));
};
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/extensions/index.js

;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/http.js
var http_FieldPosition;
(function (FieldPosition) {
  FieldPosition[FieldPosition["HEADER"] = 0] = "HEADER";
  FieldPosition[FieldPosition["TRAILER"] = 1] = "TRAILER";
})(http_FieldPosition || (http_FieldPosition = {}));
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/transfer.js
var RequestHandlerProtocol;
(function (RequestHandlerProtocol) {
  RequestHandlerProtocol["HTTP_0_9"] = "http/0.9";
  RequestHandlerProtocol["HTTP_1_0"] = "http/1.0";
  RequestHandlerProtocol["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));
;// ./node_modules/.pnpm/@smithy+types@2.2.0/node_modules/@smithy/types/dist-es/index.js


































;// ./node_modules/.pnpm/@smithy+protocol-http@2.0.3/node_modules/@smithy/protocol-http/dist-es/Field.js



var Field = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function Field(_ref) {
    var name = _ref.name,
      _ref$kind = _ref.kind,
      kind = _ref$kind === void 0 ? FieldPosition.HEADER : _ref$kind,
      _ref$values = _ref.values,
      values = _ref$values === void 0 ? [] : _ref$values;
    _classCallCheck(this, Field);
    this.name = name;
    this.kind = kind;
    this.values = values;
  }
  return _createClass(Field, [{
    key: "add",
    value: function add(value) {
      this.values.push(value);
    }
  }, {
    key: "set",
    value: function set(values) {
      this.values = values;
    }
  }, {
    key: "remove",
    value: function remove(value) {
      this.values = this.values.filter(function (v) {
        return v !== value;
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      return this.values.map(function (v) {
        return v.includes(",") || v.includes(" ") ? "\"".concat(v, "\"") : v;
      }).join(", ");
    }
  }, {
    key: "get",
    value: function get() {
      return this.values;
    }
  }]);
}()));
;// ./node_modules/.pnpm/@smithy+protocol-http@2.0.3/node_modules/@smithy/protocol-http/dist-es/httpRequest.js





var httpRequest_HttpRequest = /*#__PURE__*/function () {
  function HttpRequest(options) {
    classCallCheck_classCallCheck(this, HttpRequest);
    this.method = options.method || "GET";
    this.hostname = options.hostname || "localhost";
    this.port = options.port;
    this.query = options.query || {};
    this.headers = options.headers || {};
    this.body = options.body;
    this.protocol = options.protocol ? options.protocol.slice(-1) !== ":" ? "".concat(options.protocol, ":") : options.protocol : "https:";
    this.path = options.path ? options.path.charAt(0) !== "/" ? "/".concat(options.path) : options.path : "/";
    this.username = options.username;
    this.password = options.password;
    this.fragment = options.fragment;
  }
  return createClass_createClass(HttpRequest, [{
    key: "clone",
    value: function clone() {
      var cloned = new HttpRequest(_objectSpread2(_objectSpread2({}, this), {}, {
        headers: _objectSpread2({}, this.headers)
      }));
      if (cloned.query) cloned.query = cloneQuery(cloned.query);
      return cloned;
    }
  }], [{
    key: "isInstance",
    value: function isInstance(request) {
      if (!request) return false;
      var req = request;
      return "method" in req && "protocol" in req && "hostname" in req && "path" in req && typeof req["query"] === "object" && typeof req["headers"] === "object";
    }
  }]);
}();
function cloneQuery(query) {
  return Object.keys(query).reduce(function (carry, paramName) {
    var param = query[paramName];
    return _objectSpread2(_objectSpread2({}, carry), {}, defineProperty_defineProperty({}, paramName, Array.isArray(param) ? _toConsumableArray(param) : param));
  }, {});
}
;// ./node_modules/.pnpm/@smithy+protocol-http@2.0.3/node_modules/@smithy/protocol-http/dist-es/httpResponse.js


var httpResponse_HttpResponse = /*#__PURE__*/function () {
  function HttpResponse(options) {
    classCallCheck_classCallCheck(this, HttpResponse);
    this.statusCode = options.statusCode;
    this.reason = options.reason;
    this.headers = options.headers || {};
    this.body = options.body;
  }
  return createClass_createClass(HttpResponse, null, [{
    key: "isInstance",
    value: function isInstance(response) {
      if (!response) return false;
      var resp = response;
      return typeof resp.statusCode === "number" && typeof resp.headers === "object";
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+protocol-http@2.0.3/node_modules/@smithy/protocol-http/dist-es/index.js







;// ./node_modules/.pnpm/@aws-sdk+middleware-expect-continue@3.391.0/node_modules/@aws-sdk/middleware-expect-continue/dist-es/index.js




function addExpectContinueMiddleware(options) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (httpRequest_HttpRequest.isInstance(request) && request.body && options.runtime === "node") {
                request.headers = _objectSpread2(_objectSpread2({}, request.headers), {}, {
                  Expect: "100-continue"
                });
              }
              return _context.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: request
              })));
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
}
var addExpectContinueMiddlewareOptions = {
  step: "build",
  tags: ["SET_EXPECT_HEADER", "EXPECT_HEADER"],
  name: "addExpectContinueMiddleware",
  override: true
};
var getAddExpectContinuePlugin = function getAddExpectContinuePlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-host-header@3.391.0/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js



function resolveHostHeaderConfig(input) {
  return input;
}
var hostHeaderMiddleware = function hostHeaderMiddleware(options) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request, _ref2, _ref2$handlerProtocol, handlerProtocol, host;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (httpRequest_HttpRequest.isInstance(args.request)) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", next(args));
            case 2:
              request = args.request;
              _ref2 = options.requestHandler.metadata || {}, _ref2$handlerProtocol = _ref2.handlerProtocol, handlerProtocol = _ref2$handlerProtocol === void 0 ? "" : _ref2$handlerProtocol;
              if (handlerProtocol.indexOf("h2") >= 0 && !request.headers[":authority"]) {
                delete request.headers["host"];
                request.headers[":authority"] = "";
              } else if (!request.headers["host"]) {
                host = request.hostname;
                if (request.port != null) host += ":".concat(request.port);
                request.headers["host"] = host;
              }
              return _context.abrupt("return", next(args));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var hostHeaderMiddlewareOptions = {
  name: "hostHeaderMiddleware",
  step: "build",
  priority: "low",
  tags: ["HOST"],
  override: true
};
var getHostHeaderPlugin = function getHostHeaderPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);
    }
  };
};
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function objectWithoutProperties_objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }
  return target;
}
;// ./node_modules/.pnpm/@aws-sdk+middleware-logger@3.391.0/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js



var _excluded = ["$metadata"];
var loggerMiddleware = function loggerMiddleware() {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var _logger$info, response, clientName, commandName, logger, _context$dynamoDbDocu, dynamoDbDocumentClientOptions, overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog, inputFilterSensitiveLog, outputFilterSensitiveLog, _response$output, $metadata, outputWithoutMetadata, _logger$error, _clientName, _commandName, _logger, _context$dynamoDbDocu2, _dynamoDbDocumentClientOptions, _overrideInputFilterSensitiveLog, _inputFilterSensitiveLog;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return next(args);
            case 3:
              response = _context.sent;
              clientName = context.clientName, commandName = context.commandName, logger = context.logger, _context$dynamoDbDocu = context.dynamoDbDocumentClientOptions, dynamoDbDocumentClientOptions = _context$dynamoDbDocu === void 0 ? {} : _context$dynamoDbDocu;
              overrideInputFilterSensitiveLog = dynamoDbDocumentClientOptions.overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog = dynamoDbDocumentClientOptions.overrideOutputFilterSensitiveLog;
              inputFilterSensitiveLog = overrideInputFilterSensitiveLog !== null && overrideInputFilterSensitiveLog !== void 0 ? overrideInputFilterSensitiveLog : context.inputFilterSensitiveLog;
              outputFilterSensitiveLog = overrideOutputFilterSensitiveLog !== null && overrideOutputFilterSensitiveLog !== void 0 ? overrideOutputFilterSensitiveLog : context.outputFilterSensitiveLog;
              _response$output = response.output, $metadata = _response$output.$metadata, outputWithoutMetadata = objectWithoutProperties_objectWithoutProperties(_response$output, _excluded);
              logger === null || logger === void 0 || (_logger$info = logger.info) === null || _logger$info === void 0 || _logger$info.call(logger, {
                clientName: clientName,
                commandName: commandName,
                input: inputFilterSensitiveLog(args.input),
                output: outputFilterSensitiveLog(outputWithoutMetadata),
                metadata: $metadata
              });
              return _context.abrupt("return", response);
            case 13:
              _context.prev = 13;
              _context.t0 = _context["catch"](0);
              _clientName = context.clientName, _commandName = context.commandName, _logger = context.logger, _context$dynamoDbDocu2 = context.dynamoDbDocumentClientOptions, _dynamoDbDocumentClientOptions = _context$dynamoDbDocu2 === void 0 ? {} : _context$dynamoDbDocu2;
              _overrideInputFilterSensitiveLog = _dynamoDbDocumentClientOptions.overrideInputFilterSensitiveLog;
              _inputFilterSensitiveLog = _overrideInputFilterSensitiveLog !== null && _overrideInputFilterSensitiveLog !== void 0 ? _overrideInputFilterSensitiveLog : context.inputFilterSensitiveLog;
              _logger === null || _logger === void 0 || (_logger$error = _logger.error) === null || _logger$error === void 0 || _logger$error.call(_logger, {
                clientName: _clientName,
                commandName: _commandName,
                input: _inputFilterSensitiveLog(args.input),
                error: _context.t0,
                metadata: _context.t0.$metadata
              });
              throw _context.t0;
            case 20:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[0, 13]]);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var loggerMiddlewareOptions = {
  name: "loggerMiddleware",
  tags: ["LOGGER"],
  step: "initialize",
  override: true
};
var getLoggerPlugin = function getLoggerPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-logger@3.391.0/node_modules/@aws-sdk/middleware-logger/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+middleware-recursion-detection@3.391.0/node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js




var TRACE_ID_HEADER_NAME = "X-Amzn-Trace-Id";
var ENV_LAMBDA_FUNCTION_NAME = "AWS_LAMBDA_FUNCTION_NAME";
var ENV_TRACE_ID = "_X_AMZN_TRACE_ID";
var recursionDetectionMiddleware = function recursionDetectionMiddleware(options) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request, functionName, traceId, nonEmptyString;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (!(!httpRequest_HttpRequest.isInstance(request) || options.runtime !== "node" || request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME))) {
                _context.next = 3;
                break;
              }
              return _context.abrupt("return", next(args));
            case 3:
              functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];
              traceId = process.env[ENV_TRACE_ID];
              nonEmptyString = function nonEmptyString(str) {
                return typeof str === "string" && str.length > 0;
              };
              if (nonEmptyString(functionName) && nonEmptyString(traceId)) {
                request.headers[TRACE_ID_HEADER_NAME] = traceId;
              }
              return _context.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: request
              })));
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var addRecursionDetectionMiddlewareOptions = {
  step: "build",
  tags: ["RECURSION_DETECTION"],
  name: "recursionDetectionMiddleware",
  override: true,
  priority: "low"
};
var getRecursionDetectionPlugin = function getRecursionDetectionPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.391.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/check-content-length-header.js




var CONTENT_LENGTH_HEADER = "content-length";
function checkContentLengthHeader() {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request, _context$logger, message;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (httpRequest_HttpRequest.isInstance(request)) {
                if (!request.headers[CONTENT_LENGTH_HEADER]) {
                  message = "Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.";
                  if (typeof (context === null || context === void 0 || (_context$logger = context.logger) === null || _context$logger === void 0 ? void 0 : _context$logger.warn) === "function") {
                    context.logger.warn(message);
                  } else {
                    console.warn(message);
                  }
                }
              }
              return _context.abrupt("return", next(_objectSpread2({}, args)));
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
}
var checkContentLengthHeaderMiddlewareOptions = {
  step: "finalizeRequest",
  tags: ["CHECK_CONTENT_LENGTH_HEADER"],
  name: "getCheckContentLengthHeaderPlugin",
  override: true
};
var getCheckContentLengthHeaderPlugin = function getCheckContentLengthHeaderPlugin(unused) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(checkContentLengthHeader(), checkContentLengthHeaderMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.391.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/s3Configuration.js

var resolveS3Config = function resolveS3Config(input) {
  var _input$forcePathStyle, _input$useAccelerateE, _input$disableMultire;
  return _objectSpread2(_objectSpread2({}, input), {}, {
    forcePathStyle: (_input$forcePathStyle = input.forcePathStyle) !== null && _input$forcePathStyle !== void 0 ? _input$forcePathStyle : false,
    useAccelerateEndpoint: (_input$useAccelerateE = input.useAccelerateEndpoint) !== null && _input$useAccelerateE !== void 0 ? _input$useAccelerateE : false,
    disableMultiregionAccessPoints: (_input$disableMultire = input.disableMultiregionAccessPoints) !== null && _input$disableMultire !== void 0 ? _input$disableMultire : false
  });
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.391.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/throw-200-exceptions.js



var throw200ExceptionsMiddleware = function throw200ExceptionsMiddleware(config) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {
        var result, response, statusCode, body, bodyBytes, bodyString, err;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return next(args);
            case 2:
              result = _context.sent;
              response = result.response;
              if (HttpResponse.isInstance(response)) {
                _context.next = 6;
                break;
              }
              return _context.abrupt("return", result);
            case 6:
              statusCode = response.statusCode, body = response.body;
              if (!(statusCode < 200 || statusCode >= 300)) {
                _context.next = 9;
                break;
              }
              return _context.abrupt("return", result);
            case 9:
              _context.next = 11;
              return throw_200_exceptions_collectBody(body, config);
            case 11:
              bodyBytes = _context.sent;
              _context.next = 14;
              return collectBodyString(bodyBytes, config);
            case 14:
              bodyString = _context.sent;
              if (!(bodyBytes.length === 0)) {
                _context.next = 19;
                break;
              }
              err = new Error("S3 aborted request");
              err.name = "InternalError";
              throw err;
            case 19:
              if (bodyString && bodyString.match("<Error>")) {
                response.statusCode = 400;
              }
              response.body = bodyBytes;
              return _context.abrupt("return", result);
            case 22:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var throw_200_exceptions_collectBody = function collectBody() {
  var streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();
  var context = arguments.length > 1 ? arguments[1] : undefined;
  if (streamBody instanceof Uint8Array) {
    return Promise.resolve(streamBody);
  }
  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
var collectBodyString = function collectBodyString(streamBody, context) {
  return throw_200_exceptions_collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
var throw200ExceptionsMiddlewareOptions = {
  relation: "after",
  toMiddleware: "deserializerMiddleware",
  tags: ["THROW_200_EXCEPTIONS", "S3"],
  name: "throw200ExceptionsMiddleware",
  override: true
};
var getThrow200ExceptionsPlugin = function getThrow200ExceptionsPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+util-arn-parser@3.310.0/node_modules/@aws-sdk/util-arn-parser/dist-es/index.js

var validate = function validate(str) {
  return typeof str === "string" && str.indexOf("arn:") === 0 && str.split(":").length >= 6;
};
var parse = function parse(arn) {
  var segments = arn.split(":");
  if (segments.length < 6 || segments[0] !== "arn") throw new Error("Malformed ARN");
  var _segments = _toArray(segments),
    partition = _segments[1],
    service = _segments[2],
    region = _segments[3],
    accountId = _segments[4],
    resource = _segments.slice(5);
  return {
    partition: partition,
    service: service,
    region: region,
    accountId: accountId,
    resource: resource.join(":")
  };
};
var build = function build(arnObject) {
  var _arnObject$partition = arnObject.partition,
    partition = _arnObject$partition === void 0 ? "aws" : _arnObject$partition,
    service = arnObject.service,
    region = arnObject.region,
    accountId = arnObject.accountId,
    resource = arnObject.resource;
  if ([service, region, accountId, resource].some(function (segment) {
    return typeof segment !== "string";
  })) {
    throw new Error("Input ARN object is invalid");
  }
  return "arn:".concat(partition, ":").concat(service, ":").concat(region, ":").concat(accountId, ":").concat(resource);
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.391.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/validate-bucket-name.js




function validateBucketNameMiddleware() {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var Bucket, err;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              Bucket = args.input.Bucket;
              if (!(typeof Bucket === "string" && !validate(Bucket) && Bucket.indexOf("/") >= 0)) {
                _context.next = 5;
                break;
              }
              err = new Error("Bucket name shouldn't contain '/', received '".concat(Bucket, "'"));
              err.name = "InvalidBucketName";
              throw err;
            case 5:
              return _context.abrupt("return", next(_objectSpread2({}, args)));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
}
var validateBucketNameMiddlewareOptions = {
  step: "initialize",
  tags: ["VALIDATE_BUCKET_NAME"],
  name: "validateBucketNameMiddleware",
  override: true
};
var getValidateBucketNamePlugin = function getValidateBucketNamePlugin(unused) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-s3@3.391.0/node_modules/@aws-sdk/middleware-sdk-s3/dist-es/index.js




;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function slicedToArray_slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/memoize.js


var memoize = function memoize(provider, isExpired, requiresRefresh) {
  var resolved;
  var pending;
  var hasResult;
  var isConstant = false;
  var coalesceProvider = /*#__PURE__*/function () {
    var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!pending) {
              pending = provider();
            }
            _context.prev = 1;
            _context.next = 4;
            return pending;
          case 4:
            resolved = _context.sent;
            hasResult = true;
            isConstant = false;
          case 7:
            _context.prev = 7;
            pending = undefined;
            return _context.finish(7);
          case 10:
            return _context.abrupt("return", resolved);
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee, null, [[1,, 7, 10]]);
    }));
    return function coalesceProvider() {
      return _ref.apply(this, arguments);
    };
  }();
  if (isExpired === undefined) {
    return /*#__PURE__*/function () {
      var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(options) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(!hasResult || options !== null && options !== void 0 && options.forceRefresh)) {
                _context2.next = 4;
                break;
              }
              _context2.next = 3;
              return coalesceProvider();
            case 3:
              resolved = _context2.sent;
            case 4:
              return _context2.abrupt("return", resolved);
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();
  }
  return /*#__PURE__*/function () {
    var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(options) {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            if (!(!hasResult || options !== null && options !== void 0 && options.forceRefresh)) {
              _context3.next = 4;
              break;
            }
            _context3.next = 3;
            return coalesceProvider();
          case 3:
            resolved = _context3.sent;
          case 4:
            if (!isConstant) {
              _context3.next = 6;
              break;
            }
            return _context3.abrupt("return", resolved);
          case 6:
            if (!(requiresRefresh && !requiresRefresh(resolved))) {
              _context3.next = 9;
              break;
            }
            isConstant = true;
            return _context3.abrupt("return", resolved);
          case 9:
            if (!isExpired(resolved)) {
              _context3.next = 13;
              break;
            }
            _context3.next = 12;
            return coalesceProvider();
          case 12:
            return _context3.abrupt("return", resolved);
          case 13:
            return _context3.abrupt("return", resolved);
          case 14:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function (_x2) {
      return _ref3.apply(this, arguments);
    };
  }();
};
// EXTERNAL MODULE: ./node_modules/.pnpm/@aws-crypto+crc32@3.0.0/node_modules/@aws-crypto/crc32/build/index.js
var crc32_build = __webpack_require__(9864);
;// ./node_modules/.pnpm/@smithy+util-hex-encoding@2.0.0/node_modules/@smithy/util-hex-encoding/dist-es/index.js
var SHORT_TO_HEX = {};
var HEX_TO_SHORT = {};
for (var i = 0; i < 256; i++) {
  var encodedByte = i.toString(16).toLowerCase();
  if (encodedByte.length === 1) {
    encodedByte = "0".concat(encodedByte);
  }
  SHORT_TO_HEX[i] = encodedByte;
  HEX_TO_SHORT[encodedByte] = i;
}
function fromHex(encoded) {
  if (encoded.length % 2 !== 0) {
    throw new Error("Hex encoded strings must have an even number length");
  }
  var out = new Uint8Array(encoded.length / 2);
  for (var _i = 0; _i < encoded.length; _i += 2) {
    var _encodedByte = encoded.slice(_i, _i + 2).toLowerCase();
    if (_encodedByte in HEX_TO_SHORT) {
      out[_i / 2] = HEX_TO_SHORT[_encodedByte];
    } else {
      throw new Error("Cannot decode unrecognized sequence ".concat(_encodedByte, " as hexadecimal"));
    }
  }
  return out;
}
function toHex(bytes) {
  var out = "";
  for (var _i2 = 0; _i2 < bytes.byteLength; _i2++) {
    out += SHORT_TO_HEX[bytes[_i2]];
  }
  return out;
}
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/Int64.js



var Int64 = /*#__PURE__*/function () {
  function Int64(bytes) {
    classCallCheck_classCallCheck(this, Int64);
    this.bytes = bytes;
    if (bytes.byteLength !== 8) {
      throw new Error("Int64 buffers must be exactly 8 bytes");
    }
  }
  return createClass_createClass(Int64, [{
    key: "valueOf",
    value: function valueOf() {
      var bytes = this.bytes.slice(0);
      var negative = bytes[0] & 128;
      if (negative) {
        negate(bytes);
      }
      return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);
    }
  }, {
    key: "toString",
    value: function toString() {
      return String(this.valueOf());
    }
  }], [{
    key: "fromNumber",
    value: function fromNumber(number) {
      if (number > 9223372036854776000 || number < -9223372036854776000) {
        throw new Error("".concat(number, " is too large (or, if negative, too small) to represent as an Int64"));
      }
      var bytes = new Uint8Array(8);
      for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
        bytes[i] = remaining;
      }
      if (number < 0) {
        negate(bytes);
      }
      return new Int64(bytes);
    }
  }]);
}();
function negate(bytes) {
  for (var i = 0; i < 8; i++) {
    bytes[i] ^= 0xff;
  }
  for (var _i = 7; _i > -1; _i--) {
    bytes[_i]++;
    if (bytes[_i] !== 0) break;
  }
}
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/HeaderMarshaller.js




var HeaderMarshaller = /*#__PURE__*/function () {
  function HeaderMarshaller(toUtf8, fromUtf8) {
    classCallCheck_classCallCheck(this, HeaderMarshaller);
    this.toUtf8 = toUtf8;
    this.fromUtf8 = fromUtf8;
  }
  return createClass_createClass(HeaderMarshaller, [{
    key: "format",
    value: function format(headers) {
      var chunks = [];
      for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {
        var headerName = _Object$keys[_i];
        var bytes = this.fromUtf8(headerName);
        chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
      }
      var out = new Uint8Array(chunks.reduce(function (carry, bytes) {
        return carry + bytes.byteLength;
      }, 0));
      var position = 0;
      for (var _i2 = 0, _chunks = chunks; _i2 < _chunks.length; _i2++) {
        var chunk = _chunks[_i2];
        out.set(chunk, position);
        position += chunk.byteLength;
      }
      return out;
    }
  }, {
    key: "formatHeaderValue",
    value: function formatHeaderValue(header) {
      switch (header.type) {
        case "boolean":
          return Uint8Array.from([header.value ? 0 : 1]);
        case "byte":
          return Uint8Array.from([2, header.value]);
        case "short":
          var shortView = new DataView(new ArrayBuffer(3));
          shortView.setUint8(0, 3);
          shortView.setInt16(1, header.value, false);
          return new Uint8Array(shortView.buffer);
        case "integer":
          var intView = new DataView(new ArrayBuffer(5));
          intView.setUint8(0, 4);
          intView.setInt32(1, header.value, false);
          return new Uint8Array(intView.buffer);
        case "long":
          var longBytes = new Uint8Array(9);
          longBytes[0] = 5;
          longBytes.set(header.value.bytes, 1);
          return longBytes;
        case "binary":
          var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
          binView.setUint8(0, 6);
          binView.setUint16(1, header.value.byteLength, false);
          var binBytes = new Uint8Array(binView.buffer);
          binBytes.set(header.value, 3);
          return binBytes;
        case "string":
          var utf8Bytes = this.fromUtf8(header.value);
          var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
          strView.setUint8(0, 7);
          strView.setUint16(1, utf8Bytes.byteLength, false);
          var strBytes = new Uint8Array(strView.buffer);
          strBytes.set(utf8Bytes, 3);
          return strBytes;
        case "timestamp":
          var tsBytes = new Uint8Array(9);
          tsBytes[0] = 8;
          tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);
          return tsBytes;
        case "uuid":
          if (!UUID_PATTERN.test(header.value)) {
            throw new Error("Invalid UUID received: ".concat(header.value));
          }
          var uuidBytes = new Uint8Array(17);
          uuidBytes[0] = 9;
          uuidBytes.set(fromHex(header.value.replace(/\-/g, "")), 1);
          return uuidBytes;
      }
    }
  }, {
    key: "parse",
    value: function parse(headers) {
      var out = {};
      var position = 0;
      while (position < headers.byteLength) {
        var nameLength = headers.getUint8(position++);
        var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
        position += nameLength;
        switch (headers.getUint8(position++)) {
          case 0:
            out[name] = {
              type: BOOLEAN_TAG,
              value: true
            };
            break;
          case 1:
            out[name] = {
              type: BOOLEAN_TAG,
              value: false
            };
            break;
          case 2:
            out[name] = {
              type: BYTE_TAG,
              value: headers.getInt8(position++)
            };
            break;
          case 3:
            out[name] = {
              type: SHORT_TAG,
              value: headers.getInt16(position, false)
            };
            position += 2;
            break;
          case 4:
            out[name] = {
              type: INT_TAG,
              value: headers.getInt32(position, false)
            };
            position += 4;
            break;
          case 5:
            out[name] = {
              type: LONG_TAG,
              value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))
            };
            position += 8;
            break;
          case 6:
            var binaryLength = headers.getUint16(position, false);
            position += 2;
            out[name] = {
              type: BINARY_TAG,
              value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)
            };
            position += binaryLength;
            break;
          case 7:
            var stringLength = headers.getUint16(position, false);
            position += 2;
            out[name] = {
              type: STRING_TAG,
              value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))
            };
            position += stringLength;
            break;
          case 8:
            out[name] = {
              type: TIMESTAMP_TAG,
              value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())
            };
            position += 8;
            break;
          case 9:
            var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
            position += 16;
            out[name] = {
              type: UUID_TAG,
              value: "".concat(toHex(uuidBytes.subarray(0, 4)), "-").concat(toHex(uuidBytes.subarray(4, 6)), "-").concat(toHex(uuidBytes.subarray(6, 8)), "-").concat(toHex(uuidBytes.subarray(8, 10)), "-").concat(toHex(uuidBytes.subarray(10)))
            };
            break;
          default:
            throw new Error("Unrecognized header type tag");
        }
      }
      return out;
    }
  }]);
}();
var HEADER_VALUE_TYPE;
(function (HEADER_VALUE_TYPE) {
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolTrue"] = 0] = "boolTrue";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolFalse"] = 1] = "boolFalse";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byte"] = 2] = "byte";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["short"] = 3] = "short";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["integer"] = 4] = "integer";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["long"] = 5] = "long";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byteArray"] = 6] = "byteArray";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["string"] = 7] = "string";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["timestamp"] = 8] = "timestamp";
  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
var BOOLEAN_TAG = "boolean";
var BYTE_TAG = "byte";
var SHORT_TAG = "short";
var INT_TAG = "integer";
var LONG_TAG = "long";
var BINARY_TAG = "binary";
var STRING_TAG = "string";
var TIMESTAMP_TAG = "timestamp";
var UUID_TAG = "uuid";
var UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/splitMessage.js

var PRELUDE_MEMBER_LENGTH = 4;
var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;
var CHECKSUM_LENGTH = 4;
var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
function splitMessage(_ref) {
  var byteLength = _ref.byteLength,
    byteOffset = _ref.byteOffset,
    buffer = _ref.buffer;
  if (byteLength < MINIMUM_MESSAGE_LENGTH) {
    throw new Error("Provided message too short to accommodate event stream message overhead");
  }
  var view = new DataView(buffer, byteOffset, byteLength);
  var messageLength = view.getUint32(0, false);
  if (byteLength !== messageLength) {
    throw new Error("Reported message length does not match received message length");
  }
  var headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
  var expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
  var expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);
  var checksummer = new crc32_build.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));
  if (expectedPreludeChecksum !== checksummer.digest()) {
    throw new Error("The prelude checksum specified in the message (".concat(expectedPreludeChecksum, ") does not match the calculated CRC32 checksum (").concat(checksummer.digest(), ")"));
  }
  checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));
  if (expectedMessageChecksum !== checksummer.digest()) {
    throw new Error("The message checksum (".concat(checksummer.digest(), ") did not match the expected value of ").concat(expectedMessageChecksum));
  }
  return {
    headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
    body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))
  };
}
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/EventStreamCodec.js





var EventStreamCodec = /*#__PURE__*/function () {
  function EventStreamCodec(toUtf8, fromUtf8) {
    classCallCheck_classCallCheck(this, EventStreamCodec);
    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);
    this.messageBuffer = [];
    this.isEndOfStream = false;
  }
  return createClass_createClass(EventStreamCodec, [{
    key: "feed",
    value: function feed(message) {
      this.messageBuffer.push(this.decode(message));
    }
  }, {
    key: "endOfStream",
    value: function endOfStream() {
      this.isEndOfStream = true;
    }
  }, {
    key: "getMessage",
    value: function getMessage() {
      var message = this.messageBuffer.pop();
      var _isEndOfStream = this.isEndOfStream;
      return {
        getMessage: function getMessage() {
          return message;
        },
        isEndOfStream: function isEndOfStream() {
          return _isEndOfStream;
        }
      };
    }
  }, {
    key: "getAvailableMessages",
    value: function getAvailableMessages() {
      var messages = this.messageBuffer;
      this.messageBuffer = [];
      var _isEndOfStream2 = this.isEndOfStream;
      return {
        getMessages: function getMessages() {
          return messages;
        },
        isEndOfStream: function isEndOfStream() {
          return _isEndOfStream2;
        }
      };
    }
  }, {
    key: "encode",
    value: function encode(_ref) {
      var rawHeaders = _ref.headers,
        body = _ref.body;
      var headers = this.headerMarshaller.format(rawHeaders);
      var length = headers.byteLength + body.byteLength + 16;
      var out = new Uint8Array(length);
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      var checksum = new crc32_build.Crc32();
      view.setUint32(0, length, false);
      view.setUint32(4, headers.byteLength, false);
      view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
      out.set(headers, 12);
      out.set(body, headers.byteLength + 12);
      view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);
      return out;
    }
  }, {
    key: "decode",
    value: function decode(message) {
      var _splitMessage = splitMessage(message),
        headers = _splitMessage.headers,
        body = _splitMessage.body;
      return {
        headers: this.headerMarshaller.parse(headers),
        body: body
      };
    }
  }, {
    key: "formatHeaders",
    value: function formatHeaders(rawHeaders) {
      return this.headerMarshaller.format(rawHeaders);
    }
  }]);
}();
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/OverloadYield.js
function _OverloadYield(t, e) {
  this.v = t, this.k = e;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js

function awaitAsyncGenerator_awaitAsyncGenerator(e) {
  return new _OverloadYield(e, 0);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js

function AsyncGenerator(e) {
  var r, t;
  function resume(r, t) {
    try {
      var n = e[r](t),
        o = n.value,
        u = o instanceof _OverloadYield;
      Promise.resolve(u ? o.v : o).then(function (t) {
        if (u) {
          var i = "return" === r ? "return" : "next";
          if (!o.k || t.done) return resume(i, t);
          t = e[i](t).value;
        }
        settle(n.done ? "return" : "normal", t);
      }, function (e) {
        resume("throw", e);
      });
    } catch (e) {
      settle("throw", e);
    }
  }
  function settle(e, n) {
    switch (e) {
      case "return":
        r.resolve({
          value: n,
          done: !0
        });
        break;
      case "throw":
        r.reject(n);
        break;
      default:
        r.resolve({
          value: n,
          done: !1
        });
    }
    (r = r.next) ? resume(r.key, r.arg) : t = null;
  }
  this._invoke = function (e, n) {
    return new Promise(function (o, u) {
      var i = {
        key: e,
        arg: n,
        resolve: o,
        reject: u,
        next: null
      };
      t ? t = t.next = i : (r = t = i, resume(e, n));
    });
  }, "function" != typeof e["return"] && (this["return"] = void 0);
}
AsyncGenerator.prototype["function" == typeof Symbol && Symbol.asyncIterator || "@@asyncIterator"] = function () {
  return this;
}, AsyncGenerator.prototype.next = function (e) {
  return this._invoke("next", e);
}, AsyncGenerator.prototype["throw"] = function (e) {
  return this._invoke("throw", e);
}, AsyncGenerator.prototype["return"] = function (e) {
  return this._invoke("return", e);
};
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js

function wrapAsyncGenerator_wrapAsyncGenerator(fn) {
  return function () {
    return new AsyncGenerator(fn.apply(this, arguments));
  };
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/asyncIterator.js
function asyncIterator_asyncIterator(r) {
  var n,
    t,
    o,
    e = 2;
  for ("undefined" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {
    if (t && null != (n = r[t])) return n.call(r);
    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));
    t = "@@asyncIterator", o = "@@iterator";
  }
  throw new TypeError("Object is not async iterable");
}
function AsyncFromSyncIterator(r) {
  function AsyncFromSyncIteratorContinuation(r) {
    if (Object(r) !== r) return Promise.reject(new TypeError(r + " is not an object."));
    var n = r.done;
    return Promise.resolve(r.value).then(function (r) {
      return {
        value: r,
        done: n
      };
    });
  }
  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {
    this.s = r, this.n = r.next;
  }, AsyncFromSyncIterator.prototype = {
    s: null,
    n: null,
    next: function next() {
      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));
    },
    "return": function _return(r) {
      var n = this.s["return"];
      return void 0 === n ? Promise.resolve({
        value: r,
        done: !0
      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));
    },
    "throw": function _throw(r) {
      var n = this.s["return"];
      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));
    }
  }, new AsyncFromSyncIterator(r);
}
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/MessageDecoderStream.js






var MessageDecoderStream = /*#__PURE__*/function () {
  function MessageDecoderStream(options) {
    classCallCheck_classCallCheck(this, MessageDecoderStream);
    this.options = options;
  }
  return createClass_createClass(MessageDecoderStream, [{
    key: Symbol.asyncIterator,
    value: function value() {
      return this.asyncIterator();
    }
  }, {
    key: "asyncIterator",
    value: function asyncIterator() {
      var _this = this;
      return wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, bytes, decoded;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _iteratorAbruptCompletion = false;
              _didIteratorError = false;
              _context.prev = 2;
              _iterator = asyncIterator_asyncIterator(_this.options.inputStream);
            case 4:
              _context.next = 6;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator.next());
            case 6:
              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                _context.next = 14;
                break;
              }
              bytes = _step.value;
              decoded = _this.options.decoder.decode(bytes);
              _context.next = 11;
              return decoded;
            case 11:
              _iteratorAbruptCompletion = false;
              _context.next = 4;
              break;
            case 14:
              _context.next = 20;
              break;
            case 16:
              _context.prev = 16;
              _context.t0 = _context["catch"](2);
              _didIteratorError = true;
              _iteratorError = _context.t0;
            case 20:
              _context.prev = 20;
              _context.prev = 21;
              if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
                _context.next = 25;
                break;
              }
              _context.next = 25;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator["return"]());
            case 25:
              _context.prev = 25;
              if (!_didIteratorError) {
                _context.next = 28;
                break;
              }
              throw _iteratorError;
            case 28:
              return _context.finish(25);
            case 29:
              return _context.finish(20);
            case 30:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 16, 20, 30], [21,, 25, 29]]);
      }))();
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/MessageEncoderStream.js






var MessageEncoderStream = /*#__PURE__*/function () {
  function MessageEncoderStream(options) {
    classCallCheck_classCallCheck(this, MessageEncoderStream);
    this.options = options;
  }
  return createClass_createClass(MessageEncoderStream, [{
    key: Symbol.asyncIterator,
    value: function value() {
      return this.asyncIterator();
    }
  }, {
    key: "asyncIterator",
    value: function asyncIterator() {
      var _this = this;
      return wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, msg, encoded;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _iteratorAbruptCompletion = false;
              _didIteratorError = false;
              _context.prev = 2;
              _iterator = asyncIterator_asyncIterator(_this.options.messageStream);
            case 4:
              _context.next = 6;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator.next());
            case 6:
              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                _context.next = 14;
                break;
              }
              msg = _step.value;
              encoded = _this.options.encoder.encode(msg);
              _context.next = 11;
              return encoded;
            case 11:
              _iteratorAbruptCompletion = false;
              _context.next = 4;
              break;
            case 14:
              _context.next = 20;
              break;
            case 16:
              _context.prev = 16;
              _context.t0 = _context["catch"](2);
              _didIteratorError = true;
              _iteratorError = _context.t0;
            case 20:
              _context.prev = 20;
              _context.prev = 21;
              if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
                _context.next = 25;
                break;
              }
              _context.next = 25;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator["return"]());
            case 25:
              _context.prev = 25;
              if (!_didIteratorError) {
                _context.next = 28;
                break;
              }
              throw _iteratorError;
            case 28:
              return _context.finish(25);
            case 29:
              return _context.finish(20);
            case 30:
              if (!_this.options.includeEndFrame) {
                _context.next = 33;
                break;
              }
              _context.next = 33;
              return new Uint8Array(0);
            case 33:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 16, 20, 30], [21,, 25, 29]]);
      }))();
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageDecoderStream.js






var SmithyMessageDecoderStream = /*#__PURE__*/function () {
  function SmithyMessageDecoderStream(options) {
    classCallCheck_classCallCheck(this, SmithyMessageDecoderStream);
    this.options = options;
  }
  return createClass_createClass(SmithyMessageDecoderStream, [{
    key: Symbol.asyncIterator,
    value: function value() {
      return this.asyncIterator();
    }
  }, {
    key: "asyncIterator",
    value: function asyncIterator() {
      var _this = this;
      return wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, message, deserialized;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _iteratorAbruptCompletion = false;
              _didIteratorError = false;
              _context.prev = 2;
              _iterator = asyncIterator_asyncIterator(_this.options.messageStream);
            case 4:
              _context.next = 6;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator.next());
            case 6:
              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                _context.next = 18;
                break;
              }
              message = _step.value;
              _context.next = 10;
              return awaitAsyncGenerator_awaitAsyncGenerator(_this.options.deserializer(message));
            case 10:
              deserialized = _context.sent;
              if (!(deserialized === undefined)) {
                _context.next = 13;
                break;
              }
              return _context.abrupt("continue", 15);
            case 13:
              _context.next = 15;
              return deserialized;
            case 15:
              _iteratorAbruptCompletion = false;
              _context.next = 4;
              break;
            case 18:
              _context.next = 24;
              break;
            case 20:
              _context.prev = 20;
              _context.t0 = _context["catch"](2);
              _didIteratorError = true;
              _iteratorError = _context.t0;
            case 24:
              _context.prev = 24;
              _context.prev = 25;
              if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
                _context.next = 29;
                break;
              }
              _context.next = 29;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator["return"]());
            case 29:
              _context.prev = 29;
              if (!_didIteratorError) {
                _context.next = 32;
                break;
              }
              throw _iteratorError;
            case 32:
              return _context.finish(29);
            case 33:
              return _context.finish(24);
            case 34:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 20, 24, 34], [25,, 29, 33]]);
      }))();
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/SmithyMessageEncoderStream.js






var SmithyMessageEncoderStream = /*#__PURE__*/function () {
  function SmithyMessageEncoderStream(options) {
    classCallCheck_classCallCheck(this, SmithyMessageEncoderStream);
    this.options = options;
  }
  return createClass_createClass(SmithyMessageEncoderStream, [{
    key: Symbol.asyncIterator,
    value: function value() {
      return this.asyncIterator();
    }
  }, {
    key: "asyncIterator",
    value: function asyncIterator() {
      var _this = this;
      return wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, payloadBuf;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _iteratorAbruptCompletion = false;
              _didIteratorError = false;
              _context.prev = 2;
              _iterator = asyncIterator_asyncIterator(_this.options.inputStream);
            case 4:
              _context.next = 6;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator.next());
            case 6:
              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
                _context.next = 14;
                break;
              }
              chunk = _step.value;
              payloadBuf = _this.options.serializer(chunk);
              _context.next = 11;
              return payloadBuf;
            case 11:
              _iteratorAbruptCompletion = false;
              _context.next = 4;
              break;
            case 14:
              _context.next = 20;
              break;
            case 16:
              _context.prev = 16;
              _context.t0 = _context["catch"](2);
              _didIteratorError = true;
              _iteratorError = _context.t0;
            case 20:
              _context.prev = 20;
              _context.prev = 21;
              if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
                _context.next = 25;
                break;
              }
              _context.next = 25;
              return awaitAsyncGenerator_awaitAsyncGenerator(_iterator["return"]());
            case 25:
              _context.prev = 25;
              if (!_didIteratorError) {
                _context.next = 28;
                break;
              }
              throw _iteratorError;
            case 28:
              return _context.finish(25);
            case 29:
              return _context.finish(20);
            case 30:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 16, 20, 30], [21,, 25, 29]]);
      }))();
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-codec@2.0.3/node_modules/@smithy/eventstream-codec/dist-es/index.js








;// ./node_modules/.pnpm/@smithy+util-middleware@2.0.0/node_modules/@smithy/util-middleware/dist-es/normalizeProvider.js
var normalizeProvider_normalizeProvider = function normalizeProvider(input) {
  if (typeof input === "function") return input;
  var promisified = Promise.resolve(input);
  return function () {
    return promisified;
  };
};
;// ./node_modules/.pnpm/@smithy+is-array-buffer@2.0.0/node_modules/@smithy/is-array-buffer/dist-es/index.js
var isArrayBuffer = function isArrayBuffer(arg) {
  return typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === "[object ArrayBuffer]";
};
;// external "buffer"
const external_buffer_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("buffer");
;// ./node_modules/.pnpm/@smithy+util-buffer-from@2.0.0/node_modules/@smithy/util-buffer-from/dist-es/index.js


var fromArrayBuffer = function fromArrayBuffer(input) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : input.byteLength - offset;
  if (!isArrayBuffer(input)) {
    throw new TypeError("The \"input\" argument must be ArrayBuffer. Received type ".concat(typeof input, " (").concat(input, ")"));
  }
  return external_buffer_namespaceObject.Buffer.from(input, offset, length);
};
var fromString = function fromString(input, encoding) {
  if (typeof input !== "string") {
    throw new TypeError("The \"input\" argument must be of type string. Received type ".concat(typeof input, " (").concat(input, ")"));
  }
  return encoding ? external_buffer_namespaceObject.Buffer.from(input, encoding) : external_buffer_namespaceObject.Buffer.from(input);
};
;// ./node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/fromUtf8.js

var fromUtf8 = function fromUtf8(input) {
  var buf = fromString(input, "utf8");
  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);
};
;// ./node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/toUint8Array.js

var toUint8Array = function toUint8Array(data) {
  if (typeof data === "string") {
    return fromUtf8(data);
  }
  if (ArrayBuffer.isView(data)) {
    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
  }
  return new Uint8Array(data);
};
;// ./node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/toUtf8.js

var toUtf8 = function toUtf8(input) {
  return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString("utf8");
};
;// ./node_modules/.pnpm/@smithy+util-utf8@2.0.0/node_modules/@smithy/util-utf8/dist-es/index.js



;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/constants.js
var ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
var TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
var REGION_SET_PARAM = "X-Amz-Region-Set";
var AUTH_HEADER = "authorization";
var AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();
var DATE_HEADER = "date";
var GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];
var SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();
var SHA256_HEADER = "x-amz-content-sha256";
var TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();
var HOST_HEADER = "host";
var ALWAYS_UNSIGNABLE_HEADERS = {
  authorization: true,
  "cache-control": true,
  connection: true,
  expect: true,
  from: true,
  "keep-alive": true,
  "max-forwards": true,
  pragma: true,
  referer: true,
  te: true,
  trailer: true,
  "transfer-encoding": true,
  upgrade: true,
  "user-agent": true,
  "x-amzn-trace-id": true
};
var PROXY_HEADER_PATTERN = /^proxy-/;
var SEC_HEADER_PATTERN = /^sec-/;
var UNSIGNABLE_PATTERNS = (/* unused pure expression or super */ null && ([/^proxy-/i, /^sec-/i]));
var ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
var ALGORITHM_IDENTIFIER_V4A = "AWS4-ECDSA-P256-SHA256";
var EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
var UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var MAX_CACHE_SIZE = 50;
var KEY_TYPE_IDENTIFIER = "aws4_request";
var MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/credentialDerivation.js





var signingKeyCache = {};
var cacheQueue = [];
var createScope = function createScope(shortDate, region, service) {
  return "".concat(shortDate, "/").concat(region, "/").concat(service, "/").concat(KEY_TYPE_IDENTIFIER);
};
var credentialDerivation_getSigningKey = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(sha256Constructor, credentials, shortDate, region, service) {
    var credsHash, cacheKey, key, _i, _arr, signable;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
        case 2:
          credsHash = _context.sent;
          cacheKey = "".concat(shortDate, ":").concat(region, ":").concat(service, ":").concat(toHex(credsHash), ":").concat(credentials.sessionToken);
          if (!(cacheKey in signingKeyCache)) {
            _context.next = 6;
            break;
          }
          return _context.abrupt("return", signingKeyCache[cacheKey]);
        case 6:
          cacheQueue.push(cacheKey);
          while (cacheQueue.length > MAX_CACHE_SIZE) {
            delete signingKeyCache[cacheQueue.shift()];
          }
          key = "AWS4".concat(credentials.secretAccessKey);
          _i = 0, _arr = [shortDate, region, service, KEY_TYPE_IDENTIFIER];
        case 10:
          if (!(_i < _arr.length)) {
            _context.next = 18;
            break;
          }
          signable = _arr[_i];
          _context.next = 14;
          return hmac(sha256Constructor, key, signable);
        case 14:
          key = _context.sent;
        case 15:
          _i++;
          _context.next = 10;
          break;
        case 18:
          return _context.abrupt("return", signingKeyCache[cacheKey] = key);
        case 19:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getSigningKey(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();
var clearCredentialCache = function clearCredentialCache() {
  cacheQueue.length = 0;
  Object.keys(signingKeyCache).forEach(function (cacheKey) {
    delete signingKeyCache[cacheKey];
  });
};
var hmac = function hmac(ctor, secret, data) {
  var hash = new ctor(secret);
  hash.update(toUint8Array(data));
  return hash.digest();
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getCanonicalHeaders.js


var getCanonicalHeaders = function getCanonicalHeaders(_ref, unsignableHeaders, signableHeaders) {
  var headers = _ref.headers;
  var canonical = {};
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(Object.keys(headers).sort()),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var headerName = _step.value;
      if (headers[headerName] == undefined) {
        continue;
      }
      var canonicalHeaderName = headerName.toLowerCase();
      if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || unsignableHeaders !== null && unsignableHeaders !== void 0 && unsignableHeaders.has(canonicalHeaderName) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
        if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {
          continue;
        }
      }
      canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return canonical;
};
;// ./node_modules/.pnpm/@smithy+util-uri-escape@2.0.0/node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js
var escapeUri = function escapeUri(uri) {
  return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);
};
var hexEncode = function hexEncode(c) {
  return "%".concat(c.charCodeAt(0).toString(16).toUpperCase());
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getCanonicalQuery.js



var getCanonicalQuery = function getCanonicalQuery(_ref) {
  var _ref$query = _ref.query,
    query = _ref$query === void 0 ? {} : _ref$query;
  var keys = [];
  var serialized = {};
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(Object.keys(query).sort()),
    _step;
  try {
    var _loop = function _loop() {
      var key = _step.value;
      if (key.toLowerCase() === SIGNATURE_HEADER) {
        return 1; // continue
      }
      keys.push(key);
      var value = query[key];
      if (typeof value === "string") {
        serialized[key] = "".concat(escapeUri(key), "=").concat(escapeUri(value));
      } else if (Array.isArray(value)) {
        serialized[key] = value.slice(0).sort().reduce(function (encoded, value) {
          return encoded.concat(["".concat(escapeUri(key), "=").concat(escapeUri(value))]);
        }, []).join("&");
      }
    };
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      if (_loop()) continue;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return keys.map(function (key) {
    return serialized[key];
  }).filter(function (serialized) {
    return serialized;
  }).join("&");
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/getPayloadHash.js






var getPayloadHash = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(_ref, hashConstructor) {
    var headers, body, _i, _Object$keys, headerName, hashCtor;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          headers = _ref.headers, body = _ref.body;
          _i = 0, _Object$keys = Object.keys(headers);
        case 2:
          if (!(_i < _Object$keys.length)) {
            _context.next = 9;
            break;
          }
          headerName = _Object$keys[_i];
          if (!(headerName.toLowerCase() === SHA256_HEADER)) {
            _context.next = 6;
            break;
          }
          return _context.abrupt("return", headers[headerName]);
        case 6:
          _i++;
          _context.next = 2;
          break;
        case 9:
          if (!(body == undefined)) {
            _context.next = 13;
            break;
          }
          return _context.abrupt("return", "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855");
        case 13:
          if (!(typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer(body))) {
            _context.next = 21;
            break;
          }
          hashCtor = new hashConstructor();
          hashCtor.update(toUint8Array(body));
          _context.t0 = toHex;
          _context.next = 19;
          return hashCtor.digest();
        case 19:
          _context.t1 = _context.sent;
          return _context.abrupt("return", (0, _context.t0)(_context.t1));
        case 21:
          return _context.abrupt("return", UNSIGNED_PAYLOAD);
        case 22:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getPayloadHash(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/headerUtil.js
var hasHeader = function hasHeader(soughtHeader, headers) {
  soughtHeader = soughtHeader.toLowerCase();
  for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {
    var headerName = _Object$keys[_i];
    if (soughtHeader === headerName.toLowerCase()) {
      return true;
    }
  }
  return false;
};
var getHeaderValue = function getHeaderValue(soughtHeader, headers) {
  soughtHeader = soughtHeader.toLowerCase();
  for (var _i2 = 0, _Object$keys2 = Object.keys(headers); _i2 < _Object$keys2.length; _i2++) {
    var headerName = _Object$keys2[_i2];
    if (soughtHeader === headerName.toLowerCase()) {
      return headers[headerName];
    }
  }
  return undefined;
};
var deleteHeader = function deleteHeader(soughtHeader, headers) {
  soughtHeader = soughtHeader.toLowerCase();
  for (var _i3 = 0, _Object$keys3 = Object.keys(headers); _i3 < _Object$keys3.length; _i3++) {
    var headerName = _Object$keys3[_i3];
    if (soughtHeader === headerName.toLowerCase()) {
      delete headers[headerName];
    }
  }
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/cloneRequest.js




var cloneRequest_excluded = ["headers", "query"];
var cloneRequest = function cloneRequest(_ref) {
  var headers = _ref.headers,
    query = _ref.query,
    rest = objectWithoutProperties_objectWithoutProperties(_ref, cloneRequest_excluded);
  return _objectSpread2(_objectSpread2({}, rest), {}, {
    headers: _objectSpread2({}, headers),
    query: query ? cloneRequest_cloneQuery(query) : undefined
  });
};
var cloneRequest_cloneQuery = function cloneQuery(query) {
  return Object.keys(query).reduce(function (carry, paramName) {
    var param = query[paramName];
    return _objectSpread2(_objectSpread2({}, carry), {}, defineProperty_defineProperty({}, paramName, Array.isArray(param) ? _toConsumableArray(param) : param));
  }, {});
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/moveHeadersToQuery.js


var moveHeadersToQuery = function moveHeadersToQuery(request) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _ref = typeof request.clone === "function" ? request.clone() : cloneRequest(request),
    headers = _ref.headers,
    _ref$query = _ref.query,
    query = _ref$query === void 0 ? {} : _ref$query;
  for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {
    var _options$unhoistableH;
    var name = _Object$keys[_i];
    var lname = name.toLowerCase();
    if (lname.slice(0, 6) === "x-amz-" && !((_options$unhoistableH = options.unhoistableHeaders) !== null && _options$unhoistableH !== void 0 && _options$unhoistableH.has(lname))) {
      query[name] = headers[name];
      delete headers[name];
    }
  }
  return _objectSpread2(_objectSpread2({}, request), {}, {
    headers: headers,
    query: query
  });
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/prepareRequest.js


var prepareRequest = function prepareRequest(request) {
  request = typeof request.clone === "function" ? request.clone() : cloneRequest(request);
  for (var _i = 0, _Object$keys = Object.keys(request.headers); _i < _Object$keys.length; _i++) {
    var headerName = _Object$keys[_i];
    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
      delete request.headers[headerName];
    }
  }
  return request;
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/utilDate.js
var iso8601 = function iso8601(time) {
  return toDate(time).toISOString().replace(/\.\d{3}Z$/, "Z");
};
var toDate = function toDate(time) {
  if (typeof time === "number") {
    return new Date(time * 1000);
  }
  if (typeof time === "string") {
    if (Number(time)) {
      return new Date(Number(time) * 1000);
    }
    return new Date(time);
  }
  return time;
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/SignatureV4.js


















var SignatureV4_SignatureV4 = /*#__PURE__*/function () {
  function SignatureV4(_ref) {
    var applyChecksum = _ref.applyChecksum,
      credentials = _ref.credentials,
      region = _ref.region,
      service = _ref.service,
      sha256 = _ref.sha256,
      _ref$uriEscapePath = _ref.uriEscapePath,
      uriEscapePath = _ref$uriEscapePath === void 0 ? true : _ref$uriEscapePath;
    classCallCheck_classCallCheck(this, SignatureV4);
    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);
    this.service = service;
    this.sha256 = sha256;
    this.uriEscapePath = uriEscapePath;
    this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
    this.regionProvider = normalizeProvider_normalizeProvider(region);
    this.credentialProvider = normalizeProvider_normalizeProvider(credentials);
  }
  return createClass_createClass(SignatureV4, [{
    key: "presign",
    value: function () {
      var _presign = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(originalRequest) {
        var options,
          _options$signingDate,
          signingDate,
          _options$expiresIn,
          expiresIn,
          unsignableHeaders,
          unhoistableHeaders,
          signableHeaders,
          signingRegion,
          signingService,
          credentials,
          region,
          _formatDate,
          longDate,
          shortDate,
          scope,
          request,
          canonicalHeaders,
          _args = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
              _options$signingDate = options.signingDate, signingDate = _options$signingDate === void 0 ? new Date() : _options$signingDate, _options$expiresIn = options.expiresIn, expiresIn = _options$expiresIn === void 0 ? 3600 : _options$expiresIn, unsignableHeaders = options.unsignableHeaders, unhoistableHeaders = options.unhoistableHeaders, signableHeaders = options.signableHeaders, signingRegion = options.signingRegion, signingService = options.signingService;
              _context.next = 4;
              return this.credentialProvider();
            case 4:
              credentials = _context.sent;
              this.validateResolvedCredentials(credentials);
              if (!(signingRegion !== null && signingRegion !== void 0)) {
                _context.next = 10;
                break;
              }
              _context.t0 = signingRegion;
              _context.next = 13;
              break;
            case 10:
              _context.next = 12;
              return this.regionProvider();
            case 12:
              _context.t0 = _context.sent;
            case 13:
              region = _context.t0;
              _formatDate = formatDate(signingDate), longDate = _formatDate.longDate, shortDate = _formatDate.shortDate;
              if (!(expiresIn > MAX_PRESIGNED_TTL)) {
                _context.next = 17;
                break;
              }
              return _context.abrupt("return", Promise.reject("Signature version 4 presigned URLs" + " must have an expiration date less than one week in" + " the future"));
            case 17:
              scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
              request = moveHeadersToQuery(prepareRequest(originalRequest), {
                unhoistableHeaders: unhoistableHeaders
              });
              if (credentials.sessionToken) {
                request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;
              }
              request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;
              request.query[CREDENTIAL_QUERY_PARAM] = "".concat(credentials.accessKeyId, "/").concat(scope);
              request.query[AMZ_DATE_QUERY_PARAM] = longDate;
              request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
              canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
              request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);
              _context.t1 = this;
              _context.t2 = longDate;
              _context.t3 = scope;
              _context.t4 = this.getSigningKey(credentials, region, shortDate, signingService);
              _context.t5 = this;
              _context.t6 = request;
              _context.t7 = canonicalHeaders;
              _context.next = 35;
              return getPayloadHash(originalRequest, this.sha256);
            case 35:
              _context.t8 = _context.sent;
              _context.t9 = _context.t5.createCanonicalRequest.call(_context.t5, _context.t6, _context.t7, _context.t8);
              _context.next = 39;
              return _context.t1.getSignature.call(_context.t1, _context.t2, _context.t3, _context.t4, _context.t9);
            case 39:
              request.query[SIGNATURE_QUERY_PARAM] = _context.sent;
              return _context.abrupt("return", request);
            case 41:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function presign(_x) {
        return _presign.apply(this, arguments);
      }
      return presign;
    }()
  }, {
    key: "sign",
    value: function () {
      var _sign = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(toSign, options) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(typeof toSign === "string")) {
                _context2.next = 4;
                break;
              }
              return _context2.abrupt("return", this.signString(toSign, options));
            case 4:
              if (!(toSign.headers && toSign.payload)) {
                _context2.next = 8;
                break;
              }
              return _context2.abrupt("return", this.signEvent(toSign, options));
            case 8:
              if (!toSign.message) {
                _context2.next = 12;
                break;
              }
              return _context2.abrupt("return", this.signMessage(toSign, options));
            case 12:
              return _context2.abrupt("return", this.signRequest(toSign, options));
            case 13:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function sign(_x2, _x3) {
        return _sign.apply(this, arguments);
      }
      return sign;
    }()
  }, {
    key: "signEvent",
    value: function () {
      var _signEvent = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(_ref2, _ref3) {
        var headers, payload, _ref3$signingDate, signingDate, priorSignature, signingRegion, signingService, region, _formatDate2, shortDate, longDate, scope, hashedPayload, hash, hashedHeaders, stringToSign;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              headers = _ref2.headers, payload = _ref2.payload;
              _ref3$signingDate = _ref3.signingDate, signingDate = _ref3$signingDate === void 0 ? new Date() : _ref3$signingDate, priorSignature = _ref3.priorSignature, signingRegion = _ref3.signingRegion, signingService = _ref3.signingService;
              if (!(signingRegion !== null && signingRegion !== void 0)) {
                _context3.next = 6;
                break;
              }
              _context3.t0 = signingRegion;
              _context3.next = 9;
              break;
            case 6:
              _context3.next = 8;
              return this.regionProvider();
            case 8:
              _context3.t0 = _context3.sent;
            case 9:
              region = _context3.t0;
              _formatDate2 = formatDate(signingDate), shortDate = _formatDate2.shortDate, longDate = _formatDate2.longDate;
              scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
              _context3.next = 14;
              return getPayloadHash({
                headers: {},
                body: payload
              }, this.sha256);
            case 14:
              hashedPayload = _context3.sent;
              hash = new this.sha256();
              hash.update(headers);
              _context3.t1 = toHex;
              _context3.next = 20;
              return hash.digest();
            case 20:
              _context3.t2 = _context3.sent;
              hashedHeaders = (0, _context3.t1)(_context3.t2);
              stringToSign = [EVENT_ALGORITHM_IDENTIFIER, longDate, scope, priorSignature, hashedHeaders, hashedPayload].join("\n");
              return _context3.abrupt("return", this.signString(stringToSign, {
                signingDate: signingDate,
                signingRegion: region,
                signingService: signingService
              }));
            case 24:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function signEvent(_x4, _x5) {
        return _signEvent.apply(this, arguments);
      }
      return signEvent;
    }()
  }, {
    key: "signMessage",
    value: function () {
      var _signMessage = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4(signableMessage, _ref4) {
        var _ref4$signingDate, signingDate, signingRegion, signingService, promise;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _ref4$signingDate = _ref4.signingDate, signingDate = _ref4$signingDate === void 0 ? new Date() : _ref4$signingDate, signingRegion = _ref4.signingRegion, signingService = _ref4.signingService;
              promise = this.signEvent({
                headers: this.headerMarshaller.format(signableMessage.message.headers),
                payload: signableMessage.message.body
              }, {
                signingDate: signingDate,
                signingRegion: signingRegion,
                signingService: signingService,
                priorSignature: signableMessage.priorSignature
              });
              return _context4.abrupt("return", promise.then(function (signature) {
                return {
                  message: signableMessage.message,
                  signature: signature
                };
              }));
            case 3:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function signMessage(_x6, _x7) {
        return _signMessage.apply(this, arguments);
      }
      return signMessage;
    }()
  }, {
    key: "signString",
    value: function () {
      var _signString = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(stringToSign) {
        var _ref5,
          _ref5$signingDate,
          signingDate,
          signingRegion,
          signingService,
          credentials,
          region,
          _formatDate3,
          shortDate,
          hash,
          _args5 = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _ref5 = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {}, _ref5$signingDate = _ref5.signingDate, signingDate = _ref5$signingDate === void 0 ? new Date() : _ref5$signingDate, signingRegion = _ref5.signingRegion, signingService = _ref5.signingService;
              _context5.next = 3;
              return this.credentialProvider();
            case 3:
              credentials = _context5.sent;
              this.validateResolvedCredentials(credentials);
              if (!(signingRegion !== null && signingRegion !== void 0)) {
                _context5.next = 9;
                break;
              }
              _context5.t0 = signingRegion;
              _context5.next = 12;
              break;
            case 9:
              _context5.next = 11;
              return this.regionProvider();
            case 11:
              _context5.t0 = _context5.sent;
            case 12:
              region = _context5.t0;
              _formatDate3 = formatDate(signingDate), shortDate = _formatDate3.shortDate;
              _context5.t1 = this.sha256;
              _context5.next = 17;
              return this.getSigningKey(credentials, region, shortDate, signingService);
            case 17:
              _context5.t2 = _context5.sent;
              hash = new _context5.t1(_context5.t2);
              hash.update(toUint8Array(stringToSign));
              _context5.t3 = toHex;
              _context5.next = 23;
              return hash.digest();
            case 23:
              _context5.t4 = _context5.sent;
              return _context5.abrupt("return", (0, _context5.t3)(_context5.t4));
            case 25:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function signString(_x8) {
        return _signString.apply(this, arguments);
      }
      return signString;
    }()
  }, {
    key: "signRequest",
    value: function () {
      var _signRequest = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(requestToSign) {
        var _ref6,
          _ref6$signingDate,
          signingDate,
          signableHeaders,
          unsignableHeaders,
          signingRegion,
          signingService,
          credentials,
          region,
          request,
          _formatDate4,
          longDate,
          shortDate,
          scope,
          payloadHash,
          canonicalHeaders,
          signature,
          _args6 = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _ref6 = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref6$signingDate = _ref6.signingDate, signingDate = _ref6$signingDate === void 0 ? new Date() : _ref6$signingDate, signableHeaders = _ref6.signableHeaders, unsignableHeaders = _ref6.unsignableHeaders, signingRegion = _ref6.signingRegion, signingService = _ref6.signingService;
              _context6.next = 3;
              return this.credentialProvider();
            case 3:
              credentials = _context6.sent;
              this.validateResolvedCredentials(credentials);
              if (!(signingRegion !== null && signingRegion !== void 0)) {
                _context6.next = 9;
                break;
              }
              _context6.t0 = signingRegion;
              _context6.next = 12;
              break;
            case 9:
              _context6.next = 11;
              return this.regionProvider();
            case 11:
              _context6.t0 = _context6.sent;
            case 12:
              region = _context6.t0;
              request = prepareRequest(requestToSign);
              _formatDate4 = formatDate(signingDate), longDate = _formatDate4.longDate, shortDate = _formatDate4.shortDate;
              scope = createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);
              request.headers[AMZ_DATE_HEADER] = longDate;
              if (credentials.sessionToken) {
                request.headers[TOKEN_HEADER] = credentials.sessionToken;
              }
              _context6.next = 20;
              return getPayloadHash(request, this.sha256);
            case 20:
              payloadHash = _context6.sent;
              if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {
                request.headers[SHA256_HEADER] = payloadHash;
              }
              canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
              _context6.next = 25;
              return this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));
            case 25:
              signature = _context6.sent;
              request.headers[AUTH_HEADER] = "".concat(ALGORITHM_IDENTIFIER, " ") + "Credential=".concat(credentials.accessKeyId, "/").concat(scope, ", ") + "SignedHeaders=".concat(getCanonicalHeaderList(canonicalHeaders), ", ") + "Signature=".concat(signature);
              return _context6.abrupt("return", request);
            case 28:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function signRequest(_x9) {
        return _signRequest.apply(this, arguments);
      }
      return signRequest;
    }()
  }, {
    key: "createCanonicalRequest",
    value: function createCanonicalRequest(request, canonicalHeaders, payloadHash) {
      var sortedHeaders = Object.keys(canonicalHeaders).sort();
      return "".concat(request.method, "\n").concat(this.getCanonicalPath(request), "\n").concat(getCanonicalQuery(request), "\n").concat(sortedHeaders.map(function (name) {
        return "".concat(name, ":").concat(canonicalHeaders[name]);
      }).join("\n"), "\n\n").concat(sortedHeaders.join(";"), "\n").concat(payloadHash);
    }
  }, {
    key: "createStringToSign",
    value: function () {
      var _createStringToSign = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee7(longDate, credentialScope, canonicalRequest) {
        var hash, hashedRequest;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              hash = new this.sha256();
              hash.update(toUint8Array(canonicalRequest));
              _context7.next = 4;
              return hash.digest();
            case 4:
              hashedRequest = _context7.sent;
              return _context7.abrupt("return", "".concat(ALGORITHM_IDENTIFIER, "\n").concat(longDate, "\n").concat(credentialScope, "\n").concat(toHex(hashedRequest)));
            case 6:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function createStringToSign(_x10, _x11, _x12) {
        return _createStringToSign.apply(this, arguments);
      }
      return createStringToSign;
    }()
  }, {
    key: "getCanonicalPath",
    value: function getCanonicalPath(_ref7) {
      var path = _ref7.path;
      if (this.uriEscapePath) {
        var normalizedPathSegments = [];
        var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(path.split("/")),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var pathSegment = _step.value;
            if ((pathSegment === null || pathSegment === void 0 ? void 0 : pathSegment.length) === 0) continue;
            if (pathSegment === ".") continue;
            if (pathSegment === "..") {
              normalizedPathSegments.pop();
            } else {
              normalizedPathSegments.push(pathSegment);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        var normalizedPath = "".concat(path !== null && path !== void 0 && path.startsWith("/") ? "/" : "").concat(normalizedPathSegments.join("/")).concat(normalizedPathSegments.length > 0 && path !== null && path !== void 0 && path.endsWith("/") ? "/" : "");
        var doubleEncoded = encodeURIComponent(normalizedPath);
        return doubleEncoded.replace(/%2F/g, "/");
      }
      return path;
    }
  }, {
    key: "getSignature",
    value: function () {
      var _getSignature = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee8(longDate, credentialScope, keyPromise, canonicalRequest) {
        var stringToSign, hash;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.next = 2;
              return this.createStringToSign(longDate, credentialScope, canonicalRequest);
            case 2:
              stringToSign = _context8.sent;
              _context8.t0 = this.sha256;
              _context8.next = 6;
              return keyPromise;
            case 6:
              _context8.t1 = _context8.sent;
              hash = new _context8.t0(_context8.t1);
              hash.update(toUint8Array(stringToSign));
              _context8.t2 = toHex;
              _context8.next = 12;
              return hash.digest();
            case 12:
              _context8.t3 = _context8.sent;
              return _context8.abrupt("return", (0, _context8.t2)(_context8.t3));
            case 14:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
      function getSignature(_x13, _x14, _x15, _x16) {
        return _getSignature.apply(this, arguments);
      }
      return getSignature;
    }()
  }, {
    key: "getSigningKey",
    value: function getSigningKey(credentials, region, shortDate, service) {
      return credentialDerivation_getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);
    }
  }, {
    key: "validateResolvedCredentials",
    value: function validateResolvedCredentials(credentials) {
      if (typeof credentials !== "object" || typeof credentials.accessKeyId !== "string" || typeof credentials.secretAccessKey !== "string") {
        throw new Error("Resolved credential object is not valid");
      }
    }
  }]);
}();
var formatDate = function formatDate(now) {
  var longDate = iso8601(now).replace(/[\-:]/g, "");
  return {
    longDate: longDate,
    shortDate: longDate.slice(0, 8)
  };
};
var getCanonicalHeaderList = function getCanonicalHeaderList(headers) {
  return Object.keys(headers).sort().join(";");
};
;// ./node_modules/.pnpm/@smithy+signature-v4@2.0.1/node_modules/@smithy/signature-v4/dist-es/index.js







;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/awsAuthConfiguration.js







var CREDENTIAL_EXPIRE_WINDOW = 300000;
var resolveAwsAuthConfig = function resolveAwsAuthConfig(input) {
  var normalizedCreds = input.credentials ? normalizeCredentialProvider(input.credentials) : input.credentialDefaultProvider(input);
  var _input$signingEscapeP = input.signingEscapePath,
    signingEscapePath = _input$signingEscapeP === void 0 ? true : _input$signingEscapeP,
    _input$systemClockOff = input.systemClockOffset,
    systemClockOffset = _input$systemClockOff === void 0 ? input.systemClockOffset || 0 : _input$systemClockOff,
    sha256 = input.sha256;
  var signer;
  if (input.signer) {
    signer = normalizeProvider_normalizeProvider(input.signer);
  } else if (input.regionInfoProvider) {
    signer = function signer() {
      return normalizeProvider_normalizeProvider(input.region)().then( /*#__PURE__*/function () {
        var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(region) {
          return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.t1 = input;
                _context.t2 = region;
                _context.next = 4;
                return input.useFipsEndpoint();
              case 4:
                _context.t3 = _context.sent;
                _context.next = 7;
                return input.useDualstackEndpoint();
              case 7:
                _context.t4 = _context.sent;
                _context.t5 = {
                  useFipsEndpoint: _context.t3,
                  useDualstackEndpoint: _context.t4
                };
                _context.next = 11;
                return _context.t1.regionInfoProvider.call(_context.t1, _context.t2, _context.t5);
              case 11:
                _context.t0 = _context.sent;
                if (_context.t0) {
                  _context.next = 14;
                  break;
                }
                _context.t0 = {};
              case 14:
                _context.t6 = _context.t0;
                _context.t7 = region;
                return _context.abrupt("return", [_context.t6, _context.t7]);
              case 17:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }()).then(function (_ref2) {
        var _ref3 = slicedToArray_slicedToArray(_ref2, 2),
          regionInfo = _ref3[0],
          region = _ref3[1];
        var signingRegion = regionInfo.signingRegion,
          signingService = regionInfo.signingService;
        input.signingRegion = input.signingRegion || signingRegion || region;
        input.signingName = input.signingName || signingService || input.serviceId;
        var params = _objectSpread2(_objectSpread2({}, input), {}, {
          credentials: normalizedCreds,
          region: input.signingRegion,
          service: input.signingName,
          sha256: sha256,
          uriEscapePath: signingEscapePath
        });
        var SignerCtor = input.signerConstructor || SignatureV4_SignatureV4;
        return new SignerCtor(params);
      });
    };
  } else {
    signer = /*#__PURE__*/function () {
      var _ref4 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(authScheme) {
        var signingRegion, signingService, params, SignerCtor;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.t0 = Object;
              _context2.t1 = {};
              _context2.t2 = input.signingName || input.defaultSigningName;
              _context2.next = 5;
              return normalizeProvider_normalizeProvider(input.region)();
            case 5:
              _context2.t3 = _context2.sent;
              _context2.t4 = {};
              _context2.t5 = {
                name: "sigv4",
                signingName: _context2.t2,
                signingRegion: _context2.t3,
                properties: _context2.t4
              };
              _context2.t6 = authScheme;
              authScheme = _context2.t0.assign.call(_context2.t0, _context2.t1, _context2.t5, _context2.t6);
              signingRegion = authScheme.signingRegion;
              signingService = authScheme.signingName;
              input.signingRegion = input.signingRegion || signingRegion;
              input.signingName = input.signingName || signingService || input.serviceId;
              params = _objectSpread2(_objectSpread2({}, input), {}, {
                credentials: normalizedCreds,
                region: input.signingRegion,
                service: input.signingName,
                sha256: sha256,
                uriEscapePath: signingEscapePath
              });
              SignerCtor = input.signerConstructor || SignatureV4_SignatureV4;
              return _context2.abrupt("return", new SignerCtor(params));
            case 17:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function signer(_x2) {
        return _ref4.apply(this, arguments);
      };
    }();
  }
  return _objectSpread2(_objectSpread2({}, input), {}, {
    systemClockOffset: systemClockOffset,
    signingEscapePath: signingEscapePath,
    credentials: normalizedCreds,
    signer: signer
  });
};
var resolveSigV4AuthConfig = function resolveSigV4AuthConfig(input) {
  var normalizedCreds = input.credentials ? normalizeCredentialProvider(input.credentials) : input.credentialDefaultProvider(input);
  var _input$signingEscapeP2 = input.signingEscapePath,
    signingEscapePath = _input$signingEscapeP2 === void 0 ? true : _input$signingEscapeP2,
    _input$systemClockOff2 = input.systemClockOffset,
    systemClockOffset = _input$systemClockOff2 === void 0 ? input.systemClockOffset || 0 : _input$systemClockOff2,
    sha256 = input.sha256;
  var signer;
  if (input.signer) {
    signer = normalizeProvider(input.signer);
  } else {
    signer = normalizeProvider(new SignatureV4({
      credentials: normalizedCreds,
      region: input.region,
      service: input.signingName,
      sha256: sha256,
      uriEscapePath: signingEscapePath
    }));
  }
  return _objectSpread(_objectSpread({}, input), {}, {
    systemClockOffset: systemClockOffset,
    signingEscapePath: signingEscapePath,
    credentials: normalizedCreds,
    signer: signer
  });
};
var normalizeCredentialProvider = function normalizeCredentialProvider(credentials) {
  if (typeof credentials === "function") {
    return memoize(credentials, function (credentials) {
      return credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW;
    }, function (credentials) {
      return credentials.expiration !== undefined;
    });
  }
  return normalizeProvider_normalizeProvider(credentials);
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js
var getSkewCorrectedDate = function getSkewCorrectedDate(systemClockOffset) {
  return new Date(Date.now() + systemClockOffset);
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js

var isClockSkewed = function isClockSkewed(clockTime, systemClockOffset) {
  return Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js

var getUpdatedSystemClockOffset = function getUpdatedSystemClockOffset(clockTime, currentSystemClockOffset) {
  var clockTimeInMs = Date.parse(clockTime);
  if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {
    return clockTimeInMs - Date.now();
  }
  return currentSystemClockOffset;
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/awsAuthMiddleware.js






var awsAuthMiddleware = function awsAuthMiddleware(options) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var _context$endpointV, _authScheme$signingRe;
        var authScheme, multiRegionOverride, signer, output, dateHeader;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (httpRequest_HttpRequest.isInstance(args.request)) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", next(args));
            case 2:
              authScheme = (_context$endpointV = context.endpointV2) === null || _context$endpointV === void 0 || (_context$endpointV = _context$endpointV.properties) === null || _context$endpointV === void 0 || (_context$endpointV = _context$endpointV.authSchemes) === null || _context$endpointV === void 0 ? void 0 : _context$endpointV[0];
              multiRegionOverride = (authScheme === null || authScheme === void 0 ? void 0 : authScheme.name) === "sigv4a" ? authScheme === null || authScheme === void 0 || (_authScheme$signingRe = authScheme.signingRegionSet) === null || _authScheme$signingRe === void 0 ? void 0 : _authScheme$signingRe.join(",") : undefined;
              _context.next = 6;
              return options.signer(authScheme);
            case 6:
              signer = _context.sent;
              _context.t0 = next;
              _context.t1 = _objectSpread2;
              _context.t2 = _objectSpread2({}, args);
              _context.t3 = {};
              _context.next = 13;
              return signer.sign(args.request, {
                signingDate: getSkewCorrectedDate(options.systemClockOffset),
                signingRegion: multiRegionOverride || context["signing_region"],
                signingService: context["signing_service"]
              });
            case 13:
              _context.t4 = _context.sent;
              _context.t5 = {
                request: _context.t4
              };
              _context.t6 = (0, _context.t1)(_context.t2, _context.t3, _context.t5);
              _context.next = 18;
              return (0, _context.t0)(_context.t6)["catch"](function (error) {
                var _error$ServerTime;
                var serverTime = (_error$ServerTime = error.ServerTime) !== null && _error$ServerTime !== void 0 ? _error$ServerTime : getDateHeader(error.$response);
                if (serverTime) {
                  options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);
                }
                throw error;
              });
            case 18:
              output = _context.sent;
              dateHeader = getDateHeader(output.response);
              if (dateHeader) {
                options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);
              }
              return _context.abrupt("return", output);
            case 22:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var getDateHeader = function getDateHeader(response) {
  var _response$headers$dat, _response$headers, _response$headers2;
  return httpResponse_HttpResponse.isInstance(response) ? (_response$headers$dat = (_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.date) !== null && _response$headers$dat !== void 0 ? _response$headers$dat : (_response$headers2 = response.headers) === null || _response$headers2 === void 0 ? void 0 : _response$headers2.Date : undefined;
};
var awsAuthMiddlewareOptions = {
  name: "awsAuthMiddleware",
  tags: ["SIGNATURE", "AWSAUTH"],
  relation: "after",
  toMiddleware: "retryMiddleware",
  override: true
};
var getAwsAuthPlugin = function getAwsAuthPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);
    }
  };
};
var getSigV4AuthPlugin = (/* unused pure expression or super */ null && (getAwsAuthPlugin));
;// ./node_modules/.pnpm/@aws-sdk+middleware-signing@3.391.0/node_modules/@aws-sdk/middleware-signing/dist-es/index.js


;// ./node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.391.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js

function resolveUserAgentConfig(input) {
  return _objectSpread2(_objectSpread2({}, input), {}, {
    customUserAgent: typeof input.customUserAgent === "string" ? [[input.customUserAgent]] : input.customUserAgent
  });
}
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partitions.json
const partitions_namespaceObject = /*#__PURE__*/JSON.parse('{"partitions":[{"id":"aws","outputs":{"dnsSuffix":"amazonaws.com","dualStackDnsSuffix":"api.aws","name":"aws","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^(us|eu|ap|sa|ca|me|af|il)\\\\-\\\\w+\\\\-\\\\d+$","regions":{"af-south-1":{"description":"Africa (Cape Town)"},"ap-east-1":{"description":"Asia Pacific (Hong Kong)"},"ap-northeast-1":{"description":"Asia Pacific (Tokyo)"},"ap-northeast-2":{"description":"Asia Pacific (Seoul)"},"ap-northeast-3":{"description":"Asia Pacific (Osaka)"},"ap-south-1":{"description":"Asia Pacific (Mumbai)"},"ap-south-2":{"description":"Asia Pacific (Hyderabad)"},"ap-southeast-1":{"description":"Asia Pacific (Singapore)"},"ap-southeast-2":{"description":"Asia Pacific (Sydney)"},"ap-southeast-3":{"description":"Asia Pacific (Jakarta)"},"ap-southeast-4":{"description":"Asia Pacific (Melbourne)"},"aws-global":{"description":"AWS Standard global region"},"ca-central-1":{"description":"Canada (Central)"},"eu-central-1":{"description":"Europe (Frankfurt)"},"eu-central-2":{"description":"Europe (Zurich)"},"eu-north-1":{"description":"Europe (Stockholm)"},"eu-south-1":{"description":"Europe (Milan)"},"eu-south-2":{"description":"Europe (Spain)"},"eu-west-1":{"description":"Europe (Ireland)"},"eu-west-2":{"description":"Europe (London)"},"eu-west-3":{"description":"Europe (Paris)"},"il-central-1":{"description":"Israel (Tel Aviv)"},"me-central-1":{"description":"Middle East (UAE)"},"me-south-1":{"description":"Middle East (Bahrain)"},"sa-east-1":{"description":"South America (Sao Paulo)"},"us-east-1":{"description":"US East (N. Virginia)"},"us-east-2":{"description":"US East (Ohio)"},"us-west-1":{"description":"US West (N. California)"},"us-west-2":{"description":"US West (Oregon)"}}},{"id":"aws-cn","outputs":{"dnsSuffix":"amazonaws.com.cn","dualStackDnsSuffix":"api.amazonwebservices.com.cn","name":"aws-cn","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^cn\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-cn-global":{"description":"AWS China global region"},"cn-north-1":{"description":"China (Beijing)"},"cn-northwest-1":{"description":"China (Ningxia)"}}},{"id":"aws-us-gov","outputs":{"dnsSuffix":"amazonaws.com","dualStackDnsSuffix":"api.aws","name":"aws-us-gov","supportsDualStack":true,"supportsFIPS":true},"regionRegex":"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-us-gov-global":{"description":"AWS GovCloud (US) global region"},"us-gov-east-1":{"description":"AWS GovCloud (US-East)"},"us-gov-west-1":{"description":"AWS GovCloud (US-West)"}}},{"id":"aws-iso","outputs":{"dnsSuffix":"c2s.ic.gov","dualStackDnsSuffix":"c2s.ic.gov","name":"aws-iso","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-iso-global":{"description":"AWS ISO (US) global region"},"us-iso-east-1":{"description":"US ISO East"},"us-iso-west-1":{"description":"US ISO WEST"}}},{"id":"aws-iso-b","outputs":{"dnsSuffix":"sc2s.sgov.gov","dualStackDnsSuffix":"sc2s.sgov.gov","name":"aws-iso-b","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$","regions":{"aws-iso-b-global":{"description":"AWS ISOB (US) global region"},"us-isob-east-1":{"description":"US ISOB East (Ohio)"}}},{"id":"aws-iso-e","outputs":{"dnsSuffix":"cloud.adc-e.uk","dualStackDnsSuffix":"cloud.adc-e.uk","name":"aws-iso-e","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$","regions":{}},{"id":"aws-iso-f","outputs":{"dnsSuffix":"csp.hci.ic.gov","dualStackDnsSuffix":"csp.hci.ic.gov","name":"aws-iso-f","supportsDualStack":false,"supportsFIPS":true},"regionRegex":"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$","regions":{}}],"version":"1.1"}');
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js




var selectedPartitionsInfo = partitions_namespaceObject;
var selectedUserAgentPrefix = "";
var partition = function partition(value) {
  var _selectedPartitionsIn = selectedPartitionsInfo,
    partitions = _selectedPartitionsIn.partitions;
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(partitions),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _partition = _step.value;
      var regions = _partition.regions,
        outputs = _partition.outputs;
      for (var _i = 0, _Object$entries = Object.entries(regions); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = slicedToArray_slicedToArray(_Object$entries[_i], 2),
          region = _Object$entries$_i[0],
          regionData = _Object$entries$_i[1];
        if (region === value) {
          return _objectSpread2(_objectSpread2({}, outputs), regionData);
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(partitions),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _partition2 = _step2.value;
      var regionRegex = _partition2.regionRegex,
        _outputs = _partition2.outputs;
      if (new RegExp(regionRegex).test(value)) {
        return _objectSpread2({}, _outputs);
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  var DEFAULT_PARTITION = partitions.find(function (partition) {
    return partition.id === "aws";
  });
  if (!DEFAULT_PARTITION) {
    throw new Error("Provided region was not found in the partition array or regex," + " and default partition with id 'aws' doesn't exist.");
  }
  return _objectSpread2({}, DEFAULT_PARTITION.outputs);
};
var setPartitionInfo = function setPartitionInfo(partitionsInfo) {
  var userAgentPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  selectedPartitionsInfo = partitionsInfo;
  selectedUserAgentPrefix = userAgentPrefix;
};
var useDefaultPartitionInfo = function useDefaultPartitionInfo() {
  setPartitionInfo(partitions_namespaceObject, "");
};
var getUserAgentPrefix = function getUserAgentPrefix() {
  return selectedUserAgentPrefix;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js
var debugId = "endpoints";
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js
function toDebugString(input) {
  if (typeof input !== "object" || input == null) {
    return input;
  }
  if ("ref" in input) {
    return "$".concat(toDebugString(input.ref));
  }
  if ("fn" in input) {
    return "".concat(input.fn, "(").concat((input.argv || []).map(toDebugString).join(", "), ")");
  }
  return JSON.stringify(input, null, 2);
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js
function _isNativeFunction(fn) {
  try {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  } catch (e) {
    return typeof fn === "function";
  }
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/construct.js


function _construct(t, e, r) {
  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && _setPrototypeOf(p, r.prototype), p;
}
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js




function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return _construct(Class, arguments, getPrototypeOf_getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };
  return _wrapNativeSuper(Class);
}
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js





var EndpointError = /*#__PURE__*/function (_Error) {
  function EndpointError(message) {
    var _this;
    classCallCheck_classCallCheck(this, EndpointError);
    _this = callSuper_callSuper(this, EndpointError, [message]);
    _this.name = "EndpointError";
    return _this;
  }
  inherits_inherits(EndpointError, _Error);
  return createClass_createClass(EndpointError);
}( /*#__PURE__*/_wrapNativeSuper(Error));
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js
var IP_V4_REGEX = new RegExp("^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$");
var isIpAddress = function isIpAddress(value) {
  return IP_V4_REGEX.test(value) || value.startsWith("[") && value.endsWith("]");
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js

var VALID_HOST_LABEL_REGEX = new RegExp("^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$");
var isValidHostLabel = function isValidHostLabel(value) {
  var allowSubDomains = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  if (!allowSubDomains) {
    return VALID_HOST_LABEL_REGEX.test(value);
  }
  var labels = value.split(".");
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(labels),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var label = _step.value;
      if (!isValidHostLabel(label)) {
        return false;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return true;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js



var isVirtualHostableS3Bucket = function isVirtualHostableS3Bucket(value) {
  var allowSubDomains = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  if (allowSubDomains) {
    var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(value.split(".")),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var label = _step.value;
        if (!isVirtualHostableS3Bucket(label)) {
          return false;
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return true;
  }
  if (!isValidHostLabel(value)) {
    return false;
  }
  if (value.length < 3 || value.length > 63) {
    return false;
  }
  if (value !== value.toLowerCase()) {
    return false;
  }
  if (isIpAddress(value)) {
    return false;
  }
  return true;
};
;// ../../../.bun/install/global/node_modules/@babel/runtime/helpers/esm/toArray.js




function toArray_toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js

var parseArn_parseArn = function parseArn(value) {
  var segments = value.split(":");
  if (segments.length < 6) return null;
  var _segments = toArray_toArray(segments),
    arn = _segments[0],
    partition = _segments[1],
    service = _segments[2],
    region = _segments[3],
    accountId = _segments[4],
    resourceId = _segments.slice(5);
  if (arn !== "arn" || partition === "" || service === "" || resourceId[0] === "") return null;
  return {
    partition: partition,
    service: service,
    region: region,
    accountId: accountId,
    resourceId: resourceId[0].includes("/") ? resourceId[0].split("/") : resourceId
  };
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/index.js



;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js
var booleanEquals = function booleanEquals(value1, value2) {
  return value1 === value2;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js


var getAttrPathList = function getAttrPathList(path) {
  var parts = path.split(".");
  var pathList = [];
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(parts),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var part = _step.value;
      var squareBracketIndex = part.indexOf("[");
      if (squareBracketIndex !== -1) {
        if (part.indexOf("]") !== part.length - 1) {
          throw new EndpointError("Path: '".concat(path, "' does not end with ']'"));
        }
        var arrayIndex = part.slice(squareBracketIndex + 1, -1);
        if (Number.isNaN(parseInt(arrayIndex))) {
          throw new EndpointError("Invalid array index: '".concat(arrayIndex, "' in path: '").concat(path, "'"));
        }
        if (squareBracketIndex !== 0) {
          pathList.push(part.slice(0, squareBracketIndex));
        }
        pathList.push(arrayIndex);
      } else {
        pathList.push(part);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return pathList;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js


var getAttr = function getAttr(value, path) {
  return getAttrPathList(path).reduce(function (acc, index) {
    if (typeof acc !== "object") {
      throw new EndpointError("Index '".concat(index, "' in '").concat(path, "' not found in '").concat(JSON.stringify(value), "'"));
    } else if (Array.isArray(acc)) {
      return acc[parseInt(index)];
    }
    return acc[index];
  }, value);
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js
var isSet = function isSet(value) {
  return value != null;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js
var not = function not(value) {
  return !value;
};
;// ./node_modules/.pnpm/@aws-sdk+types@3.391.0/node_modules/@aws-sdk/types/dist-es/auth.js

;// ./node_modules/.pnpm/@aws-sdk+types@3.391.0/node_modules/@aws-sdk/types/dist-es/dns.js
var HostAddressType;
(function (HostAddressType) {
  HostAddressType["AAAA"] = "AAAA";
  HostAddressType["A"] = "A";
})(HostAddressType || (HostAddressType = {}));
;// ./node_modules/.pnpm/@aws-sdk+types@3.391.0/node_modules/@aws-sdk/types/dist-es/endpoint.js

;// ./node_modules/.pnpm/@aws-sdk+types@3.391.0/node_modules/@aws-sdk/types/dist-es/transfer.js

;// ./node_modules/.pnpm/@aws-sdk+types@3.391.0/node_modules/@aws-sdk/types/dist-es/index.js































;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js




var DEFAULT_PORTS = defineProperty_defineProperty(defineProperty_defineProperty({}, EndpointURLScheme.HTTP, 80), EndpointURLScheme.HTTPS, 443);
var parseURL = function parseURL(value) {
  var whatwgURL = function () {
    try {
      if (value instanceof URL) {
        return value;
      }
      if (typeof value === "object" && "hostname" in value) {
        var _hostname = value.hostname,
          port = value.port,
          _value$protocol = value.protocol,
          _protocol = _value$protocol === void 0 ? "" : _value$protocol,
          _value$path = value.path,
          path = _value$path === void 0 ? "" : _value$path,
          _value$query = value.query,
          query = _value$query === void 0 ? {} : _value$query;
        var url = new URL("".concat(_protocol, "//").concat(_hostname).concat(port ? ":".concat(port) : "").concat(path));
        url.search = Object.entries(query).map(function (_ref) {
          var _ref2 = slicedToArray_slicedToArray(_ref, 2),
            k = _ref2[0],
            v = _ref2[1];
          return "".concat(k, "=").concat(v);
        }).join("&");
        return url;
      }
      return new URL(value);
    } catch (error) {
      return null;
    }
  }();
  if (!whatwgURL) {
    console.error("Unable to parse ".concat(JSON.stringify(value), " as a whatwg URL."));
    return null;
  }
  var urlString = whatwgURL.href;
  var host = whatwgURL.host,
    hostname = whatwgURL.hostname,
    pathname = whatwgURL.pathname,
    protocol = whatwgURL.protocol,
    search = whatwgURL.search;
  if (search) {
    return null;
  }
  var scheme = protocol.slice(0, -1);
  if (!Object.values(EndpointURLScheme).includes(scheme)) {
    return null;
  }
  var isIp = isIpAddress(hostname);
  var inputContainsDefaultPort = urlString.includes("".concat(host, ":").concat(DEFAULT_PORTS[scheme])) || typeof value === "string" && value.includes("".concat(host, ":").concat(DEFAULT_PORTS[scheme]));
  var authority = "".concat(host).concat(inputContainsDefaultPort ? ":".concat(DEFAULT_PORTS[scheme]) : "");
  return {
    scheme: scheme,
    authority: authority,
    path: pathname,
    normalizedPath: pathname.endsWith("/") ? pathname : "".concat(pathname, "/"),
    isIp: isIp
  };
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js
var stringEquals = function stringEquals(value1, value2) {
  return value1 === value2;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js
var substring = function substring(input, start, stop, reverse) {
  if (start >= stop || input.length < stop) {
    return null;
  }
  if (!reverse) {
    return input.substring(start, stop);
  }
  return input.substring(input.length - stop, input.length - start);
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js
var uriEncode = function uriEncode(value) {
  return encodeURIComponent(value).replace(/[!*'()]/g, function (c) {
    return "%".concat(c.charCodeAt(0).toString(16).toUpperCase());
  });
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/lib/index.js











;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js



var evaluateTemplate = function evaluateTemplate(template, options) {
  var evaluatedTemplateArr = [];
  var templateContext = _objectSpread2(_objectSpread2({}, options.endpointParams), options.referenceRecord);
  var currentIndex = 0;
  while (currentIndex < template.length) {
    var openingBraceIndex = template.indexOf("{", currentIndex);
    if (openingBraceIndex === -1) {
      evaluatedTemplateArr.push(template.slice(currentIndex));
      break;
    }
    evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));
    var closingBraceIndex = template.indexOf("}", openingBraceIndex);
    if (closingBraceIndex === -1) {
      evaluatedTemplateArr.push(template.slice(openingBraceIndex));
      break;
    }
    if (template[openingBraceIndex + 1] === "{" && template[closingBraceIndex + 1] === "}") {
      evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));
      currentIndex = closingBraceIndex + 2;
    }
    var parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);
    if (parameterName.includes("#")) {
      var _parameterName$split = parameterName.split("#"),
        _parameterName$split2 = slicedToArray_slicedToArray(_parameterName$split, 2),
        refName = _parameterName$split2[0],
        attrName = _parameterName$split2[1];
      evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));
    } else {
      evaluatedTemplateArr.push(templateContext[parameterName]);
    }
    currentIndex = closingBraceIndex + 1;
  }
  return evaluatedTemplateArr.join("");
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js

var getReferenceValue = function getReferenceValue(_ref, options) {
  var ref = _ref.ref;
  var referenceRecord = _objectSpread2(_objectSpread2({}, options.endpointParams), options.referenceRecord);
  return referenceRecord[ref];
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js




var evaluateExpression = function evaluateExpression(obj, keyName, options) {
  if (typeof obj === "string") {
    return evaluateTemplate(obj, options);
  } else if (obj["fn"]) {
    return callFunction(obj, options);
  } else if (obj["ref"]) {
    return getReferenceValue(obj, options);
  }
  throw new EndpointError("'".concat(keyName, "': ").concat(String(obj), " is not a string, function or reference."));
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js



var callFunction = function callFunction(_ref, options) {
  var fn = _ref.fn,
    argv = _ref.argv;
  var evaluatedArgs = argv.map(function (arg) {
    return ["boolean", "number"].includes(typeof arg) ? arg : evaluateExpression(arg, "arg", options);
  });
  return fn.split(".").reduce(function (acc, key) {
    return acc[key];
  }, lib_namespaceObject).apply(void 0, _toConsumableArray(evaluatedArgs));
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js


var evaluateCondition_excluded = ["assign"];



var evaluateCondition = function evaluateCondition(_ref, options) {
  var _options$logger, _options$logger$debug;
  var assign = _ref.assign,
    fnArgs = objectWithoutProperties_objectWithoutProperties(_ref, evaluateCondition_excluded);
  if (assign && assign in options.referenceRecord) {
    throw new EndpointError("'".concat(assign, "' is already defined in Reference Record."));
  }
  var value = callFunction(fnArgs, options);
  (_options$logger = options.logger) === null || _options$logger === void 0 || (_options$logger$debug = _options$logger.debug) === null || _options$logger$debug === void 0 || _options$logger$debug.call(_options$logger, debugId, "evaluateCondition: ".concat(toDebugString(fnArgs), " = ").concat(toDebugString(value)));
  return _objectSpread2({
    result: value === "" ? true : !!value
  }, assign != null && {
    toAssign: {
      name: assign,
      value: value
    }
  });
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js




var evaluateConditions = function evaluateConditions() {
  var conditions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var options = arguments.length > 1 ? arguments[1] : undefined;
  var conditionsReferenceRecord = {};
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(conditions),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var condition = _step.value;
      var _evaluateCondition = evaluateCondition(condition, _objectSpread2(_objectSpread2({}, options), {}, {
          referenceRecord: _objectSpread2(_objectSpread2({}, options.referenceRecord), conditionsReferenceRecord)
        })),
        result = _evaluateCondition.result,
        toAssign = _evaluateCondition.toAssign;
      if (!result) {
        return {
          result: result
        };
      }
      if (toAssign) {
        var _options$logger, _options$logger$debug, _options$logger2;
        conditionsReferenceRecord[toAssign.name] = toAssign.value;
        (_options$logger = options.logger) === null || _options$logger === void 0 || (_options$logger$debug = (_options$logger2 = _options$logger).debug) === null || _options$logger$debug === void 0 || _options$logger$debug.call(_options$logger2, debugId, "assign: ".concat(toAssign.name, " := ").concat(toDebugString(toAssign.value)));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return {
    result: true,
    referenceRecord: conditionsReferenceRecord
  };
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js





var getEndpointHeaders = function getEndpointHeaders(headers, options) {
  return Object.entries(headers).reduce(function (acc, _ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 2),
      headerKey = _ref2[0],
      headerVal = _ref2[1];
    return _objectSpread2(_objectSpread2({}, acc), {}, defineProperty_defineProperty({}, headerKey, headerVal.map(function (headerValEntry) {
      var processedExpr = evaluateExpression(headerValEntry, "Header value entry", options);
      if (typeof processedExpr !== "string") {
        throw new EndpointError("Header '".concat(headerKey, "' value '").concat(processedExpr, "' is not a string"));
      }
      return processedExpr;
    })));
  }, {});
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js



var getEndpointProperty = function getEndpointProperty(property, options) {
  if (Array.isArray(property)) {
    return property.map(function (propertyEntry) {
      return getEndpointProperty(propertyEntry, options);
    });
  }
  switch (typeof property) {
    case "string":
      return evaluateTemplate(property, options);
    case "object":
      if (property === null) {
        throw new EndpointError("Unexpected endpoint property: ".concat(property));
      }
      return getEndpointProperties(property, options);
    case "boolean":
      return property;
    default:
      throw new EndpointError("Unexpected endpoint property type: ".concat(typeof property));
  }
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js




var getEndpointProperties = function getEndpointProperties(properties, options) {
  return Object.entries(properties).reduce(function (acc, _ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 2),
      propertyKey = _ref2[0],
      propertyVal = _ref2[1];
    return _objectSpread2(_objectSpread2({}, acc), {}, defineProperty_defineProperty({}, propertyKey, getEndpointProperty(propertyVal, options)));
  }, {});
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js


var getEndpointUrl = function getEndpointUrl(endpointUrl, options) {
  var expression = evaluateExpression(endpointUrl, "Endpoint URL", options);
  if (typeof expression === "string") {
    try {
      return new URL(expression);
    } catch (error) {
      console.error("Failed to construct URL with ".concat(expression), error);
      throw error;
    }
  }
  throw new EndpointError("Endpoint URL must be a string, got ".concat(typeof expression));
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js






var evaluateEndpointRule = function evaluateEndpointRule(endpointRule, options) {
  var _options$logger, _options$logger$debug;
  var conditions = endpointRule.conditions,
    endpoint = endpointRule.endpoint;
  var _evaluateConditions = evaluateConditions(conditions, options),
    result = _evaluateConditions.result,
    referenceRecord = _evaluateConditions.referenceRecord;
  if (!result) {
    return;
  }
  var endpointRuleOptions = _objectSpread2(_objectSpread2({}, options), {}, {
    referenceRecord: _objectSpread2(_objectSpread2({}, options.referenceRecord), referenceRecord)
  });
  var url = endpoint.url,
    properties = endpoint.properties,
    headers = endpoint.headers;
  (_options$logger = options.logger) === null || _options$logger === void 0 || (_options$logger$debug = _options$logger.debug) === null || _options$logger$debug === void 0 || _options$logger$debug.call(_options$logger, debugId, "Resolving endpoint from template: ".concat(toDebugString(endpoint)));
  return _objectSpread2(_objectSpread2(_objectSpread2({}, headers != undefined && {
    headers: getEndpointHeaders(headers, endpointRuleOptions)
  }), properties != undefined && {
    properties: getEndpointProperties(properties, endpointRuleOptions)
  }), {}, {
    url: getEndpointUrl(url, endpointRuleOptions)
  });
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js




var evaluateErrorRule = function evaluateErrorRule(errorRule, options) {
  var conditions = errorRule.conditions,
    error = errorRule.error;
  var _evaluateConditions = evaluateConditions(conditions, options),
    result = _evaluateConditions.result,
    referenceRecord = _evaluateConditions.referenceRecord;
  if (!result) {
    return;
  }
  throw new EndpointError(evaluateExpression(error, "Error", _objectSpread2(_objectSpread2({}, options), {}, {
    referenceRecord: _objectSpread2(_objectSpread2({}, options.referenceRecord), referenceRecord)
  })));
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js



var evaluateTreeRule = function evaluateTreeRule(treeRule, options) {
  var conditions = treeRule.conditions,
    rules = treeRule.rules;
  var _evaluateConditions = evaluateConditions(conditions, options),
    result = _evaluateConditions.result,
    referenceRecord = _evaluateConditions.referenceRecord;
  if (!result) {
    return;
  }
  return evaluateRules(rules, _objectSpread2(_objectSpread2({}, options), {}, {
    referenceRecord: _objectSpread2(_objectSpread2({}, options.referenceRecord), referenceRecord)
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js





var evaluateRules = function evaluateRules(rules, options) {
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(rules),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var rule = _step.value;
      if (rule.type === "endpoint") {
        var endpointOrUndefined = evaluateEndpointRule(rule, options);
        if (endpointOrUndefined) {
          return endpointOrUndefined;
        }
      } else if (rule.type === "error") {
        evaluateErrorRule(rule, options);
      } else if (rule.type === "tree") {
        var _endpointOrUndefined = evaluateTreeRule(rule, options);
        if (_endpointOrUndefined) {
          return _endpointOrUndefined;
        }
      } else {
        throw new EndpointError("Unknown endpoint rule: ".concat(rule));
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  throw new EndpointError("Rules evaluation failed");
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/utils/index.js

;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js





var resolveEndpoint = function resolveEndpoint(ruleSetObject, options) {
  var _options$logger, _options$logger$debug, _options$endpointPara, _options$logger2, _options$logger2$debu;
  var endpointParams = options.endpointParams,
    logger = options.logger;
  var parameters = ruleSetObject.parameters,
    rules = ruleSetObject.rules;
  (_options$logger = options.logger) === null || _options$logger === void 0 || (_options$logger$debug = _options$logger.debug) === null || _options$logger$debug === void 0 || _options$logger$debug.call(_options$logger, "".concat(debugId, " Initial EndpointParams: ").concat(toDebugString(endpointParams)));
  var paramsWithDefault = Object.entries(parameters).filter(function (_ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 2),
      v = _ref2[1];
    return v["default"] != null;
  }).map(function (_ref3) {
    var _ref4 = slicedToArray_slicedToArray(_ref3, 2),
      k = _ref4[0],
      v = _ref4[1];
    return [k, v["default"]];
  });
  if (paramsWithDefault.length > 0) {
    var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(paramsWithDefault),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _endpointParams$param;
        var _step$value = slicedToArray_slicedToArray(_step.value, 2),
          paramKey = _step$value[0],
          paramDefaultValue = _step$value[1];
        endpointParams[paramKey] = (_endpointParams$param = endpointParams[paramKey]) !== null && _endpointParams$param !== void 0 ? _endpointParams$param : paramDefaultValue;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  var requiredParams = Object.entries(parameters).filter(function (_ref5) {
    var _ref6 = slicedToArray_slicedToArray(_ref5, 2),
      v = _ref6[1];
    return v.required;
  }).map(function (_ref7) {
    var _ref8 = slicedToArray_slicedToArray(_ref7, 1),
      k = _ref8[0];
    return k;
  });
  var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(requiredParams),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var requiredParam = _step2.value;
      if (endpointParams[requiredParam] == null) {
        throw new EndpointError("Missing required parameter: '".concat(requiredParam, "'"));
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  var endpoint = evaluateRules(rules, {
    endpointParams: endpointParams,
    logger: logger,
    referenceRecord: {}
  });
  if ((_options$endpointPara = options.endpointParams) !== null && _options$endpointPara !== void 0 && _options$endpointPara.Endpoint) {
    try {
      var givenEndpoint = new URL(options.endpointParams.Endpoint);
      var protocol = givenEndpoint.protocol,
        port = givenEndpoint.port;
      endpoint.url.protocol = protocol;
      endpoint.url.port = port;
    } catch (e) {}
  }
  (_options$logger2 = options.logger) === null || _options$logger2 === void 0 || (_options$logger2$debu = _options$logger2.debug) === null || _options$logger2$debu === void 0 || _options$logger2$debu.call(_options$logger2, "".concat(debugId, " Resolved endpoint: ").concat(toDebugString(endpoint)));
  return endpoint;
};
;// ./node_modules/.pnpm/@aws-sdk+util-endpoints@3.391.0/node_modules/@aws-sdk/util-endpoints/dist-es/index.js




;// ./node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.391.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js
var USER_AGENT = "user-agent";
var X_AMZ_USER_AGENT = "x-amz-user-agent";
var SPACE = " ";
var UA_NAME_SEPARATOR = "/";
var UA_NAME_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g;
var UA_VALUE_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;
var UA_ESCAPE_CHAR = "-";
;// ./node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.391.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js







var userAgentMiddleware = function userAgentMiddleware(options) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var _context$userAgent, _options$customUserAg;
        var request, headers, userAgent, defaultUserAgent, customUserAgent, prefix, sdkUserAgentValue, normalUAValue;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (httpRequest_HttpRequest.isInstance(request)) {
                _context.next = 3;
                break;
              }
              return _context.abrupt("return", next(args));
            case 3:
              headers = request.headers;
              userAgent = (context === null || context === void 0 || (_context$userAgent = context.userAgent) === null || _context$userAgent === void 0 ? void 0 : _context$userAgent.map(escapeUserAgent)) || [];
              _context.next = 7;
              return options.defaultUserAgentProvider();
            case 7:
              defaultUserAgent = _context.sent.map(escapeUserAgent);
              customUserAgent = (options === null || options === void 0 || (_options$customUserAg = options.customUserAgent) === null || _options$customUserAg === void 0 ? void 0 : _options$customUserAg.map(escapeUserAgent)) || [];
              prefix = getUserAgentPrefix();
              sdkUserAgentValue = (prefix ? [prefix] : []).concat([].concat(_toConsumableArray(defaultUserAgent), _toConsumableArray(userAgent), _toConsumableArray(customUserAgent))).join(SPACE);
              normalUAValue = [].concat(_toConsumableArray(defaultUserAgent.filter(function (section) {
                return section.startsWith("aws-sdk-");
              })), _toConsumableArray(customUserAgent)).join(SPACE);
              if (options.runtime !== "browser") {
                if (normalUAValue) {
                  headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? "".concat(headers[USER_AGENT], " ").concat(normalUAValue) : normalUAValue;
                }
                headers[USER_AGENT] = sdkUserAgentValue;
              } else {
                headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;
              }
              return _context.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: request
              })));
            case 14:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var escapeUserAgent = function escapeUserAgent(userAgentPair) {
  var _userAgentPair$;
  var name = userAgentPair[0].split(UA_NAME_SEPARATOR).map(function (part) {
    return part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR);
  }).join(UA_NAME_SEPARATOR);
  var version = (_userAgentPair$ = userAgentPair[1]) === null || _userAgentPair$ === void 0 ? void 0 : _userAgentPair$.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);
  var prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);
  var prefix = name.substring(0, prefixSeparatorIndex);
  var uaName = name.substring(prefixSeparatorIndex + 1);
  if (prefix === "api") {
    uaName = uaName.toLowerCase();
  }
  return [prefix, uaName, version].filter(function (item) {
    return item && item.length > 0;
  }).reduce(function (acc, item, index) {
    switch (index) {
      case 0:
        return item;
      case 1:
        return "".concat(acc, "/").concat(item);
      default:
        return "".concat(acc, "#").concat(item);
    }
  }, "");
};
var getUserAgentMiddlewareOptions = {
  name: "getUserAgentMiddleware",
  step: "build",
  priority: "low",
  tags: ["SET_USER_AGENT", "USER_AGENT"],
  override: true
};
var getUserAgentPlugin = function getUserAgentPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-user-agent@3.391.0/node_modules/@aws-sdk/middleware-user-agent/dist-es/index.js


;// ./node_modules/.pnpm/@smithy+util-config-provider@2.0.0/node_modules/@smithy/util-config-provider/dist-es/booleanSelector.js
var SelectorType;
(function (SelectorType) {
  SelectorType["ENV"] = "env";
  SelectorType["CONFIG"] = "shared config entry";
})(SelectorType || (SelectorType = {}));
var booleanSelector = function booleanSelector(obj, key, type) {
  if (!(key in obj)) return undefined;
  if (obj[key] === "true") return true;
  if (obj[key] === "false") return false;
  throw new Error("Cannot load ".concat(type, " \"").concat(key, "\". Expected \"true\" or \"false\", got ").concat(obj[key], "."));
};
;// ./node_modules/.pnpm/@smithy+util-config-provider@2.0.0/node_modules/@smithy/util-config-provider/dist-es/index.js

;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js

var ENV_USE_DUALSTACK_ENDPOINT = "AWS_USE_DUALSTACK_ENDPOINT";
var CONFIG_USE_DUALSTACK_ENDPOINT = "use_dualstack_endpoint";
var DEFAULT_USE_DUALSTACK_ENDPOINT = false;
var NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV);
  },
  configFileSelector: function configFileSelector(profile) {
    return booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG);
  },
  "default": false
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js

var ENV_USE_FIPS_ENDPOINT = "AWS_USE_FIPS_ENDPOINT";
var CONFIG_USE_FIPS_ENDPOINT = "use_fips_endpoint";
var DEFAULT_USE_FIPS_ENDPOINT = false;
var NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV);
  },
  configFileSelector: function configFileSelector(profile) {
    return booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG);
  },
  "default": false
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/endpointsConfig/index.js




;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/regionConfig/config.js
var REGION_ENV_NAME = "AWS_REGION";
var REGION_INI_NAME = "region";
var NODE_REGION_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return env[REGION_ENV_NAME];
  },
  configFileSelector: function configFileSelector(profile) {
    return profile[REGION_INI_NAME];
  },
  "default": function _default() {
    throw new Error("Region is missing");
  }
};
var NODE_REGION_CONFIG_FILE_OPTIONS = {
  preferredFile: "credentials"
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/regionConfig/isFipsRegion.js
var isFipsRegion = function isFipsRegion(region) {
  return typeof region === "string" && (region.startsWith("fips-") || region.endsWith("-fips"));
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/regionConfig/getRealRegion.js

var getRealRegion = function getRealRegion(region) {
  return isFipsRegion(region) ? ["fips-aws-global", "aws-fips"].includes(region) ? "us-east-1" : region.replace(/fips-(dkr-|prod-)?|-fips/, "") : region;
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/regionConfig/resolveRegionConfig.js





var resolveRegionConfig = function resolveRegionConfig(input) {
  var _region = input.region,
    _useFipsEndpoint = input.useFipsEndpoint;
  if (!_region) {
    throw new Error("Region is missing");
  }
  return _objectSpread2(_objectSpread2({}, input), {}, {
    region: function () {
      var _region2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var providedRegion;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!(typeof _region === "string")) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", getRealRegion(_region));
            case 2:
              _context.next = 4;
              return _region();
            case 4:
              providedRegion = _context.sent;
              return _context.abrupt("return", getRealRegion(providedRegion));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function region() {
        return _region2.apply(this, arguments);
      }
      return region;
    }(),
    useFipsEndpoint: function () {
      var _useFipsEndpoint2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
        var providedRegion;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (!(typeof _region === "string")) {
                _context2.next = 4;
                break;
              }
              _context2.t0 = _region;
              _context2.next = 7;
              break;
            case 4:
              _context2.next = 6;
              return _region();
            case 6:
              _context2.t0 = _context2.sent;
            case 7:
              providedRegion = _context2.t0;
              if (!isFipsRegion(providedRegion)) {
                _context2.next = 10;
                break;
              }
              return _context2.abrupt("return", true);
            case 10:
              return _context2.abrupt("return", typeof _useFipsEndpoint !== "function" ? Promise.resolve(!!_useFipsEndpoint) : _useFipsEndpoint());
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function useFipsEndpoint() {
        return _useFipsEndpoint2.apply(this, arguments);
      }
      return useFipsEndpoint;
    }()
  });
};
;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/regionConfig/index.js


;// ./node_modules/.pnpm/@smithy+config-resolver@2.0.3/node_modules/@smithy/config-resolver/dist-es/index.js



;// ./node_modules/.pnpm/@smithy+eventstream-serde-config-resolver@2.0.3/node_modules/@smithy/eventstream-serde-config-resolver/dist-es/EventStreamSerdeConfig.js

var resolveEventStreamSerdeConfig = function resolveEventStreamSerdeConfig(input) {
  return _objectSpread2(_objectSpread2({}, input), {}, {
    eventStreamMarshaller: input.eventStreamSerdeProvider(input)
  });
};
;// ./node_modules/.pnpm/@smithy+middleware-content-length@2.0.3/node_modules/@smithy/middleware-content-length/dist-es/index.js





var dist_es_CONTENT_LENGTH_HEADER = "content-length";
function contentLengthMiddleware(bodyLengthChecker) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request, body, headers, length;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (httpRequest_HttpRequest.isInstance(request)) {
                body = request.body, headers = request.headers;
                if (body && Object.keys(headers).map(function (str) {
                  return str.toLowerCase();
                }).indexOf(dist_es_CONTENT_LENGTH_HEADER) === -1) {
                  try {
                    length = bodyLengthChecker(body);
                    request.headers = _objectSpread2(_objectSpread2({}, request.headers), {}, defineProperty_defineProperty({}, dist_es_CONTENT_LENGTH_HEADER, String(length)));
                  } catch (error) {}
                }
              }
              return _context.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: request
              })));
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
}
var contentLengthMiddlewareOptions = {
  step: "build",
  tags: ["SET_CONTENT_LENGTH", "CONTENT_LENGTH"],
  name: "contentLengthMiddleware",
  override: true
};
var getContentLengthPlugin = function getContentLengthPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/service-customizations/s3.js



var resolveParamsForS3 = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(endpointParams) {
    var bucket;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          bucket = (endpointParams === null || endpointParams === void 0 ? void 0 : endpointParams.Bucket) || "";
          if (typeof endpointParams.Bucket === "string") {
            endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent("#")).replace(/\?/g, encodeURIComponent("?"));
          }
          if (!isArnBucketName(bucket)) {
            _context.next = 7;
            break;
          }
          if (!(endpointParams.ForcePathStyle === true)) {
            _context.next = 5;
            break;
          }
          throw new Error("Path-style addressing cannot be used with ARN buckets");
        case 5:
          _context.next = 8;
          break;
        case 7:
          if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(".") !== -1 && !String(endpointParams.Endpoint).startsWith("http:") || bucket.toLowerCase() !== bucket || bucket.length < 3) {
            endpointParams.ForcePathStyle = true;
          }
        case 8:
          if (endpointParams.DisableMultiRegionAccessPoints) {
            endpointParams.disableMultiRegionAccessPoints = true;
            endpointParams.DisableMRAP = true;
          }
          return _context.abrupt("return", endpointParams);
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function resolveParamsForS3(_x) {
    return _ref.apply(this, arguments);
  };
}();
var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var DOT_PATTERN = /\./;
var S3_HOSTNAME_PATTERN = /^(.+\.)?s3(-fips)?(\.dualstack)?[.-]([a-z0-9-]+)\./;
var isDnsCompatibleBucketName = function isDnsCompatibleBucketName(bucketName) {
  return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
};
var isArnBucketName = function isArnBucketName(bucketName) {
  var _bucketName$split = bucketName.split(":"),
    _bucketName$split2 = slicedToArray_slicedToArray(_bucketName$split, 6),
    arn = _bucketName$split2[0],
    partition = _bucketName$split2[1],
    service = _bucketName$split2[2],
    region = _bucketName$split2[3],
    account = _bucketName$split2[4],
    typeOrId = _bucketName$split2[5];
  var isArn = arn === "arn" && bucketName.split(":").length >= 6;
  var isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;
  if (isArn && !isValidArn) {
    throw new Error("Invalid ARN: ".concat(bucketName, " was an invalid ARN."));
  }
  return arn === "arn" && !!partition && !!service && !!account && !!typeOrId;
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js


var createConfigValueProvider = function createConfigValueProvider(configKey, canonicalEndpointParamKey, config) {
  var configProvider = /*#__PURE__*/function () {
    var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      var _config$configKey;
      var configValue;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            configValue = (_config$configKey = config[configKey]) !== null && _config$configKey !== void 0 ? _config$configKey : config[canonicalEndpointParamKey];
            if (!(typeof configValue === "function")) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return", configValue());
          case 3:
            return _context.abrupt("return", configValue);
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function configProvider() {
      return _ref.apply(this, arguments);
    };
  }();
  if (configKey === "endpoint" || canonicalEndpointParamKey === "endpoint") {
    return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
      var endpoint, protocol, hostname, port, path;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return configProvider();
          case 2:
            endpoint = _context2.sent;
            if (!(endpoint && typeof endpoint === "object")) {
              _context2.next = 9;
              break;
            }
            if (!("url" in endpoint)) {
              _context2.next = 6;
              break;
            }
            return _context2.abrupt("return", endpoint.url.href);
          case 6:
            if (!("hostname" in endpoint)) {
              _context2.next = 9;
              break;
            }
            protocol = endpoint.protocol, hostname = endpoint.hostname, port = endpoint.port, path = endpoint.path;
            return _context2.abrupt("return", "".concat(protocol, "//").concat(hostname).concat(port ? ":" + port : "").concat(path));
          case 9:
            return _context2.abrupt("return", endpoint);
          case 10:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
  }
  return configProvider;
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js





var getEndpointFromInstructions = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(commandInput, instructionsSupplier, clientConfig, context) {
    var endpointParams, endpoint;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return resolveParams(commandInput, instructionsSupplier, clientConfig);
        case 2:
          endpointParams = _context.sent;
          if (!(typeof clientConfig.endpointProvider !== "function")) {
            _context.next = 5;
            break;
          }
          throw new Error("config.endpointProvider is not set.");
        case 5:
          endpoint = clientConfig.endpointProvider(endpointParams, context);
          return _context.abrupt("return", endpoint);
        case 7:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getEndpointFromInstructions(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();
var resolveParams = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(commandInput, instructionsSupplier, clientConfig) {
    var _instructionsSupplier;
    var endpointParams, instructions, _i, _Object$entries, _Object$entries$_i, name, instruction;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          endpointParams = {};
          instructions = (instructionsSupplier === null || instructionsSupplier === void 0 || (_instructionsSupplier = instructionsSupplier.getEndpointParameterInstructions) === null || _instructionsSupplier === void 0 ? void 0 : _instructionsSupplier.call(instructionsSupplier)) || {};
          _i = 0, _Object$entries = Object.entries(instructions);
        case 3:
          if (!(_i < _Object$entries.length)) {
            _context2.next = 20;
            break;
          }
          _Object$entries$_i = slicedToArray_slicedToArray(_Object$entries[_i], 2), name = _Object$entries$_i[0], instruction = _Object$entries$_i[1];
          _context2.t0 = instruction.type;
          _context2.next = _context2.t0 === "staticContextParams" ? 8 : _context2.t0 === "contextParams" ? 10 : _context2.t0 === "clientContextParams" ? 12 : _context2.t0 === "builtInParams" ? 12 : 16;
          break;
        case 8:
          endpointParams[name] = instruction.value;
          return _context2.abrupt("break", 17);
        case 10:
          endpointParams[name] = commandInput[instruction.name];
          return _context2.abrupt("break", 17);
        case 12:
          _context2.next = 14;
          return createConfigValueProvider(instruction.name, name, clientConfig)();
        case 14:
          endpointParams[name] = _context2.sent;
          return _context2.abrupt("break", 17);
        case 16:
          throw new Error("Unrecognized endpoint parameter instruction: " + JSON.stringify(instruction));
        case 17:
          _i++;
          _context2.next = 3;
          break;
        case 20:
          if (Object.keys(instructions).length === 0) {
            Object.assign(endpointParams, clientConfig);
          }
          if (!(String(clientConfig.serviceId).toLowerCase() === "s3")) {
            _context2.next = 24;
            break;
          }
          _context2.next = 24;
          return resolveParamsForS3(endpointParams);
        case 24:
          return _context2.abrupt("return", endpointParams);
        case 25:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function resolveParams(_x5, _x6, _x7) {
    return _ref2.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/index.js


;// ./node_modules/.pnpm/@smithy+middleware-serde@2.0.3/node_modules/@smithy/middleware-serde/dist-es/deserializerMiddleware.js


var deserializerMiddleware = function deserializerMiddleware(options, deserializer) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var _yield$next, response, parsed, hint;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return next(args);
            case 2:
              _yield$next = _context.sent;
              response = _yield$next.response;
              _context.prev = 4;
              _context.next = 7;
              return deserializer(response, options);
            case 7:
              parsed = _context.sent;
              return _context.abrupt("return", {
                response: response,
                output: parsed
              });
            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](4);
              Object.defineProperty(_context.t0, "$response", {
                value: response
              });
              if (!("$metadata" in _context.t0)) {
                hint = "Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.";
                _context.t0.message += "\n  " + hint;
              }
              throw _context.t0;
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[4, 11]]);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
;// ./node_modules/.pnpm/@smithy+middleware-serde@2.0.3/node_modules/@smithy/middleware-serde/dist-es/serializerMiddleware.js



var serializerMiddleware = function serializerMiddleware(options, serializer) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(args) {
        var _context$endpointV;
        var endpoint, request;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              endpoint = (_context$endpointV = context.endpointV2) !== null && _context$endpointV !== void 0 && _context$endpointV.url && options.urlParser ? /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
                return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) switch (_context.prev = _context.next) {
                    case 0:
                      return _context.abrupt("return", options.urlParser(context.endpointV2.url));
                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }, _callee);
              })) : options.endpoint;
              if (endpoint) {
                _context2.next = 3;
                break;
              }
              throw new Error("No valid endpoint provider available.");
            case 3:
              _context2.next = 5;
              return serializer(args.input, _objectSpread2(_objectSpread2({}, options), {}, {
                endpoint: endpoint
              }));
            case 5:
              request = _context2.sent;
              return _context2.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: request
              })));
            case 7:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
;// ./node_modules/.pnpm/@smithy+middleware-serde@2.0.3/node_modules/@smithy/middleware-serde/dist-es/serdePlugin.js


var deserializerMiddlewareOption = {
  name: "deserializerMiddleware",
  step: "deserialize",
  tags: ["DESERIALIZER"],
  override: true
};
var serializerMiddlewareOption = {
  name: "serializerMiddleware",
  step: "serialize",
  tags: ["SERIALIZER"],
  override: true
};
function getSerdePlugin(config, serializer, deserializer) {
  return {
    applyToStack: function applyToStack(commandStack) {
      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);
      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);
    }
  };
}
;// ./node_modules/.pnpm/@smithy+middleware-serde@2.0.3/node_modules/@smithy/middleware-serde/dist-es/index.js



;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/endpointMiddleware.js




var endpointMiddleware = function endpointMiddleware(_ref) {
  var config = _ref.config,
    instructions = _ref.instructions;
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var _endpoint$properties, _context$authSchemes;
        var endpoint, authScheme;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return getEndpointFromInstructions(args.input, {
                getEndpointParameterInstructions: function getEndpointParameterInstructions() {
                  return instructions;
                }
              }, _objectSpread2({}, config), context);
            case 2:
              endpoint = _context.sent;
              context.endpointV2 = endpoint;
              context.authSchemes = (_endpoint$properties = endpoint.properties) === null || _endpoint$properties === void 0 ? void 0 : _endpoint$properties.authSchemes;
              authScheme = (_context$authSchemes = context.authSchemes) === null || _context$authSchemes === void 0 ? void 0 : _context$authSchemes[0];
              if (authScheme) {
                context["signing_region"] = authScheme.signingRegion;
                context["signing_service"] = authScheme.signingName;
              }
              return _context.abrupt("return", next(_objectSpread2({}, args)));
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();
  };
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/getEndpointPlugin.js


var endpointMiddlewareOptions = {
  step: "serialize",
  tags: ["ENDPOINT_PARAMETERS", "ENDPOINT_V2", "ENDPOINT"],
  name: "endpointV2Middleware",
  override: true,
  relation: "before",
  toMiddleware: serializerMiddlewareOption.name
};
var getEndpointPlugin = function getEndpointPlugin(config, instructions) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(endpointMiddleware({
        config: config,
        instructions: instructions
      }), endpointMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@smithy+querystring-parser@2.0.3/node_modules/@smithy/querystring-parser/dist-es/index.js


function parseQueryString(querystring) {
  var query = {};
  querystring = querystring.replace(/^\?/, "");
  if (querystring) {
    var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(querystring.split("&")),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var pair = _step.value;
        var _pair$split = pair.split("="),
          _pair$split2 = slicedToArray_slicedToArray(_pair$split, 2),
          key = _pair$split2[0],
          _pair$split2$ = _pair$split2[1],
          value = _pair$split2$ === void 0 ? null : _pair$split2$;
        key = decodeURIComponent(key);
        if (value) {
          value = decodeURIComponent(value);
        }
        if (!(key in query)) {
          query[key] = value;
        } else if (Array.isArray(query[key])) {
          query[key].push(value);
        } else {
          query[key] = [query[key], value];
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  return query;
}
;// ./node_modules/.pnpm/@smithy+url-parser@2.0.3/node_modules/@smithy/url-parser/dist-es/index.js

var parseUrl = function parseUrl(url) {
  if (typeof url === "string") {
    return parseUrl(new URL(url));
  }
  var hostname = url.hostname,
    pathname = url.pathname,
    port = url.port,
    protocol = url.protocol,
    search = url.search;
  var query;
  if (search) {
    query = parseQueryString(search);
  }
  return {
    hostname: hostname,
    port: port ? parseInt(port) : undefined,
    protocol: protocol,
    path: pathname,
    query: query
  };
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/adaptors/toEndpointV1.js

var toEndpointV1 = function toEndpointV1(endpoint) {
  if (typeof endpoint === "object") {
    if ("url" in endpoint) {
      return parseUrl(endpoint.url);
    }
    return endpoint;
  }
  return parseUrl(endpoint);
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/resolveEndpointConfig.js





var resolveEndpointConfig = function resolveEndpointConfig(input) {
  var _input$tls, _input$useDualstackEn, _input$useFipsEndpoin;
  var tls = (_input$tls = input.tls) !== null && _input$tls !== void 0 ? _input$tls : true;
  var endpoint = input.endpoint;
  var customEndpointProvider = endpoint != null ? /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = toEndpointV1;
          _context.next = 3;
          return normalizeProvider_normalizeProvider(endpoint)();
        case 3:
          _context.t1 = _context.sent;
          return _context.abrupt("return", (0, _context.t0)(_context.t1));
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })) : undefined;
  var isCustomEndpoint = !!endpoint;
  return _objectSpread2(_objectSpread2({}, input), {}, {
    endpoint: customEndpointProvider,
    tls: tls,
    isCustomEndpoint: isCustomEndpoint,
    useDualstackEndpoint: normalizeProvider_normalizeProvider((_input$useDualstackEn = input.useDualstackEndpoint) !== null && _input$useDualstackEn !== void 0 ? _input$useDualstackEn : false),
    useFipsEndpoint: normalizeProvider_normalizeProvider((_input$useFipsEndpoin = input.useFipsEndpoint) !== null && _input$useFipsEndpoin !== void 0 ? _input$useFipsEndpoin : false)
  });
};
;// ./node_modules/.pnpm/@smithy+middleware-endpoint@2.0.3/node_modules/@smithy/middleware-endpoint/dist-es/index.js





;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/config.js
var config_RETRY_MODES;
(function (RETRY_MODES) {
  RETRY_MODES["STANDARD"] = "standard";
  RETRY_MODES["ADAPTIVE"] = "adaptive";
})(config_RETRY_MODES || (config_RETRY_MODES = {}));
var config_DEFAULT_MAX_ATTEMPTS = 3;
var DEFAULT_RETRY_MODE = config_RETRY_MODES.STANDARD;
;// ./node_modules/.pnpm/@smithy+service-error-classification@2.0.0/node_modules/@smithy/service-error-classification/dist-es/constants.js
var constants_CLOCK_SKEW_ERROR_CODES = (/* unused pure expression or super */ null && (["AuthFailure", "InvalidSignatureException", "RequestExpired", "RequestInTheFuture", "RequestTimeTooSkewed", "SignatureDoesNotMatch"]));
var THROTTLING_ERROR_CODES = ["BandwidthLimitExceeded", "EC2ThrottledException", "LimitExceededException", "PriorRequestNotComplete", "ProvisionedThroughputExceededException", "RequestLimitExceeded", "RequestThrottled", "RequestThrottledException", "SlowDown", "ThrottledException", "Throttling", "ThrottlingException", "TooManyRequestsException", "TransactionInProgressException"];
var TRANSIENT_ERROR_CODES = ["TimeoutError", "RequestTimeout", "RequestTimeoutException"];
var TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];
var NODEJS_TIMEOUT_ERROR_CODES = ["ECONNRESET", "ECONNREFUSED", "EPIPE", "ETIMEDOUT"];
;// ./node_modules/.pnpm/@smithy+service-error-classification@2.0.0/node_modules/@smithy/service-error-classification/dist-es/index.js

var isRetryableByTrait = function isRetryableByTrait(error) {
  return error.$retryable !== undefined;
};
var isClockSkewError = function isClockSkewError(error) {
  return CLOCK_SKEW_ERROR_CODES.includes(error.name);
};
var dist_es_isThrottlingError = function isThrottlingError(error) {
  var _error$$metadata, _error$$retryable;
  return ((_error$$metadata = error.$metadata) === null || _error$$metadata === void 0 ? void 0 : _error$$metadata.httpStatusCode) === 429 || THROTTLING_ERROR_CODES.includes(error.name) || ((_error$$retryable = error.$retryable) === null || _error$$retryable === void 0 ? void 0 : _error$$retryable.throttling) == true;
};
var isTransientError = function isTransientError(error) {
  var _error$$metadata2;
  return TRANSIENT_ERROR_CODES.includes(error.name) || NODEJS_TIMEOUT_ERROR_CODES.includes((error === null || error === void 0 ? void 0 : error.code) || "") || TRANSIENT_ERROR_STATUS_CODES.includes(((_error$$metadata2 = error.$metadata) === null || _error$$metadata2 === void 0 ? void 0 : _error$$metadata2.httpStatusCode) || 0);
};
var isServerError = function isServerError(error) {
  var _error$$metadata3;
  if (((_error$$metadata3 = error.$metadata) === null || _error$$metadata3 === void 0 ? void 0 : _error$$metadata3.httpStatusCode) !== undefined) {
    var statusCode = error.$metadata.httpStatusCode;
    if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {
      return true;
    }
    return false;
  }
  return false;
};
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/DefaultRateLimiter.js





var DefaultRateLimiter_DefaultRateLimiter = /*#__PURE__*/function () {
  function DefaultRateLimiter(options) {
    var _options$beta, _options$minCapacity, _options$minFillRate, _options$scaleConstan, _options$smooth;
    classCallCheck_classCallCheck(this, DefaultRateLimiter);
    this.currentCapacity = 0;
    this.enabled = false;
    this.lastMaxRate = 0;
    this.measuredTxRate = 0;
    this.requestCount = 0;
    this.lastTimestamp = 0;
    this.timeWindow = 0;
    this.beta = (_options$beta = options === null || options === void 0 ? void 0 : options.beta) !== null && _options$beta !== void 0 ? _options$beta : 0.7;
    this.minCapacity = (_options$minCapacity = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _options$minCapacity !== void 0 ? _options$minCapacity : 1;
    this.minFillRate = (_options$minFillRate = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _options$minFillRate !== void 0 ? _options$minFillRate : 0.5;
    this.scaleConstant = (_options$scaleConstan = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _options$scaleConstan !== void 0 ? _options$scaleConstan : 0.4;
    this.smooth = (_options$smooth = options === null || options === void 0 ? void 0 : options.smooth) !== null && _options$smooth !== void 0 ? _options$smooth : 0.8;
    var currentTimeInSeconds = this.getCurrentTimeInSeconds();
    this.lastThrottleTime = currentTimeInSeconds;
    this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());
    this.fillRate = this.minFillRate;
    this.maxCapacity = this.minCapacity;
  }
  return createClass_createClass(DefaultRateLimiter, [{
    key: "getCurrentTimeInSeconds",
    value: function getCurrentTimeInSeconds() {
      return Date.now() / 1000;
    }
  }, {
    key: "getSendToken",
    value: function () {
      var _getSendToken = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              return _context.abrupt("return", this.acquireTokenBucket(1));
            case 1:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function getSendToken() {
        return _getSendToken.apply(this, arguments);
      }
      return getSendToken;
    }()
  }, {
    key: "acquireTokenBucket",
    value: function () {
      var _acquireTokenBucket = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(amount) {
        var delay;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (this.enabled) {
                _context2.next = 2;
                break;
              }
              return _context2.abrupt("return");
            case 2:
              this.refillTokenBucket();
              if (!(amount > this.currentCapacity)) {
                _context2.next = 7;
                break;
              }
              delay = (amount - this.currentCapacity) / this.fillRate * 1000;
              _context2.next = 7;
              return new Promise(function (resolve) {
                return setTimeout(resolve, delay);
              });
            case 7:
              this.currentCapacity = this.currentCapacity - amount;
            case 8:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function acquireTokenBucket(_x) {
        return _acquireTokenBucket.apply(this, arguments);
      }
      return acquireTokenBucket;
    }()
  }, {
    key: "refillTokenBucket",
    value: function refillTokenBucket() {
      var timestamp = this.getCurrentTimeInSeconds();
      if (!this.lastTimestamp) {
        this.lastTimestamp = timestamp;
        return;
      }
      var fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;
      this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);
      this.lastTimestamp = timestamp;
    }
  }, {
    key: "updateClientSendingRate",
    value: function updateClientSendingRate(response) {
      var calculatedRate;
      this.updateMeasuredRate();
      if (dist_es_isThrottlingError(response)) {
        var rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);
        this.lastMaxRate = rateToUse;
        this.calculateTimeWindow();
        this.lastThrottleTime = this.getCurrentTimeInSeconds();
        calculatedRate = this.cubicThrottle(rateToUse);
        this.enableTokenBucket();
      } else {
        this.calculateTimeWindow();
        calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());
      }
      var newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);
      this.updateTokenBucketRate(newRate);
    }
  }, {
    key: "calculateTimeWindow",
    value: function calculateTimeWindow() {
      this.timeWindow = this.getPrecise(Math.pow(this.lastMaxRate * (1 - this.beta) / this.scaleConstant, 1 / 3));
    }
  }, {
    key: "cubicThrottle",
    value: function cubicThrottle(rateToUse) {
      return this.getPrecise(rateToUse * this.beta);
    }
  }, {
    key: "cubicSuccess",
    value: function cubicSuccess(timestamp) {
      return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);
    }
  }, {
    key: "enableTokenBucket",
    value: function enableTokenBucket() {
      this.enabled = true;
    }
  }, {
    key: "updateTokenBucketRate",
    value: function updateTokenBucketRate(newRate) {
      this.refillTokenBucket();
      this.fillRate = Math.max(newRate, this.minFillRate);
      this.maxCapacity = Math.max(newRate, this.minCapacity);
      this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);
    }
  }, {
    key: "updateMeasuredRate",
    value: function updateMeasuredRate() {
      var t = this.getCurrentTimeInSeconds();
      var timeBucket = Math.floor(t * 2) / 2;
      this.requestCount++;
      if (timeBucket > this.lastTxRateBucket) {
        var currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);
        this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));
        this.requestCount = 0;
        this.lastTxRateBucket = timeBucket;
      }
    }
  }, {
    key: "getPrecise",
    value: function getPrecise(num) {
      return parseFloat(num.toFixed(8));
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/constants.js
var constants_DEFAULT_RETRY_DELAY_BASE = 100;
var constants_MAXIMUM_RETRY_DELAY = 20 * 1000;
var constants_THROTTLING_RETRY_DELAY_BASE = 500;
var constants_INITIAL_RETRY_TOKENS = 500;
var constants_RETRY_COST = 5;
var constants_TIMEOUT_RETRY_COST = 10;
var constants_NO_RETRY_INCREMENT = 1;
var constants_INVOCATION_ID_HEADER = "amz-sdk-invocation-id";
var constants_REQUEST_HEADER = "amz-sdk-request";
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/defaultRetryBackoffStrategy.js

var getDefaultRetryBackoffStrategy = function getDefaultRetryBackoffStrategy() {
  var delayBase = constants_DEFAULT_RETRY_DELAY_BASE;
  var computeNextBackoffDelay = function computeNextBackoffDelay(attempts) {
    return Math.floor(Math.min(constants_MAXIMUM_RETRY_DELAY, Math.random() * Math.pow(2, attempts) * delayBase));
  };
  var setDelayBase = function setDelayBase(delay) {
    delayBase = delay;
  };
  return {
    computeNextBackoffDelay: computeNextBackoffDelay,
    setDelayBase: setDelayBase
  };
};
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/defaultRetryToken.js

var createDefaultRetryToken = function createDefaultRetryToken(_ref) {
  var retryDelay = _ref.retryDelay,
    retryCount = _ref.retryCount,
    retryCost = _ref.retryCost;
  var getRetryCount = function getRetryCount() {
    return retryCount;
  };
  var getRetryDelay = function getRetryDelay() {
    return Math.min(constants_MAXIMUM_RETRY_DELAY, retryDelay);
  };
  var getRetryCost = function getRetryCost() {
    return retryCost;
  };
  return {
    getRetryCount: getRetryCount,
    getRetryDelay: getRetryDelay,
    getRetryCost: getRetryCost
  };
};
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/StandardRetryStrategy.js








var StandardRetryStrategy_StandardRetryStrategy = /*#__PURE__*/function () {
  function StandardRetryStrategy(maxAttempts) {
    classCallCheck_classCallCheck(this, StandardRetryStrategy);
    this.maxAttempts = maxAttempts;
    this.mode = config_RETRY_MODES.STANDARD;
    this.capacity = constants_INITIAL_RETRY_TOKENS;
    this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();
    this.maxAttemptsProvider = typeof maxAttempts === "function" ? maxAttempts : /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", maxAttempts);
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
  }
  return createClass_createClass(StandardRetryStrategy, [{
    key: "acquireInitialRetryToken",
    value: function () {
      var _acquireInitialRetryToken = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(retryTokenScope) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", createDefaultRetryToken({
                retryDelay: constants_DEFAULT_RETRY_DELAY_BASE,
                retryCount: 0
              }));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function acquireInitialRetryToken(_x) {
        return _acquireInitialRetryToken.apply(this, arguments);
      }
      return acquireInitialRetryToken;
    }()
  }, {
    key: "refreshRetryTokenForRetry",
    value: function () {
      var _refreshRetryTokenForRetry = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(token, errorInfo) {
        var maxAttempts, errorType, delayFromErrorType, retryDelay, capacityCost;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.next = 2;
              return this.getMaxAttempts();
            case 2:
              maxAttempts = _context3.sent;
              if (!this.shouldRetry(token, errorInfo, maxAttempts)) {
                _context3.next = 11;
                break;
              }
              errorType = errorInfo.errorType;
              this.retryBackoffStrategy.setDelayBase(errorType === "THROTTLING" ? constants_THROTTLING_RETRY_DELAY_BASE : constants_DEFAULT_RETRY_DELAY_BASE);
              delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());
              retryDelay = errorInfo.retryAfterHint ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType) : delayFromErrorType;
              capacityCost = this.getCapacityCost(errorType);
              this.capacity -= capacityCost;
              return _context3.abrupt("return", createDefaultRetryToken({
                retryDelay: retryDelay,
                retryCount: token.getRetryCount() + 1,
                retryCost: capacityCost
              }));
            case 11:
              throw new Error("No retry token available");
            case 12:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function refreshRetryTokenForRetry(_x2, _x3) {
        return _refreshRetryTokenForRetry.apply(this, arguments);
      }
      return refreshRetryTokenForRetry;
    }()
  }, {
    key: "recordSuccess",
    value: function recordSuccess(token) {
      var _token$getRetryCost;
      this.capacity = Math.max(constants_INITIAL_RETRY_TOKENS, this.capacity + ((_token$getRetryCost = token.getRetryCost()) !== null && _token$getRetryCost !== void 0 ? _token$getRetryCost : constants_NO_RETRY_INCREMENT));
    }
  }, {
    key: "getCapacity",
    value: function getCapacity() {
      return this.capacity;
    }
  }, {
    key: "getMaxAttempts",
    value: function () {
      var _getMaxAttempts = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4() {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              _context4.next = 3;
              return this.maxAttemptsProvider();
            case 3:
              return _context4.abrupt("return", _context4.sent);
            case 6:
              _context4.prev = 6;
              _context4.t0 = _context4["catch"](0);
              console.warn("Max attempts provider could not resolve. Using default of ".concat(config_DEFAULT_MAX_ATTEMPTS));
              return _context4.abrupt("return", config_DEFAULT_MAX_ATTEMPTS);
            case 10:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[0, 6]]);
      }));
      function getMaxAttempts() {
        return _getMaxAttempts.apply(this, arguments);
      }
      return getMaxAttempts;
    }()
  }, {
    key: "shouldRetry",
    value: function shouldRetry(tokenToRenew, errorInfo, maxAttempts) {
      var attempts = tokenToRenew.getRetryCount() + 1;
      return attempts < maxAttempts && this.capacity >= this.getCapacityCost(errorInfo.errorType) && this.isRetryableError(errorInfo.errorType);
    }
  }, {
    key: "getCapacityCost",
    value: function getCapacityCost(errorType) {
      return errorType === "TRANSIENT" ? constants_TIMEOUT_RETRY_COST : constants_RETRY_COST;
    }
  }, {
    key: "isRetryableError",
    value: function isRetryableError(errorType) {
      return errorType === "THROTTLING" || errorType === "TRANSIENT";
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/AdaptiveRetryStrategy.js







var AdaptiveRetryStrategy = /*#__PURE__*/function () {
  function AdaptiveRetryStrategy(maxAttemptsProvider, options) {
    classCallCheck_classCallCheck(this, AdaptiveRetryStrategy);
    this.maxAttemptsProvider = maxAttemptsProvider;
    this.mode = config_RETRY_MODES.ADAPTIVE;
    var _ref = options !== null && options !== void 0 ? options : {},
      rateLimiter = _ref.rateLimiter;
    this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_DefaultRateLimiter();
    this.standardRetryStrategy = new StandardRetryStrategy_StandardRetryStrategy(maxAttemptsProvider);
  }
  return createClass_createClass(AdaptiveRetryStrategy, [{
    key: "acquireInitialRetryToken",
    value: function () {
      var _acquireInitialRetryToken = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(retryTokenScope) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return this.rateLimiter.getSendToken();
            case 2:
              return _context.abrupt("return", this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope));
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function acquireInitialRetryToken(_x) {
        return _acquireInitialRetryToken.apply(this, arguments);
      }
      return acquireInitialRetryToken;
    }()
  }, {
    key: "refreshRetryTokenForRetry",
    value: function () {
      var _refreshRetryTokenForRetry = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(tokenToRenew, errorInfo) {
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              this.rateLimiter.updateClientSendingRate(errorInfo);
              return _context2.abrupt("return", this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo));
            case 2:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function refreshRetryTokenForRetry(_x2, _x3) {
        return _refreshRetryTokenForRetry.apply(this, arguments);
      }
      return refreshRetryTokenForRetry;
    }()
  }, {
    key: "recordSuccess",
    value: function recordSuccess(token) {
      this.rateLimiter.updateClientSendingRate({});
      this.standardRetryStrategy.recordSuccess(token);
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/ConfiguredRetryStrategy.js










var ConfiguredRetryStrategy = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_StandardRetryStrateg) {
  function ConfiguredRetryStrategy(maxAttempts) {
    var _this;
    var computeNextBackoffDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_RETRY_DELAY_BASE;
    _classCallCheck(this, ConfiguredRetryStrategy);
    _this = _callSuper(this, ConfiguredRetryStrategy, [typeof maxAttempts === "function" ? maxAttempts : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", maxAttempts);
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }))]);
    if (typeof computeNextBackoffDelay === "number") {
      _this.computeNextBackoffDelay = function () {
        return computeNextBackoffDelay;
      };
    } else {
      _this.computeNextBackoffDelay = computeNextBackoffDelay;
    }
    return _this;
  }
  _inherits(ConfiguredRetryStrategy, _StandardRetryStrateg);
  return _createClass(ConfiguredRetryStrategy, [{
    key: "refreshRetryTokenForRetry",
    value: function () {
      var _refreshRetryTokenForRetry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenToRenew, errorInfo) {
        var _this2 = this;
        var token;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return _get(_getPrototypeOf(ConfiguredRetryStrategy.prototype), "refreshRetryTokenForRetry", this).call(this, tokenToRenew, errorInfo);
            case 2:
              token = _context2.sent;
              token.getRetryDelay = function () {
                return _this2.computeNextBackoffDelay(token.getRetryCount());
              };
              return _context2.abrupt("return", token);
            case 5:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function refreshRetryTokenForRetry(_x, _x2) {
        return _refreshRetryTokenForRetry.apply(this, arguments);
      }
      return refreshRetryTokenForRetry;
    }()
  }]);
}(StandardRetryStrategy)));
;// ./node_modules/.pnpm/@smithy+util-retry@2.0.0/node_modules/@smithy/util-retry/dist-es/index.js







;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/defaultRetryQuota.js

var defaultRetryQuota_getDefaultRetryQuota = function getDefaultRetryQuota(initialRetryTokens, options) {
  var _options$noRetryIncre, _options$retryCost, _options$timeoutRetry;
  var MAX_CAPACITY = initialRetryTokens;
  var noRetryIncrement = (_options$noRetryIncre = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _options$noRetryIncre !== void 0 ? _options$noRetryIncre : NO_RETRY_INCREMENT;
  var retryCost = (_options$retryCost = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _options$retryCost !== void 0 ? _options$retryCost : RETRY_COST;
  var timeoutRetryCost = (_options$timeoutRetry = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _options$timeoutRetry !== void 0 ? _options$timeoutRetry : TIMEOUT_RETRY_COST;
  var availableCapacity = initialRetryTokens;
  var getCapacityAmount = function getCapacityAmount(error) {
    return error.name === "TimeoutError" ? timeoutRetryCost : retryCost;
  };
  var hasRetryTokens = function hasRetryTokens(error) {
    return getCapacityAmount(error) <= availableCapacity;
  };
  var retrieveRetryTokens = function retrieveRetryTokens(error) {
    if (!hasRetryTokens(error)) {
      throw new Error("No retry token available");
    }
    var capacityAmount = getCapacityAmount(error);
    availableCapacity -= capacityAmount;
    return capacityAmount;
  };
  var releaseRetryTokens = function releaseRetryTokens(capacityReleaseAmount) {
    availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;
    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);
  };
  return Object.freeze({
    hasRetryTokens: hasRetryTokens,
    retrieveRetryTokens: retrieveRetryTokens,
    releaseRetryTokens: releaseRetryTokens
  });
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/delayDecider.js

var delayDecider_defaultDelayDecider = function defaultDelayDecider(delayBase, attempts) {
  return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * Math.pow(2, attempts) * delayBase));
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/StandardRetryStrategy.js












var dist_es_StandardRetryStrategy_StandardRetryStrategy = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function StandardRetryStrategy(maxAttemptsProvider, options) {
    var _options$retryDecider, _options$delayDecider, _options$retryQuota;
    _classCallCheck(this, StandardRetryStrategy);
    this.maxAttemptsProvider = maxAttemptsProvider;
    this.mode = RETRY_MODES.STANDARD;
    this.retryDecider = (_options$retryDecider = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _options$retryDecider !== void 0 ? _options$retryDecider : defaultRetryDecider;
    this.delayDecider = (_options$delayDecider = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _options$delayDecider !== void 0 ? _options$delayDecider : defaultDelayDecider;
    this.retryQuota = (_options$retryQuota = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _options$retryQuota !== void 0 ? _options$retryQuota : getDefaultRetryQuota(INITIAL_RETRY_TOKENS);
  }
  return _createClass(StandardRetryStrategy, [{
    key: "shouldRetry",
    value: function shouldRetry(error, attempts, maxAttempts) {
      return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);
    }
  }, {
    key: "getMaxAttempts",
    value: function () {
      var _getMaxAttempts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var maxAttempts;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return this.maxAttemptsProvider();
            case 3:
              maxAttempts = _context.sent;
              _context.next = 9;
              break;
            case 6:
              _context.prev = 6;
              _context.t0 = _context["catch"](0);
              maxAttempts = DEFAULT_MAX_ATTEMPTS;
            case 9:
              return _context.abrupt("return", maxAttempts);
            case 10:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 6]]);
      }));
      function getMaxAttempts() {
        return _getMaxAttempts.apply(this, arguments);
      }
      return getMaxAttempts;
    }()
  }, {
    key: "retry",
    value: function () {
      var _retry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(next, args, options) {
        var _this = this;
        var retryTokenAmount, attempts, totalDelay, maxAttempts, request, _loop, _ret;
        return _regeneratorRuntime().wrap(function _callee2$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              attempts = 0;
              totalDelay = 0;
              _context3.next = 4;
              return this.getMaxAttempts();
            case 4:
              maxAttempts = _context3.sent;
              request = args.request;
              if (HttpRequest.isInstance(request)) {
                request.headers[INVOCATION_ID_HEADER] = v4();
              }
              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {
                var _yield$next, response, output, err, delayFromDecider, delayFromResponse, delay;
                return _regeneratorRuntime().wrap(function _loop$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.prev = 0;
                      if (HttpRequest.isInstance(request)) {
                        request.headers[REQUEST_HEADER] = "attempt=".concat(attempts + 1, "; max=").concat(maxAttempts);
                      }
                      if (!(options !== null && options !== void 0 && options.beforeRequest)) {
                        _context2.next = 5;
                        break;
                      }
                      _context2.next = 5;
                      return options.beforeRequest();
                    case 5:
                      _context2.next = 7;
                      return next(args);
                    case 7:
                      _yield$next = _context2.sent;
                      response = _yield$next.response;
                      output = _yield$next.output;
                      if (options !== null && options !== void 0 && options.afterRequest) {
                        options.afterRequest(response);
                      }
                      _this.retryQuota.releaseRetryTokens(retryTokenAmount);
                      output.$metadata.attempts = attempts + 1;
                      output.$metadata.totalRetryDelay = totalDelay;
                      return _context2.abrupt("return", {
                        v: {
                          response: response,
                          output: output
                        }
                      });
                    case 17:
                      _context2.prev = 17;
                      _context2.t0 = _context2["catch"](0);
                      err = asSdkError(_context2.t0);
                      attempts++;
                      if (!_this.shouldRetry(err, attempts, maxAttempts)) {
                        _context2.next = 30;
                        break;
                      }
                      retryTokenAmount = _this.retryQuota.retrieveRetryTokens(err);
                      delayFromDecider = _this.delayDecider(isThrottlingError(err) ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE, attempts);
                      delayFromResponse = getDelayFromRetryAfterHeader(err.$response);
                      delay = Math.max(delayFromResponse || 0, delayFromDecider);
                      totalDelay += delay;
                      _context2.next = 29;
                      return new Promise(function (resolve) {
                        return setTimeout(resolve, delay);
                      });
                    case 29:
                      return _context2.abrupt("return", 0);
                    case 30:
                      if (!err.$metadata) {
                        err.$metadata = {};
                      }
                      err.$metadata.attempts = attempts;
                      err.$metadata.totalRetryDelay = totalDelay;
                      throw err;
                    case 34:
                    case "end":
                      return _context2.stop();
                  }
                }, _loop, null, [[0, 17]]);
              });
            case 8:
              if (false) {}
              return _context3.delegateYield(_loop(), "t0", 10);
            case 10:
              _ret = _context3.t0;
              if (!(_ret === 0)) {
                _context3.next = 13;
                break;
              }
              return _context3.abrupt("continue", 8);
            case 13:
              if (!_ret) {
                _context3.next = 15;
                break;
              }
              return _context3.abrupt("return", _ret.v);
            case 15:
              _context3.next = 8;
              break;
            case 17:
            case "end":
              return _context3.stop();
          }
        }, _callee2, this);
      }));
      function retry(_x, _x2, _x3) {
        return _retry.apply(this, arguments);
      }
      return retry;
    }()
  }]);
}()));
var getDelayFromRetryAfterHeader = function getDelayFromRetryAfterHeader(response) {
  if (!HttpResponse.isInstance(response)) return;
  var retryAfterHeaderName = Object.keys(response.headers).find(function (key) {
    return key.toLowerCase() === "retry-after";
  });
  if (!retryAfterHeaderName) return;
  var retryAfter = response.headers[retryAfterHeaderName];
  var retryAfterSeconds = Number(retryAfter);
  if (!Number.isNaN(retryAfterSeconds)) return retryAfterSeconds * 1000;
  var retryAfterDate = new Date(retryAfter);
  return retryAfterDate.getTime() - Date.now();
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/AdaptiveRetryStrategy.js









var AdaptiveRetryStrategy_excluded = (/* unused pure expression or super */ null && (["rateLimiter"]));


var AdaptiveRetryStrategy_AdaptiveRetryStrategy = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_StandardRetryStrateg) {
  function AdaptiveRetryStrategy(maxAttemptsProvider, options) {
    var _this;
    _classCallCheck(this, AdaptiveRetryStrategy);
    var _ref = options !== null && options !== void 0 ? options : {},
      rateLimiter = _ref.rateLimiter,
      superOptions = _objectWithoutProperties(_ref, AdaptiveRetryStrategy_excluded);
    _this = _callSuper(this, AdaptiveRetryStrategy, [maxAttemptsProvider, superOptions]);
    _this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter();
    _this.mode = RETRY_MODES.ADAPTIVE;
    return _this;
  }
  _inherits(AdaptiveRetryStrategy, _StandardRetryStrateg);
  return _createClass(AdaptiveRetryStrategy, [{
    key: "retry",
    value: function () {
      var _retry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(next, args) {
        var _this2 = this;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt("return", _get(_getPrototypeOf(AdaptiveRetryStrategy.prototype), "retry", this).call(this, next, args, {
                beforeRequest: function () {
                  var _beforeRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                      while (1) switch (_context.prev = _context.next) {
                        case 0:
                          return _context.abrupt("return", _this2.rateLimiter.getSendToken());
                        case 1:
                        case "end":
                          return _context.stop();
                      }
                    }, _callee);
                  }));
                  function beforeRequest() {
                    return _beforeRequest.apply(this, arguments);
                  }
                  return beforeRequest;
                }(),
                afterRequest: function afterRequest(response) {
                  _this2.rateLimiter.updateClientSendingRate(response);
                }
              }));
            case 1:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function retry(_x, _x2) {
        return _retry.apply(this, arguments);
      }
      return retry;
    }()
  }]);
}(StandardRetryStrategy)));
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/configurations.js





var ENV_MAX_ATTEMPTS = "AWS_MAX_ATTEMPTS";
var CONFIG_MAX_ATTEMPTS = "max_attempts";
var NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    var value = env[ENV_MAX_ATTEMPTS];
    if (!value) return undefined;
    var maxAttempt = parseInt(value);
    if (Number.isNaN(maxAttempt)) {
      throw new Error("Environment variable ".concat(ENV_MAX_ATTEMPTS, " mast be a number, got \"").concat(value, "\""));
    }
    return maxAttempt;
  },
  configFileSelector: function configFileSelector(profile) {
    var value = profile[CONFIG_MAX_ATTEMPTS];
    if (!value) return undefined;
    var maxAttempt = parseInt(value);
    if (Number.isNaN(maxAttempt)) {
      throw new Error("Shared config file entry ".concat(CONFIG_MAX_ATTEMPTS, " mast be a number, got \"").concat(value, "\""));
    }
    return maxAttempt;
  },
  "default": config_DEFAULT_MAX_ATTEMPTS
};
var resolveRetryConfig = function resolveRetryConfig(input) {
  var _input$maxAttempts;
  var _retryStrategy = input.retryStrategy;
  var maxAttempts = normalizeProvider_normalizeProvider((_input$maxAttempts = input.maxAttempts) !== null && _input$maxAttempts !== void 0 ? _input$maxAttempts : config_DEFAULT_MAX_ATTEMPTS);
  return _objectSpread2(_objectSpread2({}, input), {}, {
    maxAttempts: maxAttempts,
    retryStrategy: function () {
      var _retryStrategy2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
        var retryMode;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!_retryStrategy) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", _retryStrategy);
            case 2:
              _context.next = 4;
              return normalizeProvider_normalizeProvider(input.retryMode)();
            case 4:
              retryMode = _context.sent;
              if (!(retryMode === config_RETRY_MODES.ADAPTIVE)) {
                _context.next = 7;
                break;
              }
              return _context.abrupt("return", new AdaptiveRetryStrategy(maxAttempts));
            case 7:
              return _context.abrupt("return", new StandardRetryStrategy_StandardRetryStrategy(maxAttempts));
            case 8:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      function retryStrategy() {
        return _retryStrategy2.apply(this, arguments);
      }
      return retryStrategy;
    }()
  });
};
var ENV_RETRY_MODE = "AWS_RETRY_MODE";
var CONFIG_RETRY_MODE = "retry_mode";
var NODE_RETRY_MODE_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return env[ENV_RETRY_MODE];
  },
  configFileSelector: function configFileSelector(profile) {
    return profile[CONFIG_RETRY_MODE];
  },
  "default": DEFAULT_RETRY_MODE
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/omitRetryHeadersMiddleware.js




var omitRetryHeadersMiddleware = function omitRetryHeadersMiddleware() {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {
        var request;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              request = args.request;
              if (HttpRequest.isInstance(request)) {
                delete request.headers[INVOCATION_ID_HEADER];
                delete request.headers[REQUEST_HEADER];
              }
              return _context.abrupt("return", next(args));
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var omitRetryHeadersMiddlewareOptions = {
  name: "omitRetryHeadersMiddleware",
  tags: ["RETRY", "HEADERS", "OMIT_RETRY_HEADERS"],
  relation: "before",
  toMiddleware: "awsAuthMiddleware",
  override: true
};
var getOmitRetryHeadersPlugin = function getOmitRetryHeadersPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);
    }
  };
};
// EXTERNAL MODULE: ./node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-node/v4.js
var esm_node_v4 = __webpack_require__(2415);
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/util.js
var util_asSdkError = function asSdkError(error) {
  if (error instanceof Error) return error;
  if (error instanceof Object) return Object.assign(new Error(), error);
  if (typeof error === "string") return new Error(error);
  return new Error("AWS SDK error wrapper for ".concat(error));
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/retryMiddleware.js








var retryMiddleware = function retryMiddleware(options) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var retryStrategy, maxAttempts, retryToken, lastError, attempts, totalRetryDelay, request, _loop, _ret, _retryStrategy;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return options.retryStrategy();
            case 2:
              retryStrategy = _context2.sent;
              _context2.next = 5;
              return options.maxAttempts();
            case 5:
              maxAttempts = _context2.sent;
              if (!isRetryStrategyV2(retryStrategy)) {
                _context2.next = 26;
                break;
              }
              retryStrategy = retryStrategy;
              _context2.next = 10;
              return retryStrategy.acquireInitialRetryToken(context["partition_id"]);
            case 10:
              retryToken = _context2.sent;
              lastError = new Error();
              attempts = 0;
              totalRetryDelay = 0;
              request = args.request;
              if (httpRequest_HttpRequest.isInstance(request)) {
                request.headers[constants_INVOCATION_ID_HEADER] = (0,esm_node_v4/* default */.A)();
              }
              _loop = /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _loop() {
                var _yield$next, response, output, retryErrorInfo, delay;
                return regeneratorRuntime_regeneratorRuntime().wrap(function _loop$(_context) {
                  while (1) switch (_context.prev = _context.next) {
                    case 0:
                      _context.prev = 0;
                      if (httpRequest_HttpRequest.isInstance(request)) {
                        request.headers[constants_REQUEST_HEADER] = "attempt=".concat(attempts + 1, "; max=").concat(maxAttempts);
                      }
                      _context.next = 4;
                      return next(args);
                    case 4:
                      _yield$next = _context.sent;
                      response = _yield$next.response;
                      output = _yield$next.output;
                      retryStrategy.recordSuccess(retryToken);
                      output.$metadata.attempts = attempts + 1;
                      output.$metadata.totalRetryDelay = totalRetryDelay;
                      return _context.abrupt("return", {
                        v: {
                          response: response,
                          output: output
                        }
                      });
                    case 13:
                      _context.prev = 13;
                      _context.t0 = _context["catch"](0);
                      retryErrorInfo = getRetryErrorInfo(_context.t0);
                      lastError = util_asSdkError(_context.t0);
                      _context.prev = 17;
                      _context.next = 20;
                      return retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);
                    case 20:
                      retryToken = _context.sent;
                      _context.next = 29;
                      break;
                    case 23:
                      _context.prev = 23;
                      _context.t1 = _context["catch"](17);
                      if (!lastError.$metadata) {
                        lastError.$metadata = {};
                      }
                      lastError.$metadata.attempts = attempts + 1;
                      lastError.$metadata.totalRetryDelay = totalRetryDelay;
                      throw lastError;
                    case 29:
                      attempts = retryToken.getRetryCount();
                      delay = retryToken.getRetryDelay();
                      totalRetryDelay += delay;
                      _context.next = 34;
                      return new Promise(function (resolve) {
                        return setTimeout(resolve, delay);
                      });
                    case 34:
                    case "end":
                      return _context.stop();
                  }
                }, _loop, null, [[0, 13], [17, 23]]);
              });
            case 17:
              if (false) {}
              return _context2.delegateYield(_loop(), "t0", 19);
            case 19:
              _ret = _context2.t0;
              if (!_ret) {
                _context2.next = 22;
                break;
              }
              return _context2.abrupt("return", _ret.v);
            case 22:
              _context2.next = 17;
              break;
            case 24:
              _context2.next = 29;
              break;
            case 26:
              retryStrategy = retryStrategy;
              if ((_retryStrategy = retryStrategy) !== null && _retryStrategy !== void 0 && _retryStrategy.mode) context.userAgent = [].concat(_toConsumableArray(context.userAgent || []), [["cfg/retry-mode", retryStrategy.mode]]);
              return _context2.abrupt("return", retryStrategy.retry(next, args));
            case 29:
            case "end":
              return _context2.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var isRetryStrategyV2 = function isRetryStrategyV2(retryStrategy) {
  return typeof retryStrategy.acquireInitialRetryToken !== "undefined" && typeof retryStrategy.refreshRetryTokenForRetry !== "undefined" && typeof retryStrategy.recordSuccess !== "undefined";
};
var getRetryErrorInfo = function getRetryErrorInfo(error) {
  var errorInfo = {
    errorType: getRetryErrorType(error)
  };
  var retryAfterHint = getRetryAfterHint(error.$response);
  if (retryAfterHint) {
    errorInfo.retryAfterHint = retryAfterHint;
  }
  return errorInfo;
};
var getRetryErrorType = function getRetryErrorType(error) {
  if (dist_es_isThrottlingError(error)) return "THROTTLING";
  if (isTransientError(error)) return "TRANSIENT";
  if (isServerError(error)) return "SERVER_ERROR";
  return "CLIENT_ERROR";
};
var retryMiddlewareOptions = {
  name: "retryMiddleware",
  tags: ["RETRY"],
  step: "finalizeRequest",
  priority: "high",
  override: true
};
var getRetryPlugin = function getRetryPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);
    }
  };
};
var getRetryAfterHint = function getRetryAfterHint(response) {
  if (!httpResponse_HttpResponse.isInstance(response)) return;
  var retryAfterHeaderName = Object.keys(response.headers).find(function (key) {
    return key.toLowerCase() === "retry-after";
  });
  if (!retryAfterHeaderName) return;
  var retryAfter = response.headers[retryAfterHeaderName];
  var retryAfterSeconds = Number(retryAfter);
  if (!Number.isNaN(retryAfterSeconds)) return new Date(retryAfterSeconds * 1000);
  var retryAfterDate = new Date(retryAfter);
  return retryAfterDate;
};
;// ./node_modules/.pnpm/@smithy+middleware-retry@2.0.3/node_modules/@smithy/middleware-retry/dist-es/index.js







;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js


var NoOpLogger = /*#__PURE__*/function () {
  function NoOpLogger() {
    classCallCheck_classCallCheck(this, NoOpLogger);
  }
  return createClass_createClass(NoOpLogger, [{
    key: "trace",
    value: function trace() {}
  }, {
    key: "debug",
    value: function debug() {}
  }, {
    key: "info",
    value: function info() {}
  }, {
    key: "warn",
    value: function warn() {}
  }, {
    key: "error",
    value: function error() {}
  }]);
}();
;// ./node_modules/.pnpm/@smithy+middleware-stack@2.0.0/node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js



var constructStack = function constructStack() {
  var absoluteEntries = [];
  var relativeEntries = [];
  var entriesNameSet = new Set();
  var sort = function sort(entries) {
    return entries.sort(function (a, b) {
      return stepWeights[b.step] - stepWeights[a.step] || priorityWeights[b.priority || "normal"] - priorityWeights[a.priority || "normal"];
    });
  };
  var removeByName = function removeByName(toRemove) {
    var isRemoved = false;
    var filterCb = function filterCb(entry) {
      if (entry.name && entry.name === toRemove) {
        isRemoved = true;
        entriesNameSet["delete"](toRemove);
        return false;
      }
      return true;
    };
    absoluteEntries = absoluteEntries.filter(filterCb);
    relativeEntries = relativeEntries.filter(filterCb);
    return isRemoved;
  };
  var removeByReference = function removeByReference(toRemove) {
    var isRemoved = false;
    var filterCb = function filterCb(entry) {
      if (entry.middleware === toRemove) {
        isRemoved = true;
        if (entry.name) entriesNameSet["delete"](entry.name);
        return false;
      }
      return true;
    };
    absoluteEntries = absoluteEntries.filter(filterCb);
    relativeEntries = relativeEntries.filter(filterCb);
    return isRemoved;
  };
  var cloneTo = function cloneTo(toStack) {
    absoluteEntries.forEach(function (entry) {
      toStack.add(entry.middleware, _objectSpread2({}, entry));
    });
    relativeEntries.forEach(function (entry) {
      toStack.addRelativeTo(entry.middleware, _objectSpread2({}, entry));
    });
    return toStack;
  };
  var expandRelativeMiddlewareList = function expandRelativeMiddlewareList(from) {
    var expandedMiddlewareList = [];
    from.before.forEach(function (entry) {
      if (entry.before.length === 0 && entry.after.length === 0) {
        expandedMiddlewareList.push(entry);
      } else {
        expandedMiddlewareList.push.apply(expandedMiddlewareList, _toConsumableArray(expandRelativeMiddlewareList(entry)));
      }
    });
    expandedMiddlewareList.push(from);
    from.after.reverse().forEach(function (entry) {
      if (entry.before.length === 0 && entry.after.length === 0) {
        expandedMiddlewareList.push(entry);
      } else {
        expandedMiddlewareList.push.apply(expandedMiddlewareList, _toConsumableArray(expandRelativeMiddlewareList(entry)));
      }
    });
    return expandedMiddlewareList;
  };
  var getMiddlewareList = function getMiddlewareList() {
    var debug = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var normalizedAbsoluteEntries = [];
    var normalizedRelativeEntries = [];
    var normalizedEntriesNameMap = {};
    absoluteEntries.forEach(function (entry) {
      var normalizedEntry = _objectSpread2(_objectSpread2({}, entry), {}, {
        before: [],
        after: []
      });
      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;
      normalizedAbsoluteEntries.push(normalizedEntry);
    });
    relativeEntries.forEach(function (entry) {
      var normalizedEntry = _objectSpread2(_objectSpread2({}, entry), {}, {
        before: [],
        after: []
      });
      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;
      normalizedRelativeEntries.push(normalizedEntry);
    });
    normalizedRelativeEntries.forEach(function (entry) {
      if (entry.toMiddleware) {
        var toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];
        if (toMiddleware === undefined) {
          if (debug) {
            return;
          }
          throw new Error("".concat(entry.toMiddleware, " is not found when adding ").concat(entry.name || "anonymous", " middleware ").concat(entry.relation, " ").concat(entry.toMiddleware));
        }
        if (entry.relation === "after") {
          toMiddleware.after.push(entry);
        }
        if (entry.relation === "before") {
          toMiddleware.before.push(entry);
        }
      }
    });
    var mainChain = sort(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce(function (wholeList, expandedMiddlewareList) {
      wholeList.push.apply(wholeList, _toConsumableArray(expandedMiddlewareList));
      return wholeList;
    }, []);
    return mainChain;
  };
  var stack = {
    add: function add(middleware) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var name = options.name,
        override = options.override;
      var entry = _objectSpread2({
        step: "initialize",
        priority: "normal",
        middleware: middleware
      }, options);
      if (name) {
        if (entriesNameSet.has(name)) {
          if (!override) throw new Error("Duplicate middleware name '".concat(name, "'"));
          var toOverrideIndex = absoluteEntries.findIndex(function (entry) {
            return entry.name === name;
          });
          var toOverride = absoluteEntries[toOverrideIndex];
          if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {
            throw new Error("\"".concat(name, "\" middleware with ").concat(toOverride.priority, " priority in ").concat(toOverride.step, " step cannot be ") + "overridden by same-name middleware with ".concat(entry.priority, " priority in ").concat(entry.step, " step."));
          }
          absoluteEntries.splice(toOverrideIndex, 1);
        }
        entriesNameSet.add(name);
      }
      absoluteEntries.push(entry);
    },
    addRelativeTo: function addRelativeTo(middleware, options) {
      var name = options.name,
        override = options.override;
      var entry = _objectSpread2({
        middleware: middleware
      }, options);
      if (name) {
        if (entriesNameSet.has(name)) {
          if (!override) throw new Error("Duplicate middleware name '".concat(name, "'"));
          var toOverrideIndex = relativeEntries.findIndex(function (entry) {
            return entry.name === name;
          });
          var toOverride = relativeEntries[toOverrideIndex];
          if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {
            throw new Error("\"".concat(name, "\" middleware ").concat(toOverride.relation, " \"").concat(toOverride.toMiddleware, "\" middleware cannot be overridden ") + "by same-name middleware ".concat(entry.relation, " \"").concat(entry.toMiddleware, "\" middleware."));
          }
          relativeEntries.splice(toOverrideIndex, 1);
        }
        entriesNameSet.add(name);
      }
      relativeEntries.push(entry);
    },
    clone: function clone() {
      return cloneTo(constructStack());
    },
    use: function use(plugin) {
      plugin.applyToStack(stack);
    },
    remove: function remove(toRemove) {
      if (typeof toRemove === "string") return removeByName(toRemove);else return removeByReference(toRemove);
    },
    removeByTag: function removeByTag(toRemove) {
      var isRemoved = false;
      var filterCb = function filterCb(entry) {
        var tags = entry.tags,
          name = entry.name;
        if (tags && tags.includes(toRemove)) {
          if (name) entriesNameSet["delete"](name);
          isRemoved = true;
          return false;
        }
        return true;
      };
      absoluteEntries = absoluteEntries.filter(filterCb);
      relativeEntries = relativeEntries.filter(filterCb);
      return isRemoved;
    },
    concat: function concat(from) {
      var cloned = cloneTo(constructStack());
      cloned.use(from);
      return cloned;
    },
    applyToStack: cloneTo,
    identify: function identify() {
      return getMiddlewareList(true).map(function (mw) {
        return mw.name + ": " + (mw.tags || []).join(",");
      });
    },
    resolve: function resolve(handler, context) {
      var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(getMiddlewareList().map(function (entry) {
          return entry.middleware;
        }).reverse()),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var middleware = _step.value;
          handler = middleware(handler, context);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return handler;
    }
  };
  return stack;
};
var stepWeights = {
  initialize: 5,
  serialize: 4,
  build: 3,
  finalizeRequest: 2,
  deserialize: 1
};
var priorityWeights = {
  high: 3,
  normal: 2,
  low: 1
};
;// ./node_modules/.pnpm/@smithy+middleware-stack@2.0.0/node_modules/@smithy/middleware-stack/dist-es/index.js

;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/client.js



var Client = /*#__PURE__*/function () {
  function Client(config) {
    classCallCheck_classCallCheck(this, Client);
    this.middlewareStack = constructStack();
    this.config = config;
  }
  return createClass_createClass(Client, [{
    key: "send",
    value: function send(command, optionsOrCb, cb) {
      var options = typeof optionsOrCb !== "function" ? optionsOrCb : undefined;
      var callback = typeof optionsOrCb === "function" ? optionsOrCb : cb;
      var handler = command.resolveMiddleware(this.middlewareStack, this.config, options);
      if (callback) {
        handler(command).then(function (result) {
          return callback(null, result.output);
        }, function (err) {
          return callback(err);
        })["catch"](function () {});
      } else {
        return handler(command).then(function (result) {
          return result.output;
        });
      }
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/fromBase64.js

var BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;
var fromBase64 = function fromBase64(input) {
  if (input.length * 3 % 4 !== 0) {
    throw new TypeError("Incorrect padding on base64 string.");
  }
  if (!BASE64_REGEX.exec(input)) {
    throw new TypeError("Invalid base64 string.");
  }
  var buffer = fromString(input, "base64");
  return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);
};
;// ./node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/toBase64.js

var toBase64 = function toBase64(input) {
  return fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString("base64");
};
;// ./node_modules/.pnpm/@smithy+util-base64@2.0.0/node_modules/@smithy/util-base64/dist-es/index.js


;// ./node_modules/.pnpm/@smithy+util-stream@2.0.3/node_modules/@smithy/util-stream/dist-es/blob/transforms.js



function transforms_transformToString(payload) {
  var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf-8";
  if (encoding === "base64") {
    return toBase64(payload);
  }
  return toUtf8(payload);
}
function transformFromString(str, encoding) {
  if (encoding === "base64") {
    return Uint8ArrayBlobAdapter.mutate(fromBase64(str));
  }
  return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));
}
;// ./node_modules/.pnpm/@smithy+util-stream@2.0.3/node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js






var Uint8ArrayBlobAdapter = /*#__PURE__*/function (_Uint8Array) {
  function Uint8ArrayBlobAdapter() {
    classCallCheck_classCallCheck(this, Uint8ArrayBlobAdapter);
    return callSuper_callSuper(this, Uint8ArrayBlobAdapter, arguments);
  }
  inherits_inherits(Uint8ArrayBlobAdapter, _Uint8Array);
  return createClass_createClass(Uint8ArrayBlobAdapter, [{
    key: "transformToString",
    value: function transformToString() {
      var encoding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "utf-8";
      return transforms_transformToString(this, encoding);
    }
  }], [{
    key: "fromString",
    value: function fromString(source) {
      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "utf-8";
      switch (typeof source) {
        case "string":
          return transformFromString(source, encoding);
        default:
          throw new Error("Unsupported conversion from ".concat(typeof source, " to Uint8ArrayBlobAdapter."));
      }
    }
  }, {
    key: "mutate",
    value: function mutate(source) {
      Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);
      return source;
    }
  }]);
}( /*#__PURE__*/_wrapNativeSuper(Uint8Array));
;// external "stream"
const external_stream_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("stream");
;// ./node_modules/.pnpm/@smithy+util-stream@2.0.3/node_modules/@smithy/util-stream/dist-es/getAwsChunkedEncodingStream.js



var getAwsChunkedEncodingStream = function getAwsChunkedEncodingStream(readableStream, options) {
  var base64Encoder = options.base64Encoder,
    bodyLengthChecker = options.bodyLengthChecker,
    checksumAlgorithmFn = options.checksumAlgorithmFn,
    checksumLocationName = options.checksumLocationName,
    streamHasher = options.streamHasher;
  var checksumRequired = base64Encoder !== undefined && checksumAlgorithmFn !== undefined && checksumLocationName !== undefined && streamHasher !== undefined;
  var digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;
  var awsChunkedEncodingStream = new external_stream_namespaceObject.Readable({
    read: function read() {}
  });
  readableStream.on("data", function (data) {
    var length = bodyLengthChecker(data) || 0;
    awsChunkedEncodingStream.push("".concat(length.toString(16), "\r\n"));
    awsChunkedEncodingStream.push(data);
    awsChunkedEncodingStream.push("\r\n");
  });
  readableStream.on("end", /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var checksum;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          awsChunkedEncodingStream.push("0\r\n");
          if (!checksumRequired) {
            _context.next = 9;
            break;
          }
          _context.t0 = base64Encoder;
          _context.next = 5;
          return digest;
        case 5:
          _context.t1 = _context.sent;
          checksum = (0, _context.t0)(_context.t1);
          awsChunkedEncodingStream.push("".concat(checksumLocationName, ":").concat(checksum, "\r\n"));
          awsChunkedEncodingStream.push("\r\n");
        case 9:
          awsChunkedEncodingStream.push(null);
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })));
  return awsChunkedEncodingStream;
};
;// ./node_modules/.pnpm/@smithy+querystring-builder@2.0.3/node_modules/@smithy/querystring-builder/dist-es/index.js


function dist_es_buildQueryString(query) {
  var parts = [];
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(Object.keys(query).sort()),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var key = _step.value;
      var value = query[key];
      key = escapeUri(key);
      if (Array.isArray(value)) {
        for (var i = 0, iLen = value.length; i < iLen; i++) {
          parts.push("".concat(key, "=").concat(escapeUri(value[i])));
        }
      } else {
        var qsEntry = key;
        if (value || typeof value === "string") {
          qsEntry += "=".concat(escapeUri(value));
        }
        parts.push(qsEntry);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return parts.join("&");
}
// EXTERNAL MODULE: external "http"
var external_http_ = __webpack_require__(8611);
// EXTERNAL MODULE: external "https"
var external_https_ = __webpack_require__(5692);
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/constants.js
var constants_NODEJS_TIMEOUT_ERROR_CODES = ["ECONNRESET", "EPIPE", "ETIMEDOUT"];
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/get-transformed-headers.js
var get_transformed_headers_getTransformedHeaders = function getTransformedHeaders(headers) {
  var transformedHeaders = {};
  for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {
    var name = _Object$keys[_i];
    var headerValues = headers[name];
    transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(",") : headerValues;
  }
  return transformedHeaders;
};

;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/set-connection-timeout.js
var setConnectionTimeout = function setConnectionTimeout(request, reject) {
  var timeoutInMs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  if (!timeoutInMs) {
    return;
  }
  var timeoutId = setTimeout(function () {
    request.destroy();
    reject(Object.assign(new Error("Socket timed out without establishing a connection within ".concat(timeoutInMs, " ms")), {
      name: "TimeoutError"
    }));
  }, timeoutInMs);
  request.on("socket", function (socket) {
    if (socket.connecting) {
      socket.on("connect", function () {
        clearTimeout(timeoutId);
      });
    } else {
      clearTimeout(timeoutId);
    }
  });
};
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/set-socket-keep-alive.js
var setSocketKeepAlive = function setSocketKeepAlive(request, _ref) {
  var keepAlive = _ref.keepAlive,
    keepAliveMsecs = _ref.keepAliveMsecs;
  if (keepAlive !== true) {
    return;
  }
  request.on("socket", function (socket) {
    socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);
  });
};
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/set-socket-timeout.js
var setSocketTimeout = function setSocketTimeout(request, reject) {
  var timeoutInMs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  request.setTimeout(timeoutInMs, function () {
    request.destroy();
    reject(Object.assign(new Error("Connection timed out after ".concat(timeoutInMs, " ms")), {
      name: "TimeoutError"
    }));
  });
};
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/write-request-body.js



var MIN_WAIT_TIME = 1000;
function write_request_body_writeRequestBody(_x, _x2) {
  return _writeRequestBody.apply(this, arguments);
}
function _writeRequestBody() {
  _writeRequestBody = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(httpRequest, request) {
    var _request$headers;
    var maxContinueTimeoutMs,
      headers,
      expect,
      timeoutId,
      hasError,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          maxContinueTimeoutMs = _args.length > 2 && _args[2] !== undefined ? _args[2] : MIN_WAIT_TIME;
          headers = (_request$headers = request.headers) !== null && _request$headers !== void 0 ? _request$headers : {};
          expect = headers["Expect"] || headers["expect"];
          timeoutId = -1;
          hasError = false;
          if (!(expect === "100-continue")) {
            _context.next = 8;
            break;
          }
          _context.next = 8;
          return Promise.race([new Promise(function (resolve) {
            timeoutId = Number(setTimeout(resolve, Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));
          }), new Promise(function (resolve) {
            httpRequest.on("continue", function () {
              clearTimeout(timeoutId);
              resolve();
            });
            httpRequest.on("error", function () {
              hasError = true;
              clearTimeout(timeoutId);
              resolve();
            });
          })]);
        case 8:
          if (!hasError) {
            writeBody(httpRequest, request.body);
          }
        case 9:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _writeRequestBody.apply(this, arguments);
}
function writeBody(httpRequest, body) {
  if (body instanceof external_stream_namespaceObject.Readable) {
    body.pipe(httpRequest);
  } else if (body) {
    httpRequest.end(Buffer.from(body));
  } else {
    httpRequest.end();
  }
}
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/node-http-handler.js














var DEFAULT_REQUEST_TIMEOUT = 0;
var NodeHttpHandler = /*#__PURE__*/function () {
  function NodeHttpHandler(options) {
    var _this = this;
    classCallCheck_classCallCheck(this, NodeHttpHandler);
    this.metadata = {
      handlerProtocol: "http/1.1"
    };
    this.configProvider = new Promise(function (resolve, reject) {
      if (typeof options === "function") {
        options().then(function (_options) {
          resolve(_this.resolveDefaultConfig(_options));
        })["catch"](reject);
      } else {
        resolve(_this.resolveDefaultConfig(options));
      }
    });
  }
  return createClass_createClass(NodeHttpHandler, [{
    key: "resolveDefaultConfig",
    value: function resolveDefaultConfig(options) {
      var _ref = options || {},
        requestTimeout = _ref.requestTimeout,
        connectionTimeout = _ref.connectionTimeout,
        socketTimeout = _ref.socketTimeout,
        httpAgent = _ref.httpAgent,
        httpsAgent = _ref.httpsAgent;
      var keepAlive = true;
      var maxSockets = 50;
      return {
        connectionTimeout: connectionTimeout,
        requestTimeout: requestTimeout !== null && requestTimeout !== void 0 ? requestTimeout : socketTimeout,
        httpAgent: httpAgent || new external_http_.Agent({
          keepAlive: keepAlive,
          maxSockets: maxSockets
        }),
        httpsAgent: httpsAgent || new external_https_.Agent({
          keepAlive: keepAlive,
          maxSockets: maxSockets
        })
      };
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _this$config, _this$config2;
      (_this$config = this.config) === null || _this$config === void 0 || (_this$config = _this$config.httpAgent) === null || _this$config === void 0 || _this$config.destroy();
      (_this$config2 = this.config) === null || _this$config2 === void 0 || (_this$config2 = _this$config2.httpsAgent) === null || _this$config2 === void 0 || _this$config2.destroy();
    }
  }, {
    key: "handle",
    value: function () {
      var _handle = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(request) {
        var _this2 = this;
        var _ref2,
          abortSignal,
          _args3 = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _ref2 = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, abortSignal = _ref2.abortSignal;
              if (this.config) {
                _context3.next = 5;
                break;
              }
              _context3.next = 4;
              return this.configProvider;
            case 4:
              this.config = _context3.sent;
            case 5:
              return _context3.abrupt("return", new Promise(function (_resolve, _reject) {
                var writeRequestBodyPromise = undefined;
                var resolve = /*#__PURE__*/function () {
                  var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(arg) {
                    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
                      while (1) switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return writeRequestBodyPromise;
                        case 2:
                          _resolve(arg);
                        case 3:
                        case "end":
                          return _context.stop();
                      }
                    }, _callee);
                  }));
                  return function resolve(_x2) {
                    return _ref3.apply(this, arguments);
                  };
                }();
                var reject = /*#__PURE__*/function () {
                  var _ref4 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(arg) {
                    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
                      while (1) switch (_context2.prev = _context2.next) {
                        case 0:
                          _context2.next = 2;
                          return writeRequestBodyPromise;
                        case 2:
                          _reject(arg);
                        case 3:
                        case "end":
                          return _context2.stop();
                      }
                    }, _callee2);
                  }));
                  return function reject(_x3) {
                    return _ref4.apply(this, arguments);
                  };
                }();
                if (!_this2.config) {
                  throw new Error("Node HTTP request handler config is not resolved");
                }
                if (abortSignal !== null && abortSignal !== void 0 && abortSignal.aborted) {
                  var abortError = new Error("Request aborted");
                  abortError.name = "AbortError";
                  reject(abortError);
                  return;
                }
                var isSSL = request.protocol === "https:";
                var queryString = dist_es_buildQueryString(request.query || {});
                var auth = undefined;
                if (request.username != null || request.password != null) {
                  var _request$username, _request$password;
                  var username = (_request$username = request.username) !== null && _request$username !== void 0 ? _request$username : "";
                  var password = (_request$password = request.password) !== null && _request$password !== void 0 ? _request$password : "";
                  auth = "".concat(username, ":").concat(password);
                }
                var path = request.path;
                if (queryString) {
                  path += "?".concat(queryString);
                }
                if (request.fragment) {
                  path += "#".concat(request.fragment);
                }
                var nodeHttpsOptions = {
                  headers: request.headers,
                  host: request.hostname,
                  method: request.method,
                  path: path,
                  port: request.port,
                  agent: isSSL ? _this2.config.httpsAgent : _this2.config.httpAgent,
                  auth: auth
                };
                var requestFunc = isSSL ? external_https_.request : external_http_.request;
                var req = requestFunc(nodeHttpsOptions, function (res) {
                  var httpResponse = new httpResponse_HttpResponse({
                    statusCode: res.statusCode || -1,
                    reason: res.statusMessage,
                    headers: get_transformed_headers_getTransformedHeaders(res.headers),
                    body: res
                  });
                  resolve({
                    response: httpResponse
                  });
                });
                req.on("error", function (err) {
                  if (constants_NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {
                    reject(Object.assign(err, {
                      name: "TimeoutError"
                    }));
                  } else {
                    reject(err);
                  }
                });
                setConnectionTimeout(req, reject, _this2.config.connectionTimeout);
                setSocketTimeout(req, reject, _this2.config.requestTimeout);
                if (abortSignal) {
                  abortSignal.onabort = function () {
                    req.abort();
                    var abortError = new Error("Request aborted");
                    abortError.name = "AbortError";
                    reject(abortError);
                  };
                }
                var httpAgent = nodeHttpsOptions.agent;
                if (typeof httpAgent === "object" && "keepAlive" in httpAgent) {
                  setSocketKeepAlive(req, {
                    keepAlive: httpAgent.keepAlive,
                    keepAliveMsecs: httpAgent.keepAliveMsecs
                  });
                }
                writeRequestBodyPromise = write_request_body_writeRequestBody(req, request, _this2.config.requestTimeout)["catch"](_reject);
              }));
            case 6:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function handle(_x) {
        return _handle.apply(this, arguments);
      }
      return handle;
    }()
  }]);
}();
;// external "http2"
const external_http2_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("http2");
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/node-http2-connection-manager.js






var node_http2_connection_manager_NodeHttp2ConnectionManager = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function NodeHttp2ConnectionManager(config) {
    _classCallCheck(this, NodeHttp2ConnectionManager);
    this.sessionCache = new Map();
    this.config = config;
    if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {
      throw new RangeError("maxConcurrency must be greater than zero.");
    }
  }
  return _createClass(NodeHttp2ConnectionManager, [{
    key: "lease",
    value: function lease(requestContext, connectionConfiguration) {
      var _this = this;
      var url = this.getUrlString(requestContext);
      var existingPool = this.sessionCache.get(url);
      if (existingPool) {
        var existingSession = existingPool.poll();
        if (existingSession && !this.config.disableConcurrency) {
          return existingSession;
        }
      }
      var session = http2.connect(url);
      if (this.config.maxConcurrency) {
        session.settings({
          maxConcurrentStreams: this.config.maxConcurrency
        }, function (err) {
          if (err) {
            throw new Error("Fail to set maxConcurrentStreams to " + _this.config.maxConcurrency + "when creating new session for " + requestContext.destination.toString());
          }
        });
      }
      session.unref();
      var destroySessionCb = function destroySessionCb() {
        session.destroy();
        _this.deleteSession(url, session);
      };
      session.on("goaway", destroySessionCb);
      session.on("error", destroySessionCb);
      session.on("frameError", destroySessionCb);
      session.on("close", function () {
        return _this.deleteSession(url, session);
      });
      if (connectionConfiguration.requestTimeout) {
        session.setTimeout(connectionConfiguration.requestTimeout, destroySessionCb);
      }
      var connectionPool = this.sessionCache.get(url) || new NodeHttp2ConnectionPool();
      connectionPool.offerLast(session);
      this.sessionCache.set(url, connectionPool);
      return session;
    }
  }, {
    key: "deleteSession",
    value: function deleteSession(authority, session) {
      var existingConnectionPool = this.sessionCache.get(authority);
      if (!existingConnectionPool) {
        return;
      }
      if (!existingConnectionPool.contains(session)) {
        return;
      }
      existingConnectionPool.remove(session);
      this.sessionCache.set(authority, existingConnectionPool);
    }
  }, {
    key: "release",
    value: function release(requestContext, session) {
      var _this$sessionCache$ge;
      var cacheKey = this.getUrlString(requestContext);
      (_this$sessionCache$ge = this.sessionCache.get(cacheKey)) === null || _this$sessionCache$ge === void 0 || _this$sessionCache$ge.offerLast(session);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _iterator = _createForOfIteratorHelper(this.sessionCache),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
            key = _step$value[0],
            connectionPool = _step$value[1];
          var _iterator2 = _createForOfIteratorHelper(connectionPool),
            _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var session = _step2.value;
              if (!session.destroyed) {
                session.destroy();
              }
              connectionPool.remove(session);
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          this.sessionCache["delete"](key);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "setMaxConcurrentStreams",
    value: function setMaxConcurrentStreams(maxConcurrentStreams) {
      if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {
        throw new RangeError("maxConcurrentStreams must be greater than zero.");
      }
      this.config.maxConcurrency = maxConcurrentStreams;
    }
  }, {
    key: "setDisableConcurrentStreams",
    value: function setDisableConcurrentStreams(disableConcurrentStreams) {
      this.config.disableConcurrency = disableConcurrentStreams;
    }
  }, {
    key: "getUrlString",
    value: function getUrlString(request) {
      return request.destination.toString();
    }
  }]);
}()));
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/node-http2-handler.js












var NodeHttp2Handler = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  function NodeHttp2Handler(options) {
    _classCallCheck(this, NodeHttp2Handler);
    this.metadata = {
      handlerProtocol: "h2"
    };
    this.connectionManager = new NodeHttp2ConnectionManager({});
    this.configProvider = new Promise(function (resolve, reject) {
      if (typeof options === "function") {
        options().then(function (opts) {
          resolve(opts || {});
        })["catch"](reject);
      } else {
        resolve(options || {});
      }
    });
  }
  return _createClass(NodeHttp2Handler, [{
    key: "destroy",
    value: function destroy() {
      this.connectionManager.destroy();
    }
  }, {
    key: "handle",
    value: function () {
      var _handle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {
        var _this = this;
        var _ref,
          abortSignal,
          _this$config,
          requestTimeout,
          disableConcurrentStreams,
          _args3 = arguments;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _ref = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {}, abortSignal = _ref.abortSignal;
              if (this.config) {
                _context3.next = 7;
                break;
              }
              _context3.next = 4;
              return this.configProvider;
            case 4:
              this.config = _context3.sent;
              this.connectionManager.setDisableConcurrentStreams(this.config.disableConcurrentStreams || false);
              if (this.config.maxConcurrentStreams) {
                this.connectionManager.setMaxConcurrentStreams(this.config.maxConcurrentStreams);
              }
            case 7:
              _this$config = this.config, requestTimeout = _this$config.requestTimeout, disableConcurrentStreams = _this$config.disableConcurrentStreams;
              return _context3.abrupt("return", new Promise(function (_resolve, _reject) {
                var _this$config2;
                var fulfilled = false;
                var writeRequestBodyPromise = undefined;
                var resolve = /*#__PURE__*/function () {
                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(arg) {
                    return _regeneratorRuntime().wrap(function _callee$(_context) {
                      while (1) switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return writeRequestBodyPromise;
                        case 2:
                          _resolve(arg);
                        case 3:
                        case "end":
                          return _context.stop();
                      }
                    }, _callee);
                  }));
                  return function resolve(_x2) {
                    return _ref2.apply(this, arguments);
                  };
                }();
                var reject = /*#__PURE__*/function () {
                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(arg) {
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                      while (1) switch (_context2.prev = _context2.next) {
                        case 0:
                          _context2.next = 2;
                          return writeRequestBodyPromise;
                        case 2:
                          _reject(arg);
                        case 3:
                        case "end":
                          return _context2.stop();
                      }
                    }, _callee2);
                  }));
                  return function reject(_x3) {
                    return _ref3.apply(this, arguments);
                  };
                }();
                if (abortSignal !== null && abortSignal !== void 0 && abortSignal.aborted) {
                  fulfilled = true;
                  var abortError = new Error("Request aborted");
                  abortError.name = "AbortError";
                  reject(abortError);
                  return;
                }
                var hostname = request.hostname,
                  method = request.method,
                  port = request.port,
                  protocol = request.protocol,
                  query = request.query;
                var auth = "";
                if (request.username != null || request.password != null) {
                  var _request$username, _request$password;
                  var username = (_request$username = request.username) !== null && _request$username !== void 0 ? _request$username : "";
                  var password = (_request$password = request.password) !== null && _request$password !== void 0 ? _request$password : "";
                  auth = "".concat(username, ":").concat(password, "@");
                }
                var authority = "".concat(protocol, "//").concat(auth).concat(hostname).concat(port ? ":".concat(port) : "");
                var requestContext = {
                  destination: new URL(authority)
                };
                var session = _this.connectionManager.lease(requestContext, {
                  requestTimeout: (_this$config2 = _this.config) === null || _this$config2 === void 0 ? void 0 : _this$config2.sessionTimeout,
                  disableConcurrentStreams: disableConcurrentStreams || false
                });
                var rejectWithDestroy = function rejectWithDestroy(err) {
                  if (disableConcurrentStreams) {
                    _this.destroySession(session);
                  }
                  fulfilled = true;
                  reject(err);
                };
                var queryString = buildQueryString(query || {});
                var path = request.path;
                if (queryString) {
                  path += "?".concat(queryString);
                }
                if (request.fragment) {
                  path += "#".concat(request.fragment);
                }
                var req = session.request(_objectSpread(_objectSpread({}, request.headers), {}, _defineProperty(_defineProperty({}, constants.HTTP2_HEADER_PATH, path), constants.HTTP2_HEADER_METHOD, method)));
                session.ref();
                req.on("response", function (headers) {
                  var httpResponse = new HttpResponse({
                    statusCode: headers[":status"] || -1,
                    headers: getTransformedHeaders(headers),
                    body: req
                  });
                  fulfilled = true;
                  resolve({
                    response: httpResponse
                  });
                  if (disableConcurrentStreams) {
                    session.close();
                    _this.connectionManager.deleteSession(authority, session);
                  }
                });
                if (requestTimeout) {
                  req.setTimeout(requestTimeout, function () {
                    req.close();
                    var timeoutError = new Error("Stream timed out because of no activity for ".concat(requestTimeout, " ms"));
                    timeoutError.name = "TimeoutError";
                    rejectWithDestroy(timeoutError);
                  });
                }
                if (abortSignal) {
                  abortSignal.onabort = function () {
                    req.close();
                    var abortError = new Error("Request aborted");
                    abortError.name = "AbortError";
                    rejectWithDestroy(abortError);
                  };
                }
                req.on("frameError", function (type, code, id) {
                  rejectWithDestroy(new Error("Frame type id ".concat(type, " in stream id ").concat(id, " has failed with code ").concat(code, ".")));
                });
                req.on("error", rejectWithDestroy);
                req.on("aborted", function () {
                  rejectWithDestroy(new Error("HTTP/2 stream is abnormally aborted in mid-communication with result code ".concat(req.rstCode, ".")));
                });
                req.on("close", function () {
                  session.unref();
                  if (disableConcurrentStreams) {
                    session.destroy();
                  }
                  if (!fulfilled) {
                    rejectWithDestroy(new Error("Unexpected error: http2 request did not get a response"));
                  }
                });
                writeRequestBodyPromise = writeRequestBody(req, request, requestTimeout);
              }));
            case 9:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function handle(_x) {
        return _handle.apply(this, arguments);
      }
      return handle;
    }()
  }, {
    key: "destroySession",
    value: function destroySession(session) {
      if (!session.destroyed) {
        session.destroy();
      }
    }
  }]);
}()));
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/stream-collector/collector.js





var Collector = /*#__PURE__*/function (_Writable) {
  function Collector() {
    var _this;
    classCallCheck_classCallCheck(this, Collector);
    _this = callSuper_callSuper(this, Collector, arguments);
    _this.bufferedBytes = [];
    return _this;
  }
  inherits_inherits(Collector, _Writable);
  return createClass_createClass(Collector, [{
    key: "_write",
    value: function _write(chunk, encoding, callback) {
      this.bufferedBytes.push(chunk);
      callback();
    }
  }]);
}(external_stream_namespaceObject.Writable);
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/stream-collector/index.js

var streamCollector = function streamCollector(stream) {
  return new Promise(function (resolve, reject) {
    var collector = new Collector();
    stream.pipe(collector);
    stream.on("error", function (err) {
      collector.end();
      reject(err);
    });
    collector.on("error", reject);
    collector.on("finish", function () {
      var bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));
      resolve(bytes);
    });
  });
};
;// ./node_modules/.pnpm/@smithy+node-http-handler@2.0.3/node_modules/@smithy/node-http-handler/dist-es/index.js



// EXTERNAL MODULE: external "util"
var external_util_ = __webpack_require__(9023);
;// ./node_modules/.pnpm/@smithy+util-stream@2.0.3/node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.js






var ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = "The stream has already been transformed.";
var sdkStreamMixin = function sdkStreamMixin(stream) {
  if (!(stream instanceof external_stream_namespaceObject.Readable)) {
    var _stream$__proto__;
    var name = (stream === null || stream === void 0 || (_stream$__proto__ = stream.__proto__) === null || _stream$__proto__ === void 0 || (_stream$__proto__ = _stream$__proto__.constructor) === null || _stream$__proto__ === void 0 ? void 0 : _stream$__proto__.name) || stream;
    throw new Error("Unexpected stream implementation, expect Stream.Readable instance, got ".concat(name));
  }
  var transformed = false;
  var transformToByteArray = /*#__PURE__*/function () {
    var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!transformed) {
              _context.next = 2;
              break;
            }
            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);
          case 2:
            transformed = true;
            _context.next = 5;
            return streamCollector(stream);
          case 5:
            return _context.abrupt("return", _context.sent);
          case 6:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function transformToByteArray() {
      return _ref.apply(this, arguments);
    };
  }();
  return Object.assign(stream, {
    transformToByteArray: transformToByteArray,
    transformToString: function () {
      var _transformToString = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(encoding) {
        var buf, decoder;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.next = 2;
              return transformToByteArray();
            case 2:
              buf = _context2.sent;
              if (!(encoding === undefined || Buffer.isEncoding(encoding))) {
                _context2.next = 7;
                break;
              }
              return _context2.abrupt("return", fromArrayBuffer(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding));
            case 7:
              decoder = new external_util_.TextDecoder(encoding);
              return _context2.abrupt("return", decoder.decode(buf));
            case 9:
            case "end":
              return _context2.stop();
          }
        }, _callee2);
      }));
      function transformToString(_x) {
        return _transformToString.apply(this, arguments);
      }
      return transformToString;
    }(),
    transformToWebStream: function transformToWebStream() {
      if (transformed) {
        throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);
      }
      if (stream.readableFlowing !== null) {
        throw new Error("The stream has been consumed by other callbacks.");
      }
      if (typeof external_stream_namespaceObject.Readable.toWeb !== "function") {
        throw new Error("Readable.toWeb() is not supported. Please make sure you are using Node.js >= 17.0.0, or polyfill is available.");
      }
      transformed = true;
      return external_stream_namespaceObject.Readable.toWeb(stream);
    }
  });
};
;// ./node_modules/.pnpm/@smithy+util-stream@2.0.3/node_modules/@smithy/util-stream/dist-es/index.js



;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/collect-stream-body.js



var collect_stream_body_collectBody = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var streamBody,
      context,
      fromContext,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          streamBody = _args.length > 0 && _args[0] !== undefined ? _args[0] : new Uint8Array();
          context = _args.length > 1 ? _args[1] : undefined;
          if (!(streamBody instanceof Uint8Array)) {
            _context.next = 4;
            break;
          }
          return _context.abrupt("return", Uint8ArrayBlobAdapter.mutate(streamBody));
        case 4:
          if (streamBody) {
            _context.next = 6;
            break;
          }
          return _context.abrupt("return", Uint8ArrayBlobAdapter.mutate(new Uint8Array()));
        case 6:
          fromContext = context.streamCollector(streamBody);
          _context.t0 = Uint8ArrayBlobAdapter;
          _context.next = 10;
          return fromContext;
        case 10:
          _context.t1 = _context.sent;
          return _context.abrupt("return", _context.t0.mutate.call(_context.t0, _context.t1));
        case 12:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function collectBody() {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/command.js



var Command = /*#__PURE__*/createClass_createClass(function Command() {
  classCallCheck_classCallCheck(this, Command);
  this.middlewareStack = constructStack();
});
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/constants.js
var constants_SENSITIVE_STRING = "***SensitiveInformation***";
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js


var createAggregatedClient = function createAggregatedClient(commands, Client) {
  var _loop = function _loop() {
    var command = _Object$keys[_i];
    var CommandCtor = commands[command];
    var methodImpl = /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args, optionsOrCb, cb) {
        var command;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              command = new CommandCtor(args);
              if (!(typeof optionsOrCb === "function")) {
                _context.next = 5;
                break;
              }
              this.send(command, optionsOrCb);
              _context.next = 12;
              break;
            case 5:
              if (!(typeof cb === "function")) {
                _context.next = 11;
                break;
              }
              if (!(typeof optionsOrCb !== "object")) {
                _context.next = 8;
                break;
              }
              throw new Error("Expected http options but got ".concat(typeof optionsOrCb));
            case 8:
              this.send(command, optionsOrCb || {}, cb);
              _context.next = 12;
              break;
            case 11:
              return _context.abrupt("return", this.send(command, optionsOrCb));
            case 12:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      return function methodImpl(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();
    var methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, "");
    Client.prototype[methodName] = methodImpl;
  };
  for (var _i = 0, _Object$keys = Object.keys(commands); _i < _Object$keys.length; _i++) {
    _loop();
  }
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/parse-utils.js

var parseBoolean = function parseBoolean(value) {
  switch (value) {
    case "true":
      return true;
    case "false":
      return false;
    default:
      throw new Error("Unable to parse boolean value \"".concat(value, "\""));
  }
};
var expectBoolean = function expectBoolean(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value === "number") {
    if (value === 0 || value === 1) {
      logger.warn(stackTraceWarning("Expected boolean, got ".concat(typeof value, ": ").concat(value)));
    }
    if (value === 0) {
      return false;
    }
    if (value === 1) {
      return true;
    }
  }
  if (typeof value === "string") {
    var lower = value.toLowerCase();
    if (lower === "false" || lower === "true") {
      logger.warn(stackTraceWarning("Expected boolean, got ".concat(typeof value, ": ").concat(value)));
    }
    if (lower === "false") {
      return false;
    }
    if (lower === "true") {
      return true;
    }
  }
  if (typeof value === "boolean") {
    return value;
  }
  throw new TypeError("Expected boolean, got ".concat(typeof value, ": ").concat(value));
};
var expectNumber = function expectNumber(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value === "string") {
    var parsed = parseFloat(value);
    if (!Number.isNaN(parsed)) {
      if (String(parsed) !== String(value)) {
        logger.warn(stackTraceWarning("Expected number but observed string: ".concat(value)));
      }
      return parsed;
    }
  }
  if (typeof value === "number") {
    return value;
  }
  throw new TypeError("Expected number, got ".concat(typeof value, ": ").concat(value));
};
var MAX_FLOAT = Math.ceil(Math.pow(2, 127) * (2 - Math.pow(2, -23)));
var expectFloat32 = function expectFloat32(value) {
  var expected = expectNumber(value);
  if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {
    if (Math.abs(expected) > MAX_FLOAT) {
      throw new TypeError("Expected 32-bit float, got ".concat(value));
    }
  }
  return expected;
};
var expectLong = function expectLong(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (Number.isInteger(value) && !Number.isNaN(value)) {
    return value;
  }
  throw new TypeError("Expected integer, got ".concat(typeof value, ": ").concat(value));
};
var expectInt = (/* unused pure expression or super */ null && (expectLong));
var expectInt32 = function expectInt32(value) {
  return expectSizedInt(value, 32);
};
var expectShort = function expectShort(value) {
  return expectSizedInt(value, 16);
};
var expectByte = function expectByte(value) {
  return expectSizedInt(value, 8);
};
var expectSizedInt = function expectSizedInt(value, size) {
  var expected = expectLong(value);
  if (expected !== undefined && castInt(expected, size) !== expected) {
    throw new TypeError("Expected ".concat(size, "-bit integer, got ").concat(value));
  }
  return expected;
};
var castInt = function castInt(value, size) {
  switch (size) {
    case 32:
      return Int32Array.of(value)[0];
    case 16:
      return Int16Array.of(value)[0];
    case 8:
      return Int8Array.of(value)[0];
  }
};
var expectNonNull = function expectNonNull(value, location) {
  if (value === null || value === undefined) {
    if (location) {
      throw new TypeError("Expected a non-null value for ".concat(location));
    }
    throw new TypeError("Expected a non-null value");
  }
  return value;
};
var expectObject = function expectObject(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value === "object" && !Array.isArray(value)) {
    return value;
  }
  var receivedType = Array.isArray(value) ? "array" : typeof value;
  throw new TypeError("Expected object, got ".concat(receivedType, ": ").concat(value));
};
var expectString = function expectString(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value === "string") {
    return value;
  }
  if (["boolean", "number", "bigint"].includes(typeof value)) {
    logger.warn(stackTraceWarning("Expected string, got ".concat(typeof value, ": ").concat(value)));
    return String(value);
  }
  throw new TypeError("Expected string, got ".concat(typeof value, ": ").concat(value));
};
var expectUnion = function expectUnion(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  var asObject = expectObject(value);
  var setKeys = Object.entries(asObject).filter(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      v = _ref2[1];
    return v != null;
  }).map(function (_ref3) {
    var _ref4 = _slicedToArray(_ref3, 1),
      k = _ref4[0];
    return k;
  });
  if (setKeys.length === 0) {
    throw new TypeError("Unions must have exactly one non-null member. None were found.");
  }
  if (setKeys.length > 1) {
    throw new TypeError("Unions must have exactly one non-null member. Keys ".concat(setKeys, " were not null."));
  }
  return asObject;
};
var parse_utils_strictParseDouble = function strictParseDouble(value) {
  if (typeof value == "string") {
    return expectNumber(parseNumber(value));
  }
  return expectNumber(value);
};
var strictParseFloat = (/* unused pure expression or super */ null && (parse_utils_strictParseDouble));
var strictParseFloat32 = function strictParseFloat32(value) {
  if (typeof value == "string") {
    return expectFloat32(parseNumber(value));
  }
  return expectFloat32(value);
};
var NUMBER_REGEX = /(-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)|(-?Infinity)|(NaN)/g;
var parseNumber = function parseNumber(value) {
  var matches = value.match(NUMBER_REGEX);
  if (matches === null || matches[0].length !== value.length) {
    throw new TypeError("Expected real number, got implicit NaN");
  }
  return parseFloat(value);
};
var limitedParseDouble = function limitedParseDouble(value) {
  if (typeof value == "string") {
    return parseFloatString(value);
  }
  return expectNumber(value);
};
var handleFloat = (/* unused pure expression or super */ null && (limitedParseDouble));
var limitedParseFloat = (/* unused pure expression or super */ null && (limitedParseDouble));
var limitedParseFloat32 = function limitedParseFloat32(value) {
  if (typeof value == "string") {
    return parseFloatString(value);
  }
  return expectFloat32(value);
};
var parseFloatString = function parseFloatString(value) {
  switch (value) {
    case "NaN":
      return NaN;
    case "Infinity":
      return Infinity;
    case "-Infinity":
      return -Infinity;
    default:
      throw new Error("Unable to parse float value: ".concat(value));
  }
};
var strictParseLong = function strictParseLong(value) {
  if (typeof value === "string") {
    return expectLong(parseNumber(value));
  }
  return expectLong(value);
};
var strictParseInt = (/* unused pure expression or super */ null && (strictParseLong));
var strictParseInt32 = function strictParseInt32(value) {
  if (typeof value === "string") {
    return expectInt32(parseNumber(value));
  }
  return expectInt32(value);
};
var parse_utils_strictParseShort = function strictParseShort(value) {
  if (typeof value === "string") {
    return expectShort(parseNumber(value));
  }
  return expectShort(value);
};
var strictParseByte = function strictParseByte(value) {
  if (typeof value === "string") {
    return expectByte(parseNumber(value));
  }
  return expectByte(value);
};
var stackTraceWarning = function stackTraceWarning(message) {
  return String(new TypeError(message).stack || message).split("\n").slice(0, 5).filter(function (s) {
    return !s.includes("stackTraceWarning");
  }).join("\n");
};
var logger = {
  warn: console.warn
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/date-utils.js


var DAYS = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
var MONTHS = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
function dateToUtcString(date) {
  var year = date.getUTCFullYear();
  var month = date.getUTCMonth();
  var dayOfWeek = date.getUTCDay();
  var dayOfMonthInt = date.getUTCDate();
  var hoursInt = date.getUTCHours();
  var minutesInt = date.getUTCMinutes();
  var secondsInt = date.getUTCSeconds();
  var dayOfMonthString = dayOfMonthInt < 10 ? "0".concat(dayOfMonthInt) : "".concat(dayOfMonthInt);
  var hoursString = hoursInt < 10 ? "0".concat(hoursInt) : "".concat(hoursInt);
  var minutesString = minutesInt < 10 ? "0".concat(minutesInt) : "".concat(minutesInt);
  var secondsString = secondsInt < 10 ? "0".concat(secondsInt) : "".concat(secondsInt);
  return "".concat(DAYS[dayOfWeek], ", ").concat(dayOfMonthString, " ").concat(MONTHS[month], " ").concat(year, " ").concat(hoursString, ":").concat(minutesString, ":").concat(secondsString, " GMT");
}
var RFC3339 = (/* unused pure expression or super */ null && (new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?[zZ]$/)));
var parseRfc3339DateTime = function parseRfc3339DateTime(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value !== "string") {
    throw new TypeError("RFC-3339 date-times must be expressed as strings");
  }
  var match = RFC3339.exec(value);
  if (!match) {
    throw new TypeError("Invalid RFC-3339 date-time value");
  }
  var _match = _slicedToArray(match, 8),
    _ = _match[0],
    yearStr = _match[1],
    monthStr = _match[2],
    dayStr = _match[3],
    hours = _match[4],
    minutes = _match[5],
    seconds = _match[6],
    fractionalMilliseconds = _match[7];
  var year = strictParseShort(stripLeadingZeroes(yearStr));
  var month = parseDateValue(monthStr, "month", 1, 12);
  var day = parseDateValue(dayStr, "day", 1, 31);
  return buildDate(year, month, day, {
    hours: hours,
    minutes: minutes,
    seconds: seconds,
    fractionalMilliseconds: fractionalMilliseconds
  });
};
var RFC3339_WITH_OFFSET = new RegExp(/^(\d{4})-(\d{2})-(\d{2})[tT](\d{2}):(\d{2}):(\d{2})(?:\.(\d+))?(([-+]\d{2}\:\d{2})|[zZ])$/);
var parseRfc3339DateTimeWithOffset = function parseRfc3339DateTimeWithOffset(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value !== "string") {
    throw new TypeError("RFC-3339 date-times must be expressed as strings");
  }
  var match = RFC3339_WITH_OFFSET.exec(value);
  if (!match) {
    throw new TypeError("Invalid RFC-3339 date-time value");
  }
  var _match2 = slicedToArray_slicedToArray(match, 9),
    _ = _match2[0],
    yearStr = _match2[1],
    monthStr = _match2[2],
    dayStr = _match2[3],
    hours = _match2[4],
    minutes = _match2[5],
    seconds = _match2[6],
    fractionalMilliseconds = _match2[7],
    offsetStr = _match2[8];
  var year = parse_utils_strictParseShort(stripLeadingZeroes(yearStr));
  var month = parseDateValue(monthStr, "month", 1, 12);
  var day = parseDateValue(dayStr, "day", 1, 31);
  var date = buildDate(year, month, day, {
    hours: hours,
    minutes: minutes,
    seconds: seconds,
    fractionalMilliseconds: fractionalMilliseconds
  });
  if (offsetStr.toUpperCase() != "Z") {
    date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));
  }
  return date;
};
var IMF_FIXDATE = (/* unused pure expression or super */ null && (new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/)));
var RFC_850_DATE = (/* unused pure expression or super */ null && (new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? GMT$/)));
var ASC_TIME = (/* unused pure expression or super */ null && (new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\d{2}) (\d{1,2}):(\d{2}):(\d{2})(?:\.(\d+))? (\d{4})$/)));
var parseRfc7231DateTime = function parseRfc7231DateTime(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  if (typeof value !== "string") {
    throw new TypeError("RFC-7231 date-times must be expressed as strings");
  }
  var match = IMF_FIXDATE.exec(value);
  if (match) {
    var _match3 = match,
      _match4 = _slicedToArray(_match3, 8),
      _ = _match4[0],
      dayStr = _match4[1],
      monthStr = _match4[2],
      yearStr = _match4[3],
      hours = _match4[4],
      minutes = _match4[5],
      seconds = _match4[6],
      fractionalMilliseconds = _match4[7];
    return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, "day", 1, 31), {
      hours: hours,
      minutes: minutes,
      seconds: seconds,
      fractionalMilliseconds: fractionalMilliseconds
    });
  }
  match = RFC_850_DATE.exec(value);
  if (match) {
    var _match5 = match,
      _match6 = _slicedToArray(_match5, 8),
      _2 = _match6[0],
      _dayStr = _match6[1],
      _monthStr = _match6[2],
      _yearStr = _match6[3],
      _hours = _match6[4],
      _minutes = _match6[5],
      _seconds = _match6[6],
      _fractionalMilliseconds = _match6[7];
    return adjustRfc850Year(buildDate(parseTwoDigitYear(_yearStr), parseMonthByShortName(_monthStr), parseDateValue(_dayStr, "day", 1, 31), {
      hours: _hours,
      minutes: _minutes,
      seconds: _seconds,
      fractionalMilliseconds: _fractionalMilliseconds
    }));
  }
  match = ASC_TIME.exec(value);
  if (match) {
    var _match7 = match,
      _match8 = _slicedToArray(_match7, 8),
      _3 = _match8[0],
      _monthStr2 = _match8[1],
      _dayStr2 = _match8[2],
      _hours2 = _match8[3],
      _minutes2 = _match8[4],
      _seconds2 = _match8[5],
      _fractionalMilliseconds2 = _match8[6],
      _yearStr2 = _match8[7];
    return buildDate(strictParseShort(stripLeadingZeroes(_yearStr2)), parseMonthByShortName(_monthStr2), parseDateValue(_dayStr2.trimLeft(), "day", 1, 31), {
      hours: _hours2,
      minutes: _minutes2,
      seconds: _seconds2,
      fractionalMilliseconds: _fractionalMilliseconds2
    });
  }
  throw new TypeError("Invalid RFC-7231 date-time value");
};
var parseEpochTimestamp = function parseEpochTimestamp(value) {
  if (value === null || value === undefined) {
    return undefined;
  }
  var valueAsDouble;
  if (typeof value === "number") {
    valueAsDouble = value;
  } else if (typeof value === "string") {
    valueAsDouble = strictParseDouble(value);
  } else {
    throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");
  }
  if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {
    throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");
  }
  return new Date(Math.round(valueAsDouble * 1000));
};
var buildDate = function buildDate(year, month, day, time) {
  var adjustedMonth = month - 1;
  validateDayOfMonth(year, adjustedMonth, day);
  return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, "hour", 0, 23), parseDateValue(time.minutes, "minute", 0, 59), parseDateValue(time.seconds, "seconds", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));
};
var parseTwoDigitYear = function parseTwoDigitYear(value) {
  var thisYear = new Date().getUTCFullYear();
  var valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));
  if (valueInThisCentury < thisYear) {
    return valueInThisCentury + 100;
  }
  return valueInThisCentury;
};
var FIFTY_YEARS_IN_MILLIS = (/* unused pure expression or super */ null && (50 * 365 * 24 * 60 * 60 * 1000));
var adjustRfc850Year = function adjustRfc850Year(input) {
  if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {
    return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));
  }
  return input;
};
var parseMonthByShortName = function parseMonthByShortName(value) {
  var monthIdx = MONTHS.indexOf(value);
  if (monthIdx < 0) {
    throw new TypeError("Invalid month: ".concat(value));
  }
  return monthIdx + 1;
};
var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var validateDayOfMonth = function validateDayOfMonth(year, month, day) {
  var maxDays = DAYS_IN_MONTH[month];
  if (month === 1 && isLeapYear(year)) {
    maxDays = 29;
  }
  if (day > maxDays) {
    throw new TypeError("Invalid day for ".concat(MONTHS[month], " in ").concat(year, ": ").concat(day));
  }
};
var isLeapYear = function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
};
var parseDateValue = function parseDateValue(value, type, lower, upper) {
  var dateVal = strictParseByte(stripLeadingZeroes(value));
  if (dateVal < lower || dateVal > upper) {
    throw new TypeError("".concat(type, " must be between ").concat(lower, " and ").concat(upper, ", inclusive"));
  }
  return dateVal;
};
var parseMilliseconds = function parseMilliseconds(value) {
  if (value === null || value === undefined) {
    return 0;
  }
  return strictParseFloat32("0." + value) * 1000;
};
var parseOffsetToMilliseconds = function parseOffsetToMilliseconds(value) {
  var directionStr = value[0];
  var direction = 1;
  if (directionStr == "+") {
    direction = 1;
  } else if (directionStr == "-") {
    direction = -1;
  } else {
    throw new TypeError("Offset direction, ".concat(directionStr, ", must be \"+\" or \"-\""));
  }
  var hour = Number(value.substring(1, 3));
  var minute = Number(value.substring(4, 6));
  return direction * (hour * 60 + minute) * 60 * 1000;
};
var stripLeadingZeroes = function stripLeadingZeroes(value) {
  var idx = 0;
  while (idx < value.length - 1 && value.charAt(idx) === "0") {
    idx++;
  }
  if (idx === 0) {
    return value;
  }
  return value.slice(idx);
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/exceptions.js






var ServiceException = /*#__PURE__*/function (_Error) {
  function ServiceException(options) {
    var _this;
    classCallCheck_classCallCheck(this, ServiceException);
    _this = callSuper_callSuper(this, ServiceException, [options.message]);
    Object.setPrototypeOf(_this, ServiceException.prototype);
    _this.name = options.name;
    _this.$fault = options.$fault;
    _this.$metadata = options.$metadata;
    return _this;
  }
  inherits_inherits(ServiceException, _Error);
  return createClass_createClass(ServiceException);
}( /*#__PURE__*/_wrapNativeSuper(Error));
var decorateServiceException = function decorateServiceException(exception) {
  var additions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Object.entries(additions).filter(function (_ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 2),
      v = _ref2[1];
    return v !== undefined;
  }).forEach(function (_ref3) {
    var _ref4 = slicedToArray_slicedToArray(_ref3, 2),
      k = _ref4[0],
      v = _ref4[1];
    if (exception[k] == undefined || exception[k] === "") {
      exception[k] = v;
    }
  });
  var message = exception.message || exception.Message || "UnknownError";
  exception.message = message;
  delete exception.Message;
  return exception;
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/default-error-handler.js

var throwDefaultError = function throwDefaultError(_ref) {
  var output = _ref.output,
    parsedBody = _ref.parsedBody,
    exceptionCtor = _ref.exceptionCtor,
    errorCode = _ref.errorCode;
  var $metadata = deserializeMetadata(output);
  var statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
  var response = new exceptionCtor({
    name: (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.code) || (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.Code) || errorCode || statusCode || "UnknownError",
    $fault: "client",
    $metadata: $metadata
  });
  throw decorateServiceException(response, parsedBody);
};
var withBaseException = function withBaseException(ExceptionCtor) {
  return function (_ref2) {
    var output = _ref2.output,
      parsedBody = _ref2.parsedBody,
      errorCode = _ref2.errorCode;
    throwDefaultError({
      output: output,
      parsedBody: parsedBody,
      exceptionCtor: ExceptionCtor,
      errorCode: errorCode
    });
  };
};
var deserializeMetadata = function deserializeMetadata(output) {
  var _ref3, _output$headers$xAmz;
  return {
    httpStatusCode: output.statusCode,
    requestId: (_ref3 = (_output$headers$xAmz = output.headers["x-amzn-requestid"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers["x-amzn-request-id"]) !== null && _ref3 !== void 0 ? _ref3 : output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/defaults-mode.js
var loadConfigsForDefaultMode = function loadConfigsForDefaultMode(mode) {
  switch (mode) {
    case "standard":
      return {
        retryMode: "standard",
        connectionTimeout: 3100
      };
    case "in-region":
      return {
        retryMode: "standard",
        connectionTimeout: 1100
      };
    case "cross-region":
      return {
        retryMode: "standard",
        connectionTimeout: 3100
      };
    case "mobile":
      return {
        retryMode: "standard",
        connectionTimeout: 30000
      };
    default:
      return {};
  }
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js
var warningEmitted = false;
var emitWarningIfUnsupportedVersion = function emitWarningIfUnsupportedVersion(version) {
  if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf("."))) < 14) {
    warningEmitted = true;
  }
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/extended-encode-uri-component.js
function extendedEncodeURIComponent(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
    return "%" + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js
var getValueFromTextNode = function getValueFromTextNode(obj) {
  var textNodeName = "#text";
  for (var key in obj) {
    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {
      obj[key] = obj[key][textNodeName];
    } else if (typeof obj[key] === "object" && obj[key] !== null) {
      obj[key] = getValueFromTextNode(obj[key]);
    }
  }
  return obj;
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/lazy-json.js






var StringWrapper = function StringWrapper() {
  var Class = Object.getPrototypeOf(this).constructor;
  var Constructor = Function.bind.apply(String, [null].concat(Array.prototype.slice.call(arguments)));
  var instance = new Constructor();
  Object.setPrototypeOf(instance, Class.prototype);
  return instance;
};
StringWrapper.prototype = Object.create(String.prototype, {
  constructor: {
    value: StringWrapper,
    enumerable: false,
    writable: true,
    configurable: true
  }
});
Object.setPrototypeOf(StringWrapper, String);
var LazyJsonString = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_StringWrapper) {
  function LazyJsonString() {
    _classCallCheck(this, LazyJsonString);
    return _callSuper(this, LazyJsonString, arguments);
  }
  _inherits(LazyJsonString, _StringWrapper);
  return _createClass(LazyJsonString, [{
    key: "deserializeJSON",
    value: function deserializeJSON() {
      return JSON.parse(_get(_getPrototypeOf(LazyJsonString.prototype), "toString", this).call(this));
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return _get(_getPrototypeOf(LazyJsonString.prototype), "toString", this).call(this);
    }
  }], [{
    key: "fromObject",
    value: function fromObject(object) {
      if (object instanceof LazyJsonString) {
        return object;
      } else if (object instanceof String || typeof object === "string") {
        return new LazyJsonString(object);
      }
      return new LazyJsonString(JSON.stringify(object));
    }
  }]);
}(StringWrapper)));
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/object-mapping.js

function object_mapping_map(arg0, arg1, arg2) {
  var target;
  var filter;
  var instructions;
  if (typeof arg1 === "undefined" && typeof arg2 === "undefined") {
    target = {};
    instructions = arg0;
  } else {
    target = arg0;
    if (typeof arg1 === "function") {
      filter = arg1;
      instructions = arg2;
      return mapWithFilter(target, filter, instructions);
    } else {
      instructions = arg1;
    }
  }
  for (var _i = 0, _Object$keys = Object.keys(instructions); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];
    if (!Array.isArray(instructions[key])) {
      target[key] = instructions[key];
      continue;
    }
    applyInstruction(target, null, instructions, key);
  }
  return target;
}
var convertMap = function convertMap(target) {
  var output = {};
  for (var _i2 = 0, _Object$entries = Object.entries(target || {}); _i2 < _Object$entries.length; _i2++) {
    var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),
      k = _Object$entries$_i[0],
      v = _Object$entries$_i[1];
    output[k] = [, v];
  }
  return output;
};
var object_mapping_take = function take(source, instructions) {
  var out = {};
  for (var key in instructions) {
    applyInstruction(out, source, instructions, key);
  }
  return out;
};
var mapWithFilter = function mapWithFilter(target, filter, instructions) {
  return object_mapping_map(target, Object.entries(instructions).reduce(function (_instructions, _ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    if (Array.isArray(value)) {
      _instructions[key] = value;
    } else {
      if (typeof value === "function") {
        _instructions[key] = [filter, value()];
      } else {
        _instructions[key] = [filter, value];
      }
    }
    return _instructions;
  }, {}));
};
var applyInstruction = function applyInstruction(target, source, instructions, targetKey) {
  if (source !== null) {
    var instruction = instructions[targetKey];
    if (typeof instruction === "function") {
      instruction = [, instruction];
    }
    var _instruction = instruction,
      _instruction2 = slicedToArray_slicedToArray(_instruction, 3),
      _instruction2$ = _instruction2[0],
      _filter = _instruction2$ === void 0 ? nonNullish : _instruction2$,
      _instruction2$2 = _instruction2[1],
      valueFn = _instruction2$2 === void 0 ? pass : _instruction2$2,
      _instruction2$3 = _instruction2[2],
      sourceKey = _instruction2$3 === void 0 ? targetKey : _instruction2$3;
    if (typeof _filter === "function" && _filter(source[sourceKey]) || typeof _filter !== "function" && !!_filter) {
      target[targetKey] = valueFn(source[sourceKey]);
    }
    return;
  }
  var _instructions$targetK = slicedToArray_slicedToArray(instructions[targetKey], 2),
    filter = _instructions$targetK[0],
    value = _instructions$targetK[1];
  if (typeof value === "function") {
    var _value;
    var defaultFilterPassed = filter === undefined && (_value = value()) != null;
    var customFilterPassed = typeof filter === "function" && !!filter(void 0) || typeof filter !== "function" && !!filter;
    if (defaultFilterPassed) {
      target[targetKey] = _value;
    } else if (customFilterPassed) {
      target[targetKey] = value();
    }
  } else {
    var _defaultFilterPassed = filter === undefined && value != null;
    var _customFilterPassed = typeof filter === "function" && !!filter(value) || typeof filter !== "function" && !!filter;
    if (_defaultFilterPassed || _customFilterPassed) {
      target[targetKey] = value;
    }
  }
};
var nonNullish = function nonNullish(_) {
  return _ != null;
};
var pass = function pass(_) {
  return _;
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/resolve-path.js

var resolve_path_resolvedPath = function resolvedPath(_resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) {
  if (input != null && input[memberName] !== undefined) {
    var labelValue = labelValueProvider();
    if (labelValue.length <= 0) {
      throw new Error("Empty value provided for input HTTP label: " + memberName + ".");
    }
    _resolvedPath = _resolvedPath.replace(uriLabel, isGreedyLabel ? labelValue.split("/").map(function (segment) {
      return extendedEncodeURIComponent(segment);
    }).join("/") : extendedEncodeURIComponent(labelValue));
  } else {
    throw new Error("No value provided for input HTTP label: " + memberName + ".");
  }
  return _resolvedPath;
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/serde-json.js
var serde_json_json = function _json(obj) {
  if (obj == null) {
    return {};
  }
  if (Array.isArray(obj)) {
    return obj.filter(function (_) {
      return _ != null;
    });
  }
  if (typeof obj === "object") {
    var target = {};
    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {
      var key = _Object$keys[_i];
      if (obj[key] == null) {
        continue;
      }
      target[key] = _json(obj[key]);
    }
    return target;
  }
  return obj;
};
;// ./node_modules/.pnpm/@smithy+smithy-client@2.0.3/node_modules/@smithy/smithy-client/dist-es/index.js





















;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/endpoint/EndpointParameters.js

var resolveClientEndpointParameters = function resolveClientEndpointParameters(options) {
  var _options$useFipsEndpo, _options$useDualstack, _options$forcePathSty, _options$useAccelerat, _options$useGlobalEnd, _options$disableMulti;
  return _objectSpread2(_objectSpread2({}, options), {}, {
    useFipsEndpoint: (_options$useFipsEndpo = options.useFipsEndpoint) !== null && _options$useFipsEndpo !== void 0 ? _options$useFipsEndpo : false,
    useDualstackEndpoint: (_options$useDualstack = options.useDualstackEndpoint) !== null && _options$useDualstack !== void 0 ? _options$useDualstack : false,
    forcePathStyle: (_options$forcePathSty = options.forcePathStyle) !== null && _options$forcePathSty !== void 0 ? _options$forcePathSty : false,
    useAccelerateEndpoint: (_options$useAccelerat = options.useAccelerateEndpoint) !== null && _options$useAccelerat !== void 0 ? _options$useAccelerat : false,
    useGlobalEndpoint: (_options$useGlobalEnd = options.useGlobalEndpoint) !== null && _options$useGlobalEnd !== void 0 ? _options$useGlobalEnd : false,
    disableMultiregionAccessPoints: (_options$disableMulti = options.disableMultiregionAccessPoints) !== null && _options$disableMulti !== void 0 ? _options$disableMulti : false,
    defaultSigningName: "s3"
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/package.json
const package_namespaceObject = {"rE":"3.395.0"};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js






var STSServiceException = /*#__PURE__*/function (_ServiceException) {
  function STSServiceException(options) {
    var _this;
    classCallCheck_classCallCheck(this, STSServiceException);
    _this = callSuper_callSuper(this, STSServiceException, [options]);
    Object.setPrototypeOf(_this, STSServiceException.prototype);
    return _this;
  }
  inherits_inherits(STSServiceException, _ServiceException);
  return createClass_createClass(STSServiceException);
}(ServiceException);
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js







var ExpiredTokenException = /*#__PURE__*/function (_BaseException) {
  function ExpiredTokenException(opts) {
    var _this;
    classCallCheck_classCallCheck(this, ExpiredTokenException);
    _this = callSuper_callSuper(this, ExpiredTokenException, [_objectSpread2({
      name: "ExpiredTokenException",
      $fault: "client"
    }, opts)]);
    _this.name = "ExpiredTokenException";
    _this.$fault = "client";
    Object.setPrototypeOf(_this, ExpiredTokenException.prototype);
    return _this;
  }
  inherits_inherits(ExpiredTokenException, _BaseException);
  return createClass_createClass(ExpiredTokenException);
}(STSServiceException);
var MalformedPolicyDocumentException = /*#__PURE__*/function (_BaseException2) {
  function MalformedPolicyDocumentException(opts) {
    var _this2;
    classCallCheck_classCallCheck(this, MalformedPolicyDocumentException);
    _this2 = callSuper_callSuper(this, MalformedPolicyDocumentException, [_objectSpread2({
      name: "MalformedPolicyDocumentException",
      $fault: "client"
    }, opts)]);
    _this2.name = "MalformedPolicyDocumentException";
    _this2.$fault = "client";
    Object.setPrototypeOf(_this2, MalformedPolicyDocumentException.prototype);
    return _this2;
  }
  inherits_inherits(MalformedPolicyDocumentException, _BaseException2);
  return createClass_createClass(MalformedPolicyDocumentException);
}(STSServiceException);
var PackedPolicyTooLargeException = /*#__PURE__*/function (_BaseException3) {
  function PackedPolicyTooLargeException(opts) {
    var _this3;
    classCallCheck_classCallCheck(this, PackedPolicyTooLargeException);
    _this3 = callSuper_callSuper(this, PackedPolicyTooLargeException, [_objectSpread2({
      name: "PackedPolicyTooLargeException",
      $fault: "client"
    }, opts)]);
    _this3.name = "PackedPolicyTooLargeException";
    _this3.$fault = "client";
    Object.setPrototypeOf(_this3, PackedPolicyTooLargeException.prototype);
    return _this3;
  }
  inherits_inherits(PackedPolicyTooLargeException, _BaseException3);
  return createClass_createClass(PackedPolicyTooLargeException);
}(STSServiceException);
var RegionDisabledException = /*#__PURE__*/function (_BaseException4) {
  function RegionDisabledException(opts) {
    var _this4;
    classCallCheck_classCallCheck(this, RegionDisabledException);
    _this4 = callSuper_callSuper(this, RegionDisabledException, [_objectSpread2({
      name: "RegionDisabledException",
      $fault: "client"
    }, opts)]);
    _this4.name = "RegionDisabledException";
    _this4.$fault = "client";
    Object.setPrototypeOf(_this4, RegionDisabledException.prototype);
    return _this4;
  }
  inherits_inherits(RegionDisabledException, _BaseException4);
  return createClass_createClass(RegionDisabledException);
}(STSServiceException);
var IDPRejectedClaimException = /*#__PURE__*/function (_BaseException5) {
  function IDPRejectedClaimException(opts) {
    var _this5;
    classCallCheck_classCallCheck(this, IDPRejectedClaimException);
    _this5 = callSuper_callSuper(this, IDPRejectedClaimException, [_objectSpread2({
      name: "IDPRejectedClaimException",
      $fault: "client"
    }, opts)]);
    _this5.name = "IDPRejectedClaimException";
    _this5.$fault = "client";
    Object.setPrototypeOf(_this5, IDPRejectedClaimException.prototype);
    return _this5;
  }
  inherits_inherits(IDPRejectedClaimException, _BaseException5);
  return createClass_createClass(IDPRejectedClaimException);
}(STSServiceException);
var InvalidIdentityTokenException = /*#__PURE__*/function (_BaseException6) {
  function InvalidIdentityTokenException(opts) {
    var _this6;
    classCallCheck_classCallCheck(this, InvalidIdentityTokenException);
    _this6 = callSuper_callSuper(this, InvalidIdentityTokenException, [_objectSpread2({
      name: "InvalidIdentityTokenException",
      $fault: "client"
    }, opts)]);
    _this6.name = "InvalidIdentityTokenException";
    _this6.$fault = "client";
    Object.setPrototypeOf(_this6, InvalidIdentityTokenException.prototype);
    return _this6;
  }
  inherits_inherits(InvalidIdentityTokenException, _BaseException6);
  return createClass_createClass(InvalidIdentityTokenException);
}(STSServiceException);
var IDPCommunicationErrorException = /*#__PURE__*/function (_BaseException7) {
  function IDPCommunicationErrorException(opts) {
    var _this7;
    classCallCheck_classCallCheck(this, IDPCommunicationErrorException);
    _this7 = callSuper_callSuper(this, IDPCommunicationErrorException, [_objectSpread2({
      name: "IDPCommunicationErrorException",
      $fault: "client"
    }, opts)]);
    _this7.name = "IDPCommunicationErrorException";
    _this7.$fault = "client";
    Object.setPrototypeOf(_this7, IDPCommunicationErrorException.prototype);
    return _this7;
  }
  inherits_inherits(IDPCommunicationErrorException, _BaseException7);
  return createClass_createClass(IDPCommunicationErrorException);
}(STSServiceException);
var models_0_InvalidAuthorizationMessageException = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException8) {
  function InvalidAuthorizationMessageException(opts) {
    var _this8;
    _classCallCheck(this, InvalidAuthorizationMessageException);
    _this8 = _callSuper(this, InvalidAuthorizationMessageException, [_objectSpread({
      name: "InvalidAuthorizationMessageException",
      $fault: "client"
    }, opts)]);
    _this8.name = "InvalidAuthorizationMessageException";
    _this8.$fault = "client";
    Object.setPrototypeOf(_this8, InvalidAuthorizationMessageException.prototype);
    return _this8;
  }
  _inherits(InvalidAuthorizationMessageException, _BaseException8);
  return _createClass(InvalidAuthorizationMessageException);
}(__BaseException)));
var CredentialsFilterSensitiveLog = function CredentialsFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.SecretAccessKey && {
    SecretAccessKey: constants_SENSITIVE_STRING
  });
};
var AssumeRoleResponseFilterSensitiveLog = function AssumeRoleResponseFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.Credentials && {
    Credentials: CredentialsFilterSensitiveLog(obj.Credentials)
  });
};
var AssumeRoleWithSAMLRequestFilterSensitiveLog = function AssumeRoleWithSAMLRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SAMLAssertion && {
    SAMLAssertion: SENSITIVE_STRING
  });
};
var AssumeRoleWithSAMLResponseFilterSensitiveLog = function AssumeRoleWithSAMLResponseFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Credentials && {
    Credentials: CredentialsFilterSensitiveLog(obj.Credentials)
  });
};
var AssumeRoleWithWebIdentityRequestFilterSensitiveLog = function AssumeRoleWithWebIdentityRequestFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.WebIdentityToken && {
    WebIdentityToken: constants_SENSITIVE_STRING
  });
};
var AssumeRoleWithWebIdentityResponseFilterSensitiveLog = function AssumeRoleWithWebIdentityResponseFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.Credentials && {
    Credentials: CredentialsFilterSensitiveLog(obj.Credentials)
  });
};
var GetFederationTokenResponseFilterSensitiveLog = function GetFederationTokenResponseFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Credentials && {
    Credentials: CredentialsFilterSensitiveLog(obj.Credentials)
  });
};
var GetSessionTokenResponseFilterSensitiveLog = function GetSessionTokenResponseFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Credentials && {
    Credentials: CredentialsFilterSensitiveLog(obj.Credentials)
  });
};
// EXTERNAL MODULE: ./node_modules/.pnpm/fast-xml-parser@4.2.5/node_modules/fast-xml-parser/src/fxp.js
var fxp = __webpack_require__(1330);
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js










var se_AssumeRoleCommand = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(input, context) {
    var headers, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread2(_objectSpread2({}, se_AssumeRoleRequest(input, context)), {}, {
            Action: "AssumeRole",
            Version: "2011-06-15"
          }));
          return _context.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function se_AssumeRoleCommand(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var se_AssumeRoleWithSAMLCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_AssumeRoleWithSAMLRequest(input, context)), {}, {
            Action: "AssumeRoleWithSAML",
            Version: "2011-06-15"
          }));
          return _context2.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function se_AssumeRoleWithSAMLCommand(_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}()));
var se_AssumeRoleWithWebIdentityCommand = /*#__PURE__*/function () {
  var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(input, context) {
    var headers, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread2(_objectSpread2({}, se_AssumeRoleWithWebIdentityRequest(input, context)), {}, {
            Action: "AssumeRoleWithWebIdentity",
            Version: "2011-06-15"
          }));
          return _context3.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function se_AssumeRoleWithWebIdentityCommand(_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}();
var se_DecodeAuthorizationMessageCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_DecodeAuthorizationMessageRequest(input, context)), {}, {
            Action: "DecodeAuthorizationMessage",
            Version: "2011-06-15"
          }));
          return _context4.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function se_DecodeAuthorizationMessageCommand(_x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}()));
var se_GetAccessKeyInfoCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_GetAccessKeyInfoRequest(input, context)), {}, {
            Action: "GetAccessKeyInfo",
            Version: "2011-06-15"
          }));
          return _context5.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function se_GetAccessKeyInfoCommand(_x9, _x10) {
    return _ref5.apply(this, arguments);
  };
}()));
var se_GetCallerIdentityCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_GetCallerIdentityRequest(input, context)), {}, {
            Action: "GetCallerIdentity",
            Version: "2011-06-15"
          }));
          return _context6.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return function se_GetCallerIdentityCommand(_x11, _x12) {
    return _ref6.apply(this, arguments);
  };
}()));
var se_GetFederationTokenCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_GetFederationTokenRequest(input, context)), {}, {
            Action: "GetFederationToken",
            Version: "2011-06-15"
          }));
          return _context7.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function se_GetFederationTokenCommand(_x13, _x14) {
    return _ref7.apply(this, arguments);
  };
}()));
var se_GetSessionTokenCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(input, context) {
    var headers, body;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          headers = SHARED_HEADERS;
          body = buildFormUrlencodedString(_objectSpread(_objectSpread({}, se_GetSessionTokenRequest(input, context)), {}, {
            Action: "GetSessionToken",
            Version: "2011-06-15"
          }));
          return _context8.abrupt("return", buildHttpRpcRequest(context, headers, "/", undefined, body));
        case 3:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return function se_GetSessionTokenCommand(_x15, _x16) {
    return _ref8.apply(this, arguments);
  };
}()));
var de_AssumeRoleCommand = /*#__PURE__*/function () {
  var _ref9 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee9(output, context) {
    var data, contents, response;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context9.next = 2;
            break;
          }
          return _context9.abrupt("return", de_AssumeRoleCommandError(output, context));
        case 2:
          _context9.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context9.sent;
          contents = {};
          contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);
          response = _objectSpread2({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context9.abrupt("return", response);
        case 9:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return function de_AssumeRoleCommand(_x17, _x18) {
    return _ref9.apply(this, arguments);
  };
}();
var de_AssumeRoleCommandError = /*#__PURE__*/function () {
  var _ref10 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee10(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.t0 = _objectSpread2;
          _context10.t1 = _objectSpread2({}, output);
          _context10.t2 = {};
          _context10.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context10.t3 = _context10.sent;
          _context10.t4 = {
            body: _context10.t3
          };
          parsedOutput = (0, _context10.t0)(_context10.t1, _context10.t2, _context10.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context10.t5 = errorCode;
          _context10.next = _context10.t5 === "ExpiredTokenException" ? 12 : _context10.t5 === "com.amazonaws.sts#ExpiredTokenException" ? 12 : _context10.t5 === "MalformedPolicyDocument" ? 15 : _context10.t5 === "com.amazonaws.sts#MalformedPolicyDocumentException" ? 15 : _context10.t5 === "PackedPolicyTooLarge" ? 18 : _context10.t5 === "com.amazonaws.sts#PackedPolicyTooLargeException" ? 18 : _context10.t5 === "RegionDisabledException" ? 21 : _context10.t5 === "com.amazonaws.sts#RegionDisabledException" ? 21 : 24;
          break;
        case 12:
          _context10.next = 14;
          return de_ExpiredTokenExceptionRes(parsedOutput, context);
        case 14:
          throw _context10.sent;
        case 15:
          _context10.next = 17;
          return de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
        case 17:
          throw _context10.sent;
        case 18:
          _context10.next = 20;
          return de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);
        case 20:
          throw _context10.sent;
        case 21:
          _context10.next = 23;
          return de_RegionDisabledExceptionRes(parsedOutput, context);
        case 23:
          throw _context10.sent;
        case 24:
          parsedBody = parsedOutput.body;
          return _context10.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 26:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return function de_AssumeRoleCommandError(_x19, _x20) {
    return _ref10.apply(this, arguments);
  };
}();
var de_AssumeRoleWithSAMLCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context11.next = 2;
            break;
          }
          return _context11.abrupt("return", de_AssumeRoleWithSAMLCommandError(output, context));
        case 2:
          _context11.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context11.sent;
          contents = {};
          contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context11.abrupt("return", response);
        case 9:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return function de_AssumeRoleWithSAMLCommand(_x21, _x22) {
    return _ref11.apply(this, arguments);
  };
}()));
var de_AssumeRoleWithSAMLCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          _context12.t0 = _objectSpread;
          _context12.t1 = _objectSpread({}, output);
          _context12.t2 = {};
          _context12.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context12.t3 = _context12.sent;
          _context12.t4 = {
            body: _context12.t3
          };
          parsedOutput = (0, _context12.t0)(_context12.t1, _context12.t2, _context12.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context12.t5 = errorCode;
          _context12.next = _context12.t5 === "ExpiredTokenException" ? 12 : _context12.t5 === "com.amazonaws.sts#ExpiredTokenException" ? 12 : _context12.t5 === "IDPRejectedClaim" ? 15 : _context12.t5 === "com.amazonaws.sts#IDPRejectedClaimException" ? 15 : _context12.t5 === "InvalidIdentityToken" ? 18 : _context12.t5 === "com.amazonaws.sts#InvalidIdentityTokenException" ? 18 : _context12.t5 === "MalformedPolicyDocument" ? 21 : _context12.t5 === "com.amazonaws.sts#MalformedPolicyDocumentException" ? 21 : _context12.t5 === "PackedPolicyTooLarge" ? 24 : _context12.t5 === "com.amazonaws.sts#PackedPolicyTooLargeException" ? 24 : _context12.t5 === "RegionDisabledException" ? 27 : _context12.t5 === "com.amazonaws.sts#RegionDisabledException" ? 27 : 30;
          break;
        case 12:
          _context12.next = 14;
          return de_ExpiredTokenExceptionRes(parsedOutput, context);
        case 14:
          throw _context12.sent;
        case 15:
          _context12.next = 17;
          return de_IDPRejectedClaimExceptionRes(parsedOutput, context);
        case 17:
          throw _context12.sent;
        case 18:
          _context12.next = 20;
          return de_InvalidIdentityTokenExceptionRes(parsedOutput, context);
        case 20:
          throw _context12.sent;
        case 21:
          _context12.next = 23;
          return de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
        case 23:
          throw _context12.sent;
        case 24:
          _context12.next = 26;
          return de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);
        case 26:
          throw _context12.sent;
        case 27:
          _context12.next = 29;
          return de_RegionDisabledExceptionRes(parsedOutput, context);
        case 29:
          throw _context12.sent;
        case 30:
          parsedBody = parsedOutput.body;
          return _context12.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 32:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return function de_AssumeRoleWithSAMLCommandError(_x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}()));
var de_AssumeRoleWithWebIdentityCommand = /*#__PURE__*/function () {
  var _ref13 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee13(output, context) {
    var data, contents, response;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context13.next = 2;
            break;
          }
          return _context13.abrupt("return", de_AssumeRoleWithWebIdentityCommandError(output, context));
        case 2:
          _context13.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context13.sent;
          contents = {};
          contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);
          response = _objectSpread2({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context13.abrupt("return", response);
        case 9:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function de_AssumeRoleWithWebIdentityCommand(_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}();
var de_AssumeRoleWithWebIdentityCommandError = /*#__PURE__*/function () {
  var _ref14 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee14(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          _context14.t0 = _objectSpread2;
          _context14.t1 = _objectSpread2({}, output);
          _context14.t2 = {};
          _context14.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context14.t3 = _context14.sent;
          _context14.t4 = {
            body: _context14.t3
          };
          parsedOutput = (0, _context14.t0)(_context14.t1, _context14.t2, _context14.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context14.t5 = errorCode;
          _context14.next = _context14.t5 === "ExpiredTokenException" ? 12 : _context14.t5 === "com.amazonaws.sts#ExpiredTokenException" ? 12 : _context14.t5 === "IDPCommunicationError" ? 15 : _context14.t5 === "com.amazonaws.sts#IDPCommunicationErrorException" ? 15 : _context14.t5 === "IDPRejectedClaim" ? 18 : _context14.t5 === "com.amazonaws.sts#IDPRejectedClaimException" ? 18 : _context14.t5 === "InvalidIdentityToken" ? 21 : _context14.t5 === "com.amazonaws.sts#InvalidIdentityTokenException" ? 21 : _context14.t5 === "MalformedPolicyDocument" ? 24 : _context14.t5 === "com.amazonaws.sts#MalformedPolicyDocumentException" ? 24 : _context14.t5 === "PackedPolicyTooLarge" ? 27 : _context14.t5 === "com.amazonaws.sts#PackedPolicyTooLargeException" ? 27 : _context14.t5 === "RegionDisabledException" ? 30 : _context14.t5 === "com.amazonaws.sts#RegionDisabledException" ? 30 : 33;
          break;
        case 12:
          _context14.next = 14;
          return de_ExpiredTokenExceptionRes(parsedOutput, context);
        case 14:
          throw _context14.sent;
        case 15:
          _context14.next = 17;
          return de_IDPCommunicationErrorExceptionRes(parsedOutput, context);
        case 17:
          throw _context14.sent;
        case 18:
          _context14.next = 20;
          return de_IDPRejectedClaimExceptionRes(parsedOutput, context);
        case 20:
          throw _context14.sent;
        case 21:
          _context14.next = 23;
          return de_InvalidIdentityTokenExceptionRes(parsedOutput, context);
        case 23:
          throw _context14.sent;
        case 24:
          _context14.next = 26;
          return de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
        case 26:
          throw _context14.sent;
        case 27:
          _context14.next = 29;
          return de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);
        case 29:
          throw _context14.sent;
        case 30:
          _context14.next = 32;
          return de_RegionDisabledExceptionRes(parsedOutput, context);
        case 32:
          throw _context14.sent;
        case 33:
          parsedBody = parsedOutput.body;
          return _context14.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 35:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return function de_AssumeRoleWithWebIdentityCommandError(_x27, _x28) {
    return _ref14.apply(this, arguments);
  };
}();
var de_DecodeAuthorizationMessageCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context15.next = 2;
            break;
          }
          return _context15.abrupt("return", de_DecodeAuthorizationMessageCommandError(output, context));
        case 2:
          _context15.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context15.sent;
          contents = {};
          contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context15.abrupt("return", response);
        case 9:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  }));
  return function de_DecodeAuthorizationMessageCommand(_x29, _x30) {
    return _ref15.apply(this, arguments);
  };
}()));
var de_DecodeAuthorizationMessageCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          _context16.t0 = _objectSpread;
          _context16.t1 = _objectSpread({}, output);
          _context16.t2 = {};
          _context16.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context16.t3 = _context16.sent;
          _context16.t4 = {
            body: _context16.t3
          };
          parsedOutput = (0, _context16.t0)(_context16.t1, _context16.t2, _context16.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context16.t5 = errorCode;
          _context16.next = _context16.t5 === "InvalidAuthorizationMessageException" ? 12 : _context16.t5 === "com.amazonaws.sts#InvalidAuthorizationMessageException" ? 12 : 15;
          break;
        case 12:
          _context16.next = 14;
          return de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);
        case 14:
          throw _context16.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context16.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return function de_DecodeAuthorizationMessageCommandError(_x31, _x32) {
    return _ref16.apply(this, arguments);
  };
}()));
var de_GetAccessKeyInfoCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context17.next = 2;
            break;
          }
          return _context17.abrupt("return", de_GetAccessKeyInfoCommandError(output, context));
        case 2:
          _context17.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context17.sent;
          contents = {};
          contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context17.abrupt("return", response);
        case 9:
        case "end":
          return _context17.stop();
      }
    }, _callee17);
  }));
  return function de_GetAccessKeyInfoCommand(_x33, _x34) {
    return _ref17.apply(this, arguments);
  };
}()));
var de_GetAccessKeyInfoCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) switch (_context18.prev = _context18.next) {
        case 0:
          _context18.t0 = _objectSpread;
          _context18.t1 = _objectSpread({}, output);
          _context18.t2 = {};
          _context18.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context18.t3 = _context18.sent;
          _context18.t4 = {
            body: _context18.t3
          };
          parsedOutput = (0, _context18.t0)(_context18.t1, _context18.t2, _context18.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context18.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context18.stop();
      }
    }, _callee18);
  }));
  return function de_GetAccessKeyInfoCommandError(_x35, _x36) {
    return _ref18.apply(this, arguments);
  };
}()));
var de_GetCallerIdentityCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee19$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context19.next = 2;
            break;
          }
          return _context19.abrupt("return", de_GetCallerIdentityCommandError(output, context));
        case 2:
          _context19.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context19.sent;
          contents = {};
          contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context19.abrupt("return", response);
        case 9:
        case "end":
          return _context19.stop();
      }
    }, _callee19);
  }));
  return function de_GetCallerIdentityCommand(_x37, _x38) {
    return _ref19.apply(this, arguments);
  };
}()));
var de_GetCallerIdentityCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          _context20.t0 = _objectSpread;
          _context20.t1 = _objectSpread({}, output);
          _context20.t2 = {};
          _context20.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context20.t3 = _context20.sent;
          _context20.t4 = {
            body: _context20.t3
          };
          parsedOutput = (0, _context20.t0)(_context20.t1, _context20.t2, _context20.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context20.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context20.stop();
      }
    }, _callee20);
  }));
  return function de_GetCallerIdentityCommandError(_x39, _x40) {
    return _ref20.apply(this, arguments);
  };
}()));
var de_GetFederationTokenCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee21$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context21.next = 2;
            break;
          }
          return _context21.abrupt("return", de_GetFederationTokenCommandError(output, context));
        case 2:
          _context21.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context21.sent;
          contents = {};
          contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context21.abrupt("return", response);
        case 9:
        case "end":
          return _context21.stop();
      }
    }, _callee21);
  }));
  return function de_GetFederationTokenCommand(_x41, _x42) {
    return _ref21.apply(this, arguments);
  };
}()));
var de_GetFederationTokenCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          _context22.t0 = _objectSpread;
          _context22.t1 = _objectSpread({}, output);
          _context22.t2 = {};
          _context22.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context22.t3 = _context22.sent;
          _context22.t4 = {
            body: _context22.t3
          };
          parsedOutput = (0, _context22.t0)(_context22.t1, _context22.t2, _context22.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context22.t5 = errorCode;
          _context22.next = _context22.t5 === "MalformedPolicyDocument" ? 12 : _context22.t5 === "com.amazonaws.sts#MalformedPolicyDocumentException" ? 12 : _context22.t5 === "PackedPolicyTooLarge" ? 15 : _context22.t5 === "com.amazonaws.sts#PackedPolicyTooLargeException" ? 15 : _context22.t5 === "RegionDisabledException" ? 18 : _context22.t5 === "com.amazonaws.sts#RegionDisabledException" ? 18 : 21;
          break;
        case 12:
          _context22.next = 14;
          return de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);
        case 14:
          throw _context22.sent;
        case 15:
          _context22.next = 17;
          return de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);
        case 17:
          throw _context22.sent;
        case 18:
          _context22.next = 20;
          return de_RegionDisabledExceptionRes(parsedOutput, context);
        case 20:
          throw _context22.sent;
        case 21:
          parsedBody = parsedOutput.body;
          return _context22.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 23:
        case "end":
          return _context22.stop();
      }
    }, _callee22);
  }));
  return function de_GetFederationTokenCommandError(_x43, _x44) {
    return _ref22.apply(this, arguments);
  };
}()));
var de_GetSessionTokenCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(output, context) {
    var data, contents, response;
    return _regeneratorRuntime().wrap(function _callee23$(_context23) {
      while (1) switch (_context23.prev = _context23.next) {
        case 0:
          if (!(output.statusCode >= 300)) {
            _context23.next = 2;
            break;
          }
          return _context23.abrupt("return", de_GetSessionTokenCommandError(output, context));
        case 2:
          _context23.next = 4;
          return parseBody(output.body, context);
        case 4:
          data = _context23.sent;
          contents = {};
          contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);
          response = _objectSpread({
            $metadata: Aws_query_deserializeMetadata(output)
          }, contents);
          return _context23.abrupt("return", response);
        case 9:
        case "end":
          return _context23.stop();
      }
    }, _callee23);
  }));
  return function de_GetSessionTokenCommand(_x45, _x46) {
    return _ref23.apply(this, arguments);
  };
}()));
var de_GetSessionTokenCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee24$(_context24) {
      while (1) switch (_context24.prev = _context24.next) {
        case 0:
          _context24.t0 = _objectSpread;
          _context24.t1 = _objectSpread({}, output);
          _context24.t2 = {};
          _context24.next = 5;
          return parseErrorBody(output.body, context);
        case 5:
          _context24.t3 = _context24.sent;
          _context24.t4 = {
            body: _context24.t3
          };
          parsedOutput = (0, _context24.t0)(_context24.t1, _context24.t2, _context24.t4);
          errorCode = loadQueryErrorCode(output, parsedOutput.body);
          _context24.t5 = errorCode;
          _context24.next = _context24.t5 === "RegionDisabledException" ? 12 : _context24.t5 === "com.amazonaws.sts#RegionDisabledException" ? 12 : 15;
          break;
        case 12:
          _context24.next = 14;
          return de_RegionDisabledExceptionRes(parsedOutput, context);
        case 14:
          throw _context24.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context24.abrupt("return", Aws_query_throwDefaultError({
            output: output,
            parsedBody: parsedBody.Error,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context24.stop();
      }
    }, _callee24);
  }));
  return function de_GetSessionTokenCommandError(_x47, _x48) {
    return _ref24.apply(this, arguments);
  };
}()));
var de_ExpiredTokenExceptionRes = /*#__PURE__*/function () {
  var _ref25 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee25(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee25$(_context25) {
      while (1) switch (_context25.prev = _context25.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_ExpiredTokenException(body.Error, context);
          exception = new ExpiredTokenException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context25.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context25.stop();
      }
    }, _callee25);
  }));
  return function de_ExpiredTokenExceptionRes(_x49, _x50) {
    return _ref25.apply(this, arguments);
  };
}();
var de_IDPCommunicationErrorExceptionRes = /*#__PURE__*/function () {
  var _ref26 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee26(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee26$(_context26) {
      while (1) switch (_context26.prev = _context26.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_IDPCommunicationErrorException(body.Error, context);
          exception = new IDPCommunicationErrorException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context26.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context26.stop();
      }
    }, _callee26);
  }));
  return function de_IDPCommunicationErrorExceptionRes(_x51, _x52) {
    return _ref26.apply(this, arguments);
  };
}();
var de_IDPRejectedClaimExceptionRes = /*#__PURE__*/function () {
  var _ref27 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee27(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee27$(_context27) {
      while (1) switch (_context27.prev = _context27.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_IDPRejectedClaimException(body.Error, context);
          exception = new IDPRejectedClaimException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context27.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context27.stop();
      }
    }, _callee27);
  }));
  return function de_IDPRejectedClaimExceptionRes(_x53, _x54) {
    return _ref27.apply(this, arguments);
  };
}();
var de_InvalidAuthorizationMessageExceptionRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(parsedOutput, context) {
    var body, deserialized, exception;
    return _regeneratorRuntime().wrap(function _callee28$(_context28) {
      while (1) switch (_context28.prev = _context28.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_InvalidAuthorizationMessageException(body.Error, context);
          exception = new InvalidAuthorizationMessageException(_objectSpread({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context28.abrupt("return", __decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context28.stop();
      }
    }, _callee28);
  }));
  return function de_InvalidAuthorizationMessageExceptionRes(_x55, _x56) {
    return _ref28.apply(this, arguments);
  };
}()));
var de_InvalidIdentityTokenExceptionRes = /*#__PURE__*/function () {
  var _ref29 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee29(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee29$(_context29) {
      while (1) switch (_context29.prev = _context29.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_InvalidIdentityTokenException(body.Error, context);
          exception = new InvalidIdentityTokenException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context29.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context29.stop();
      }
    }, _callee29);
  }));
  return function de_InvalidIdentityTokenExceptionRes(_x57, _x58) {
    return _ref29.apply(this, arguments);
  };
}();
var de_MalformedPolicyDocumentExceptionRes = /*#__PURE__*/function () {
  var _ref30 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee30(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee30$(_context30) {
      while (1) switch (_context30.prev = _context30.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_MalformedPolicyDocumentException(body.Error, context);
          exception = new MalformedPolicyDocumentException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context30.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context30.stop();
      }
    }, _callee30);
  }));
  return function de_MalformedPolicyDocumentExceptionRes(_x59, _x60) {
    return _ref30.apply(this, arguments);
  };
}();
var de_PackedPolicyTooLargeExceptionRes = /*#__PURE__*/function () {
  var _ref31 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee31(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee31$(_context31) {
      while (1) switch (_context31.prev = _context31.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_PackedPolicyTooLargeException(body.Error, context);
          exception = new PackedPolicyTooLargeException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context31.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context31.stop();
      }
    }, _callee31);
  }));
  return function de_PackedPolicyTooLargeExceptionRes(_x61, _x62) {
    return _ref31.apply(this, arguments);
  };
}();
var de_RegionDisabledExceptionRes = /*#__PURE__*/function () {
  var _ref32 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee32(parsedOutput, context) {
    var body, deserialized, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee32$(_context32) {
      while (1) switch (_context32.prev = _context32.next) {
        case 0:
          body = parsedOutput.body;
          deserialized = de_RegionDisabledException(body.Error, context);
          exception = new RegionDisabledException(_objectSpread2({
            $metadata: Aws_query_deserializeMetadata(parsedOutput)
          }, deserialized));
          return _context32.abrupt("return", decorateServiceException(exception, body));
        case 4:
        case "end":
          return _context32.stop();
      }
    }, _callee32);
  }));
  return function de_RegionDisabledExceptionRes(_x63, _x64) {
    return _ref32.apply(this, arguments);
  };
}();
var se_AssumeRoleRequest = function se_AssumeRoleRequest(input, context) {
  var entries = {};
  if (input.RoleArn != null) {
    entries["RoleArn"] = input.RoleArn;
  }
  if (input.RoleSessionName != null) {
    entries["RoleSessionName"] = input.RoleSessionName;
  }
  if (input.PolicyArns != null) {
    var _input$PolicyArns;
    var memberEntries = se_policyDescriptorListType(input.PolicyArns, context);
    if (((_input$PolicyArns = input.PolicyArns) === null || _input$PolicyArns === void 0 ? void 0 : _input$PolicyArns.length) === 0) {
      entries.PolicyArns = [];
    }
    Object.entries(memberEntries).forEach(function (_ref33) {
      var _ref34 = slicedToArray_slicedToArray(_ref33, 2),
        key = _ref34[0],
        value = _ref34[1];
      var loc = "PolicyArns.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.Policy != null) {
    entries["Policy"] = input.Policy;
  }
  if (input.DurationSeconds != null) {
    entries["DurationSeconds"] = input.DurationSeconds;
  }
  if (input.Tags != null) {
    var _input$Tags;
    var _memberEntries = se_tagListType(input.Tags, context);
    if (((_input$Tags = input.Tags) === null || _input$Tags === void 0 ? void 0 : _input$Tags.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(_memberEntries).forEach(function (_ref35) {
      var _ref36 = slicedToArray_slicedToArray(_ref35, 2),
        key = _ref36[0],
        value = _ref36[1];
      var loc = "Tags.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.TransitiveTagKeys != null) {
    var _input$TransitiveTagK;
    var _memberEntries2 = se_tagKeyListType(input.TransitiveTagKeys, context);
    if (((_input$TransitiveTagK = input.TransitiveTagKeys) === null || _input$TransitiveTagK === void 0 ? void 0 : _input$TransitiveTagK.length) === 0) {
      entries.TransitiveTagKeys = [];
    }
    Object.entries(_memberEntries2).forEach(function (_ref37) {
      var _ref38 = slicedToArray_slicedToArray(_ref37, 2),
        key = _ref38[0],
        value = _ref38[1];
      var loc = "TransitiveTagKeys.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.ExternalId != null) {
    entries["ExternalId"] = input.ExternalId;
  }
  if (input.SerialNumber != null) {
    entries["SerialNumber"] = input.SerialNumber;
  }
  if (input.TokenCode != null) {
    entries["TokenCode"] = input.TokenCode;
  }
  if (input.SourceIdentity != null) {
    entries["SourceIdentity"] = input.SourceIdentity;
  }
  if (input.ProvidedContexts != null) {
    var _input$ProvidedContex;
    var _memberEntries3 = se_ProvidedContextsListType(input.ProvidedContexts, context);
    if (((_input$ProvidedContex = input.ProvidedContexts) === null || _input$ProvidedContex === void 0 ? void 0 : _input$ProvidedContex.length) === 0) {
      entries.ProvidedContexts = [];
    }
    Object.entries(_memberEntries3).forEach(function (_ref39) {
      var _ref40 = slicedToArray_slicedToArray(_ref39, 2),
        key = _ref40[0],
        value = _ref40[1];
      var loc = "ProvidedContexts.".concat(key);
      entries[loc] = value;
    });
  }
  return entries;
};
var se_AssumeRoleWithSAMLRequest = function se_AssumeRoleWithSAMLRequest(input, context) {
  var entries = {};
  if (input.RoleArn != null) {
    entries["RoleArn"] = input.RoleArn;
  }
  if (input.PrincipalArn != null) {
    entries["PrincipalArn"] = input.PrincipalArn;
  }
  if (input.SAMLAssertion != null) {
    entries["SAMLAssertion"] = input.SAMLAssertion;
  }
  if (input.PolicyArns != null) {
    var _input$PolicyArns2;
    var memberEntries = se_policyDescriptorListType(input.PolicyArns, context);
    if (((_input$PolicyArns2 = input.PolicyArns) === null || _input$PolicyArns2 === void 0 ? void 0 : _input$PolicyArns2.length) === 0) {
      entries.PolicyArns = [];
    }
    Object.entries(memberEntries).forEach(function (_ref41) {
      var _ref42 = _slicedToArray(_ref41, 2),
        key = _ref42[0],
        value = _ref42[1];
      var loc = "PolicyArns.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.Policy != null) {
    entries["Policy"] = input.Policy;
  }
  if (input.DurationSeconds != null) {
    entries["DurationSeconds"] = input.DurationSeconds;
  }
  return entries;
};
var se_AssumeRoleWithWebIdentityRequest = function se_AssumeRoleWithWebIdentityRequest(input, context) {
  var entries = {};
  if (input.RoleArn != null) {
    entries["RoleArn"] = input.RoleArn;
  }
  if (input.RoleSessionName != null) {
    entries["RoleSessionName"] = input.RoleSessionName;
  }
  if (input.WebIdentityToken != null) {
    entries["WebIdentityToken"] = input.WebIdentityToken;
  }
  if (input.ProviderId != null) {
    entries["ProviderId"] = input.ProviderId;
  }
  if (input.PolicyArns != null) {
    var _input$PolicyArns3;
    var memberEntries = se_policyDescriptorListType(input.PolicyArns, context);
    if (((_input$PolicyArns3 = input.PolicyArns) === null || _input$PolicyArns3 === void 0 ? void 0 : _input$PolicyArns3.length) === 0) {
      entries.PolicyArns = [];
    }
    Object.entries(memberEntries).forEach(function (_ref43) {
      var _ref44 = slicedToArray_slicedToArray(_ref43, 2),
        key = _ref44[0],
        value = _ref44[1];
      var loc = "PolicyArns.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.Policy != null) {
    entries["Policy"] = input.Policy;
  }
  if (input.DurationSeconds != null) {
    entries["DurationSeconds"] = input.DurationSeconds;
  }
  return entries;
};
var se_DecodeAuthorizationMessageRequest = function se_DecodeAuthorizationMessageRequest(input, context) {
  var entries = {};
  if (input.EncodedMessage != null) {
    entries["EncodedMessage"] = input.EncodedMessage;
  }
  return entries;
};
var se_GetAccessKeyInfoRequest = function se_GetAccessKeyInfoRequest(input, context) {
  var entries = {};
  if (input.AccessKeyId != null) {
    entries["AccessKeyId"] = input.AccessKeyId;
  }
  return entries;
};
var se_GetCallerIdentityRequest = function se_GetCallerIdentityRequest(input, context) {
  var entries = {};
  return entries;
};
var se_GetFederationTokenRequest = function se_GetFederationTokenRequest(input, context) {
  var entries = {};
  if (input.Name != null) {
    entries["Name"] = input.Name;
  }
  if (input.Policy != null) {
    entries["Policy"] = input.Policy;
  }
  if (input.PolicyArns != null) {
    var _input$PolicyArns4;
    var memberEntries = se_policyDescriptorListType(input.PolicyArns, context);
    if (((_input$PolicyArns4 = input.PolicyArns) === null || _input$PolicyArns4 === void 0 ? void 0 : _input$PolicyArns4.length) === 0) {
      entries.PolicyArns = [];
    }
    Object.entries(memberEntries).forEach(function (_ref45) {
      var _ref46 = _slicedToArray(_ref45, 2),
        key = _ref46[0],
        value = _ref46[1];
      var loc = "PolicyArns.".concat(key);
      entries[loc] = value;
    });
  }
  if (input.DurationSeconds != null) {
    entries["DurationSeconds"] = input.DurationSeconds;
  }
  if (input.Tags != null) {
    var _input$Tags2;
    var _memberEntries4 = se_tagListType(input.Tags, context);
    if (((_input$Tags2 = input.Tags) === null || _input$Tags2 === void 0 ? void 0 : _input$Tags2.length) === 0) {
      entries.Tags = [];
    }
    Object.entries(_memberEntries4).forEach(function (_ref47) {
      var _ref48 = _slicedToArray(_ref47, 2),
        key = _ref48[0],
        value = _ref48[1];
      var loc = "Tags.".concat(key);
      entries[loc] = value;
    });
  }
  return entries;
};
var se_GetSessionTokenRequest = function se_GetSessionTokenRequest(input, context) {
  var entries = {};
  if (input.DurationSeconds != null) {
    entries["DurationSeconds"] = input.DurationSeconds;
  }
  if (input.SerialNumber != null) {
    entries["SerialNumber"] = input.SerialNumber;
  }
  if (input.TokenCode != null) {
    entries["TokenCode"] = input.TokenCode;
  }
  return entries;
};
var se_policyDescriptorListType = function se_policyDescriptorListType(input, context) {
  var entries = {};
  var counter = 1;
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(input),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var entry = _step.value;
      if (entry === null) {
        continue;
      }
      var memberEntries = se_PolicyDescriptorType(entry, context);
      Object.entries(memberEntries).forEach(function (_ref49) {
        var _ref50 = slicedToArray_slicedToArray(_ref49, 2),
          key = _ref50[0],
          value = _ref50[1];
        entries["member.".concat(counter, ".").concat(key)] = value;
      });
      counter++;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return entries;
};
var se_PolicyDescriptorType = function se_PolicyDescriptorType(input, context) {
  var entries = {};
  if (input.arn != null) {
    entries["arn"] = input.arn;
  }
  return entries;
};
var se_ProvidedContext = function se_ProvidedContext(input, context) {
  var entries = {};
  if (input.ProviderArn != null) {
    entries["ProviderArn"] = input.ProviderArn;
  }
  if (input.ContextAssertion != null) {
    entries["ContextAssertion"] = input.ContextAssertion;
  }
  return entries;
};
var se_ProvidedContextsListType = function se_ProvidedContextsListType(input, context) {
  var entries = {};
  var counter = 1;
  var _iterator2 = createForOfIteratorHelper_createForOfIteratorHelper(input),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var entry = _step2.value;
      if (entry === null) {
        continue;
      }
      var memberEntries = se_ProvidedContext(entry, context);
      Object.entries(memberEntries).forEach(function (_ref51) {
        var _ref52 = slicedToArray_slicedToArray(_ref51, 2),
          key = _ref52[0],
          value = _ref52[1];
        entries["member.".concat(counter, ".").concat(key)] = value;
      });
      counter++;
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return entries;
};
var se_Tag = function se_Tag(input, context) {
  var entries = {};
  if (input.Key != null) {
    entries["Key"] = input.Key;
  }
  if (input.Value != null) {
    entries["Value"] = input.Value;
  }
  return entries;
};
var se_tagKeyListType = function se_tagKeyListType(input, context) {
  var entries = {};
  var counter = 1;
  var _iterator3 = createForOfIteratorHelper_createForOfIteratorHelper(input),
    _step3;
  try {
    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
      var entry = _step3.value;
      if (entry === null) {
        continue;
      }
      entries["member.".concat(counter)] = entry;
      counter++;
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  return entries;
};
var se_tagListType = function se_tagListType(input, context) {
  var entries = {};
  var counter = 1;
  var _iterator4 = createForOfIteratorHelper_createForOfIteratorHelper(input),
    _step4;
  try {
    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
      var entry = _step4.value;
      if (entry === null) {
        continue;
      }
      var memberEntries = se_Tag(entry, context);
      Object.entries(memberEntries).forEach(function (_ref53) {
        var _ref54 = slicedToArray_slicedToArray(_ref53, 2),
          key = _ref54[0],
          value = _ref54[1];
        entries["member.".concat(counter, ".").concat(key)] = value;
      });
      counter++;
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  return entries;
};
var de_AssumedRoleUser = function de_AssumedRoleUser(output, context) {
  var contents = {};
  if (output["AssumedRoleId"] !== undefined) {
    contents.AssumedRoleId = expectString(output["AssumedRoleId"]);
  }
  if (output["Arn"] !== undefined) {
    contents.Arn = expectString(output["Arn"]);
  }
  return contents;
};
var de_AssumeRoleResponse = function de_AssumeRoleResponse(output, context) {
  var contents = {};
  if (output["Credentials"] !== undefined) {
    contents.Credentials = de_Credentials(output["Credentials"], context);
  }
  if (output["AssumedRoleUser"] !== undefined) {
    contents.AssumedRoleUser = de_AssumedRoleUser(output["AssumedRoleUser"], context);
  }
  if (output["PackedPolicySize"] !== undefined) {
    contents.PackedPolicySize = strictParseInt32(output["PackedPolicySize"]);
  }
  if (output["SourceIdentity"] !== undefined) {
    contents.SourceIdentity = expectString(output["SourceIdentity"]);
  }
  return contents;
};
var de_AssumeRoleWithSAMLResponse = function de_AssumeRoleWithSAMLResponse(output, context) {
  var contents = {};
  if (output["Credentials"] !== undefined) {
    contents.Credentials = de_Credentials(output["Credentials"], context);
  }
  if (output["AssumedRoleUser"] !== undefined) {
    contents.AssumedRoleUser = de_AssumedRoleUser(output["AssumedRoleUser"], context);
  }
  if (output["PackedPolicySize"] !== undefined) {
    contents.PackedPolicySize = __strictParseInt32(output["PackedPolicySize"]);
  }
  if (output["Subject"] !== undefined) {
    contents.Subject = __expectString(output["Subject"]);
  }
  if (output["SubjectType"] !== undefined) {
    contents.SubjectType = __expectString(output["SubjectType"]);
  }
  if (output["Issuer"] !== undefined) {
    contents.Issuer = __expectString(output["Issuer"]);
  }
  if (output["Audience"] !== undefined) {
    contents.Audience = __expectString(output["Audience"]);
  }
  if (output["NameQualifier"] !== undefined) {
    contents.NameQualifier = __expectString(output["NameQualifier"]);
  }
  if (output["SourceIdentity"] !== undefined) {
    contents.SourceIdentity = __expectString(output["SourceIdentity"]);
  }
  return contents;
};
var de_AssumeRoleWithWebIdentityResponse = function de_AssumeRoleWithWebIdentityResponse(output, context) {
  var contents = {};
  if (output["Credentials"] !== undefined) {
    contents.Credentials = de_Credentials(output["Credentials"], context);
  }
  if (output["SubjectFromWebIdentityToken"] !== undefined) {
    contents.SubjectFromWebIdentityToken = expectString(output["SubjectFromWebIdentityToken"]);
  }
  if (output["AssumedRoleUser"] !== undefined) {
    contents.AssumedRoleUser = de_AssumedRoleUser(output["AssumedRoleUser"], context);
  }
  if (output["PackedPolicySize"] !== undefined) {
    contents.PackedPolicySize = strictParseInt32(output["PackedPolicySize"]);
  }
  if (output["Provider"] !== undefined) {
    contents.Provider = expectString(output["Provider"]);
  }
  if (output["Audience"] !== undefined) {
    contents.Audience = expectString(output["Audience"]);
  }
  if (output["SourceIdentity"] !== undefined) {
    contents.SourceIdentity = expectString(output["SourceIdentity"]);
  }
  return contents;
};
var de_Credentials = function de_Credentials(output, context) {
  var contents = {};
  if (output["AccessKeyId"] !== undefined) {
    contents.AccessKeyId = expectString(output["AccessKeyId"]);
  }
  if (output["SecretAccessKey"] !== undefined) {
    contents.SecretAccessKey = expectString(output["SecretAccessKey"]);
  }
  if (output["SessionToken"] !== undefined) {
    contents.SessionToken = expectString(output["SessionToken"]);
  }
  if (output["Expiration"] !== undefined) {
    contents.Expiration = expectNonNull(parseRfc3339DateTimeWithOffset(output["Expiration"]));
  }
  return contents;
};
var de_DecodeAuthorizationMessageResponse = function de_DecodeAuthorizationMessageResponse(output, context) {
  var contents = {};
  if (output["DecodedMessage"] !== undefined) {
    contents.DecodedMessage = __expectString(output["DecodedMessage"]);
  }
  return contents;
};
var de_ExpiredTokenException = function de_ExpiredTokenException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_FederatedUser = function de_FederatedUser(output, context) {
  var contents = {};
  if (output["FederatedUserId"] !== undefined) {
    contents.FederatedUserId = __expectString(output["FederatedUserId"]);
  }
  if (output["Arn"] !== undefined) {
    contents.Arn = __expectString(output["Arn"]);
  }
  return contents;
};
var de_GetAccessKeyInfoResponse = function de_GetAccessKeyInfoResponse(output, context) {
  var contents = {};
  if (output["Account"] !== undefined) {
    contents.Account = __expectString(output["Account"]);
  }
  return contents;
};
var de_GetCallerIdentityResponse = function de_GetCallerIdentityResponse(output, context) {
  var contents = {};
  if (output["UserId"] !== undefined) {
    contents.UserId = __expectString(output["UserId"]);
  }
  if (output["Account"] !== undefined) {
    contents.Account = __expectString(output["Account"]);
  }
  if (output["Arn"] !== undefined) {
    contents.Arn = __expectString(output["Arn"]);
  }
  return contents;
};
var de_GetFederationTokenResponse = function de_GetFederationTokenResponse(output, context) {
  var contents = {};
  if (output["Credentials"] !== undefined) {
    contents.Credentials = de_Credentials(output["Credentials"], context);
  }
  if (output["FederatedUser"] !== undefined) {
    contents.FederatedUser = de_FederatedUser(output["FederatedUser"], context);
  }
  if (output["PackedPolicySize"] !== undefined) {
    contents.PackedPolicySize = __strictParseInt32(output["PackedPolicySize"]);
  }
  return contents;
};
var de_GetSessionTokenResponse = function de_GetSessionTokenResponse(output, context) {
  var contents = {};
  if (output["Credentials"] !== undefined) {
    contents.Credentials = de_Credentials(output["Credentials"], context);
  }
  return contents;
};
var de_IDPCommunicationErrorException = function de_IDPCommunicationErrorException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_IDPRejectedClaimException = function de_IDPRejectedClaimException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_InvalidAuthorizationMessageException = function de_InvalidAuthorizationMessageException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = __expectString(output["message"]);
  }
  return contents;
};
var de_InvalidIdentityTokenException = function de_InvalidIdentityTokenException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_MalformedPolicyDocumentException = function de_MalformedPolicyDocumentException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_PackedPolicyTooLargeException = function de_PackedPolicyTooLargeException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var de_RegionDisabledException = function de_RegionDisabledException(output, context) {
  var contents = {};
  if (output["message"] !== undefined) {
    contents.message = expectString(output["message"]);
  }
  return contents;
};
var Aws_query_deserializeMetadata = function deserializeMetadata(output) {
  var _ref55, _output$headers$xAmz;
  return {
    httpStatusCode: output.statusCode,
    requestId: (_ref55 = (_output$headers$xAmz = output.headers["x-amzn-requestid"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers["x-amzn-request-id"]) !== null && _ref55 !== void 0 ? _ref55 : output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
};
var Aws_query_collectBodyString = function collectBodyString(streamBody, context) {
  return collect_stream_body_collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
var Aws_query_throwDefaultError = withBaseException(STSServiceException);
var buildHttpRpcRequest = /*#__PURE__*/function () {
  var _ref56 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee33(context, headers, path, resolvedHostname, body) {
    var _yield$context$endpoi, hostname, _yield$context$endpoi2, protocol, port, basePath, contents;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee33$(_context33) {
      while (1) switch (_context33.prev = _context33.next) {
        case 0:
          _context33.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi = _context33.sent;
          hostname = _yield$context$endpoi.hostname;
          _yield$context$endpoi2 = _yield$context$endpoi.protocol;
          protocol = _yield$context$endpoi2 === void 0 ? "https" : _yield$context$endpoi2;
          port = _yield$context$endpoi.port;
          basePath = _yield$context$endpoi.path;
          contents = {
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
            headers: headers
          };
          if (resolvedHostname !== undefined) {
            contents.hostname = resolvedHostname;
          }
          if (body !== undefined) {
            contents.body = body;
          }
          return _context33.abrupt("return", new httpRequest_HttpRequest(contents));
        case 12:
        case "end":
          return _context33.stop();
      }
    }, _callee33);
  }));
  return function buildHttpRpcRequest(_x65, _x66, _x67, _x68, _x69) {
    return _ref56.apply(this, arguments);
  };
}();
var SHARED_HEADERS = {
  "content-type": "application/x-www-form-urlencoded"
};
var parseBody = function parseBody(streamBody, context) {
  return Aws_query_collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      var parser = new fxp.XMLParser({
        attributeNamePrefix: "",
        htmlEntities: true,
        ignoreAttributes: false,
        ignoreDeclaration: true,
        parseTagValue: false,
        trimValues: false,
        tagValueProcessor: function tagValueProcessor(_, val) {
          return val.trim() === "" && val.includes("\n") ? "" : undefined;
        }
      });
      parser.addEntity("#xD", "\r");
      parser.addEntity("#10", "\n");
      var parsedObj = parser.parse(encoded);
      var textNodeName = "#text";
      var key = Object.keys(parsedObj)[0];
      var parsedObjToReturn = parsedObj[key];
      if (parsedObjToReturn[textNodeName]) {
        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];
        delete parsedObjToReturn[textNodeName];
      }
      return getValueFromTextNode(parsedObjToReturn);
    }
    return {};
  });
};
var parseErrorBody = /*#__PURE__*/function () {
  var _ref57 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee34(errorBody, context) {
    var value, _value$Error$message;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee34$(_context34) {
      while (1) switch (_context34.prev = _context34.next) {
        case 0:
          _context34.next = 2;
          return parseBody(errorBody, context);
        case 2:
          value = _context34.sent;
          if (value.Error) {
            value.Error.message = (_value$Error$message = value.Error.message) !== null && _value$Error$message !== void 0 ? _value$Error$message : value.Error.Message;
          }
          return _context34.abrupt("return", value);
        case 5:
        case "end":
          return _context34.stop();
      }
    }, _callee34);
  }));
  return function parseErrorBody(_x70, _x71) {
    return _ref57.apply(this, arguments);
  };
}();
var buildFormUrlencodedString = function buildFormUrlencodedString(formEntries) {
  return Object.entries(formEntries).map(function (_ref58) {
    var _ref59 = slicedToArray_slicedToArray(_ref58, 2),
      key = _ref59[0],
      value = _ref59[1];
    return extendedEncodeURIComponent(key) + "=" + extendedEncodeURIComponent(value);
  }).join("&");
};
var loadQueryErrorCode = function loadQueryErrorCode(output, data) {
  var _data$Error;
  if (((_data$Error = data.Error) === null || _data$Error === void 0 ? void 0 : _data$Error.Code) !== undefined) {
    return data.Error.Code;
  }
  if (output.statusCode == 404) {
    return "NotFound";
  }
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js











var AssumeRoleCommand = /*#__PURE__*/function (_$Command) {
  function AssumeRoleCommand(input) {
    var _this;
    classCallCheck_classCallCheck(this, AssumeRoleCommand);
    _this = callSuper_callSuper(this, AssumeRoleCommand);
    _this.input = input;
    return _this;
  }
  inherits_inherits(AssumeRoleCommand, _$Command);
  return createClass_createClass(AssumeRoleCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleCommand.getEndpointParameterInstructions()));
      this.middlewareStack.use(getAwsAuthPlugin(configuration));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "STSClient";
      var commandName = "AssumeRoleCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: function inputFilterSensitiveLog(_) {
          return _;
        },
        outputFilterSensitiveLog: AssumeRoleResponseFilterSensitiveLog
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_AssumeRoleCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_AssumeRoleCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseGlobalEndpoint: {
          type: "builtInParams",
          name: "useGlobalEndpoint"
        },
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js










var AssumeRoleWithWebIdentityCommand = /*#__PURE__*/function (_$Command) {
  function AssumeRoleWithWebIdentityCommand(input) {
    var _this;
    classCallCheck_classCallCheck(this, AssumeRoleWithWebIdentityCommand);
    _this = callSuper_callSuper(this, AssumeRoleWithWebIdentityCommand);
    _this.input = input;
    return _this;
  }
  inherits_inherits(AssumeRoleWithWebIdentityCommand, _$Command);
  return createClass_createClass(AssumeRoleWithWebIdentityCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleWithWebIdentityCommand.getEndpointParameterInstructions()));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "STSClient";
      var commandName = "AssumeRoleWithWebIdentityCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: AssumeRoleWithWebIdentityRequestFilterSensitiveLog,
        outputFilterSensitiveLog: AssumeRoleWithWebIdentityResponseFilterSensitiveLog
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_AssumeRoleWithWebIdentityCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_AssumeRoleWithWebIdentityCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseGlobalEndpoint: {
          type: "builtInParams",
          name: "useGlobalEndpoint"
        },
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js





var ASSUME_ROLE_DEFAULT_REGION = "us-east-1";
var decorateDefaultRegion = function decorateDefaultRegion(region) {
  if (typeof region !== "function") {
    return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;
  }
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return region();
        case 3:
          return _context.abrupt("return", _context.sent);
        case 6:
          _context.prev = 6;
          _context.t0 = _context["catch"](0);
          return _context.abrupt("return", ASSUME_ROLE_DEFAULT_REGION);
        case 9:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 6]]);
  }));
};
var defaultStsRoleAssumers_getDefaultRoleAssumer = function getDefaultRoleAssumer(stsOptions, stsClientCtor) {
  var stsClient;
  var closureSourceCreds;
  return /*#__PURE__*/function () {
    var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(sourceCreds, params) {
      var logger, region, requestHandler, _yield$stsClient$send, Credentials;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            closureSourceCreds = sourceCreds;
            if (!stsClient) {
              logger = stsOptions.logger, region = stsOptions.region, requestHandler = stsOptions.requestHandler;
              stsClient = new stsClientCtor(_objectSpread2({
                logger: logger,
                credentialDefaultProvider: function credentialDefaultProvider() {
                  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
                    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
                      while (1) switch (_context2.prev = _context2.next) {
                        case 0:
                          return _context2.abrupt("return", closureSourceCreds);
                        case 1:
                        case "end":
                          return _context2.stop();
                      }
                    }, _callee2);
                  }));
                },
                region: decorateDefaultRegion(region || stsOptions.region)
              }, requestHandler ? {
                requestHandler: requestHandler
              } : {}));
            }
            _context3.next = 4;
            return stsClient.send(new AssumeRoleCommand(params));
          case 4:
            _yield$stsClient$send = _context3.sent;
            Credentials = _yield$stsClient$send.Credentials;
            if (!(!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey)) {
              _context3.next = 8;
              break;
            }
            throw new Error("Invalid response from STS.assumeRole call with role ".concat(params.RoleArn));
          case 8:
            return _context3.abrupt("return", {
              accessKeyId: Credentials.AccessKeyId,
              secretAccessKey: Credentials.SecretAccessKey,
              sessionToken: Credentials.SessionToken,
              expiration: Credentials.Expiration
            });
          case 9:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }();
};
var defaultStsRoleAssumers_getDefaultRoleAssumerWithWebIdentity = function getDefaultRoleAssumerWithWebIdentity(stsOptions, stsClientCtor) {
  var stsClient;
  return /*#__PURE__*/function () {
    var _ref4 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4(params) {
      var logger, region, requestHandler, _yield$stsClient$send2, Credentials;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            if (!stsClient) {
              logger = stsOptions.logger, region = stsOptions.region, requestHandler = stsOptions.requestHandler;
              stsClient = new stsClientCtor(_objectSpread2({
                logger: logger,
                region: decorateDefaultRegion(region || stsOptions.region)
              }, requestHandler ? {
                requestHandler: requestHandler
              } : {}));
            }
            _context4.next = 3;
            return stsClient.send(new AssumeRoleWithWebIdentityCommand(params));
          case 3:
            _yield$stsClient$send2 = _context4.sent;
            Credentials = _yield$stsClient$send2.Credentials;
            if (!(!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey)) {
              _context4.next = 7;
              break;
            }
            throw new Error("Invalid response from STS.assumeRoleWithWebIdentity call with role ".concat(params.RoleArn));
          case 7:
            return _context4.abrupt("return", {
              accessKeyId: Credentials.AccessKeyId,
              secretAccessKey: Credentials.SecretAccessKey,
              sessionToken: Credentials.SessionToken,
              expiration: Credentials.Expiration
            });
          case 8:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
    return function (_x3) {
      return _ref4.apply(this, arguments);
    };
  }();
};
var decorateDefaultCredentialProvider = function decorateDefaultCredentialProvider(provider) {
  return function (input) {
    return provider(_objectSpread2({
      roleAssumer: defaultStsRoleAssumers_getDefaultRoleAssumer(input, input.stsClientCtor),
      roleAssumerWithWebIdentity: defaultStsRoleAssumers_getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor)
    }, input));
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-sdk-sts@3.391.0/node_modules/@aws-sdk/middleware-sdk-sts/dist-es/index.js


var resolveStsAuthConfig = function resolveStsAuthConfig(input, _ref) {
  var stsClientCtor = _ref.stsClientCtor;
  return resolveAwsAuthConfig(_objectSpread2(_objectSpread2({}, input), {}, {
    stsClientCtor: stsClientCtor
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js

var EndpointParameters_resolveClientEndpointParameters = function resolveClientEndpointParameters(options) {
  var _options$useDualstack, _options$useFipsEndpo, _options$useGlobalEnd;
  return _objectSpread2(_objectSpread2({}, options), {}, {
    useDualstackEndpoint: (_options$useDualstack = options.useDualstackEndpoint) !== null && _options$useDualstack !== void 0 ? _options$useDualstack : false,
    useFipsEndpoint: (_options$useFipsEndpo = options.useFipsEndpoint) !== null && _options$useFipsEndpo !== void 0 ? _options$useFipsEndpo : false,
    useGlobalEndpoint: (_options$useGlobalEnd = options.useGlobalEndpoint) !== null && _options$useGlobalEnd !== void 0 ? _options$useGlobalEnd : false,
    defaultSigningName: "sts"
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/package.json
const client_sts_package_namespaceObject = {"rE":"3.395.0"};
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/ProviderError.js





var ProviderError = /*#__PURE__*/function (_Error) {
  function ProviderError(message) {
    var _this;
    var tryNextLink = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    classCallCheck_classCallCheck(this, ProviderError);
    _this = callSuper_callSuper(this, ProviderError, [message]);
    _this.tryNextLink = tryNextLink;
    _this.name = "ProviderError";
    Object.setPrototypeOf(_this, ProviderError.prototype);
    return _this;
  }
  inherits_inherits(ProviderError, _Error);
  return createClass_createClass(ProviderError, null, [{
    key: "from",
    value: function from(error) {
      var tryNextLink = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return Object.assign(new this(error.message, tryNextLink), error);
    }
  }]);
}( /*#__PURE__*/_wrapNativeSuper(Error));
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js





var CredentialsProviderError = /*#__PURE__*/function (_ProviderError) {
  function CredentialsProviderError(message) {
    var _this;
    var tryNextLink = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    classCallCheck_classCallCheck(this, CredentialsProviderError);
    _this = callSuper_callSuper(this, CredentialsProviderError, [message, tryNextLink]);
    _this.tryNextLink = tryNextLink;
    _this.name = "CredentialsProviderError";
    Object.setPrototypeOf(_this, CredentialsProviderError.prototype);
    return _this;
  }
  inherits_inherits(CredentialsProviderError, _ProviderError);
  return createClass_createClass(CredentialsProviderError);
}(ProviderError);
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-env@3.391.0/node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js




var ENV_KEY = "AWS_ACCESS_KEY_ID";
var ENV_SECRET = "AWS_SECRET_ACCESS_KEY";
var ENV_SESSION = "AWS_SESSION_TOKEN";
var ENV_EXPIRATION = "AWS_CREDENTIAL_EXPIRATION";
var fromEnv = function fromEnv() {
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var accessKeyId, secretAccessKey, sessionToken, expiry;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          accessKeyId = process.env[ENV_KEY];
          secretAccessKey = process.env[ENV_SECRET];
          sessionToken = process.env[ENV_SESSION];
          expiry = process.env[ENV_EXPIRATION];
          if (!(accessKeyId && secretAccessKey)) {
            _context.next = 6;
            break;
          }
          return _context.abrupt("return", _objectSpread2(_objectSpread2({
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey
          }, sessionToken && {
            sessionToken: sessionToken
          }), expiry && {
            expiration: new Date(expiry)
          }));
        case 6:
          throw new CredentialsProviderError("Unable to find environment variable credentials.");
        case 7:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
// EXTERNAL MODULE: external "os"
var external_os_ = __webpack_require__(857);
// EXTERNAL MODULE: external "path"
var external_path_ = __webpack_require__(6928);
var external_path_default = /*#__PURE__*/__webpack_require__.n(external_path_);
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getHomeDir.js


var getHomeDir = function getHomeDir() {
  var _process$env = process.env,
    HOME = _process$env.HOME,
    USERPROFILE = _process$env.USERPROFILE,
    HOMEPATH = _process$env.HOMEPATH,
    _process$env$HOMEDRIV = _process$env.HOMEDRIVE,
    HOMEDRIVE = _process$env$HOMEDRIV === void 0 ? "C:".concat(external_path_.sep) : _process$env$HOMEDRIV;
  if (HOME) return HOME;
  if (USERPROFILE) return USERPROFILE;
  if (HOMEPATH) return "".concat(HOMEDRIVE).concat(HOMEPATH);
  return (0,external_os_.homedir)();
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileName.js
var ENV_PROFILE = "AWS_PROFILE";
var DEFAULT_PROFILE = "default";
var getProfileName = function getProfileName(init) {
  return init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;
};
// EXTERNAL MODULE: external "crypto"
var external_crypto_ = __webpack_require__(6982);
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js



var getSSOTokenFilepath = function getSSOTokenFilepath(id) {
  var hasher = (0,external_crypto_.createHash)("sha1");
  var cacheName = hasher.update(id).digest("hex");
  return (0,external_path_.join)(getHomeDir(), ".aws", "sso", "cache", "".concat(cacheName, ".json"));
};
// EXTERNAL MODULE: external "fs"
var external_fs_ = __webpack_require__(9896);
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js




var readFile = external_fs_.promises.readFile;
var getSSOTokenFromFile = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(id) {
    var ssoTokenFilepath, ssoTokenText;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          ssoTokenFilepath = getSSOTokenFilepath(id);
          _context.next = 3;
          return readFile(ssoTokenFilepath, "utf8");
        case 3:
          ssoTokenText = _context.sent;
          return _context.abrupt("return", JSON.parse(ssoTokenText));
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getSSOTokenFromFile(_x) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getConfigFilepath.js


var ENV_CONFIG_PATH = "AWS_CONFIG_FILE";
var getConfigFilepath = function getConfigFilepath() {
  return process.env[ENV_CONFIG_PATH] || (0,external_path_.join)(getHomeDir(), ".aws", "config");
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getCredentialsFilepath.js


var ENV_CREDENTIALS_PATH = "AWS_SHARED_CREDENTIALS_FILE";
var getCredentialsFilepath = function getCredentialsFilepath() {
  return process.env[ENV_CREDENTIALS_PATH] || (0,external_path_.join)(getHomeDir(), ".aws", "credentials");
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getProfileData.js



var profileKeyRegex = /^profile\s(["'])?([^\1]+)\1$/;
var getProfileData = function getProfileData(data) {
  return Object.entries(data).filter(function (_ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 1),
      key = _ref2[0];
    return profileKeyRegex.test(key);
  }).reduce(function (acc, _ref3) {
    var _ref4 = slicedToArray_slicedToArray(_ref3, 2),
      key = _ref4[0],
      value = _ref4[1];
    return _objectSpread2(_objectSpread2({}, acc), {}, defineProperty_defineProperty({}, profileKeyRegex.exec(key)[2], value));
  }, _objectSpread2({}, data["default"] && {
    "default": data["default"]
  }));
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/parseIni.js

var profileNameBlockList = ["__proto__", "profile __proto__"];
var parseIni = function parseIni(iniData) {
  var map = {};
  var currentSection;
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(iniData.split(/\r?\n/)),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var line = _step.value;
      line = line.split(/(^|\s)[;#]/)[0].trim();
      var isSection = line[0] === "[" && line[line.length - 1] === "]";
      if (isSection) {
        currentSection = line.substring(1, line.length - 1);
        if (profileNameBlockList.includes(currentSection)) {
          throw new Error("Found invalid profile name \"".concat(currentSection, "\""));
        }
      } else if (currentSection) {
        var indexOfEqualsSign = line.indexOf("=");
        var start = 0;
        var end = line.length - 1;
        var isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;
        if (isAssignment) {
          var _ref = [line.substring(0, indexOfEqualsSign).trim(), line.substring(indexOfEqualsSign + 1).trim()],
            name = _ref[0],
            value = _ref[1];
          map[currentSection] = map[currentSection] || {};
          map[currentSection][name] = value;
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return map;
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/slurpFile.js

var slurpFile_readFile = external_fs_.promises.readFile;
var filePromisesHash = {};
var slurpFile = function slurpFile(path, options) {
  if (!filePromisesHash[path] || options !== null && options !== void 0 && options.ignoreCache) {
    filePromisesHash[path] = slurpFile_readFile(path, "utf8");
  }
  return filePromisesHash[path];
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js







var swallowError = function swallowError() {
  return {};
};
var loadSharedConfigFiles = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var init,
      _init$filepath,
      filepath,
      _init$configFilepath,
      configFilepath,
      parsedFiles,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          init = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
          _init$filepath = init.filepath, filepath = _init$filepath === void 0 ? getCredentialsFilepath() : _init$filepath, _init$configFilepath = init.configFilepath, configFilepath = _init$configFilepath === void 0 ? getConfigFilepath() : _init$configFilepath;
          _context.next = 4;
          return Promise.all([slurpFile(configFilepath, {
            ignoreCache: init.ignoreCache
          }).then(parseIni).then(getProfileData)["catch"](swallowError), slurpFile(filepath, {
            ignoreCache: init.ignoreCache
          }).then(parseIni)["catch"](swallowError)]);
        case 4:
          parsedFiles = _context.sent;
          return _context.abrupt("return", {
            configFile: parsedFiles[0],
            credentialsFile: parsedFiles[1]
          });
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function loadSharedConfigFiles() {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/getSsoSessionData.js



var ssoSessionKeyRegex = /^sso-session\s(["'])?([^\1]+)\1$/;
var getSsoSessionData = function getSsoSessionData(data) {
  return Object.entries(data).filter(function (_ref) {
    var _ref2 = slicedToArray_slicedToArray(_ref, 1),
      key = _ref2[0];
    return ssoSessionKeyRegex.test(key);
  }).reduce(function (acc, _ref3) {
    var _ref4 = slicedToArray_slicedToArray(_ref3, 2),
      key = _ref4[0],
      value = _ref4[1];
    return _objectSpread2(_objectSpread2({}, acc), {}, defineProperty_defineProperty({}, ssoSessionKeyRegex.exec(key)[2], value));
  }, {});
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/loadSsoSessionData.js






var loadSsoSessionData_swallowError = function swallowError() {
  return {};
};
var loadSsoSessionData = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var _init$configFilepath;
    var init,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          init = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
          return _context.abrupt("return", slurpFile((_init$configFilepath = init.configFilepath) !== null && _init$configFilepath !== void 0 ? _init$configFilepath : getConfigFilepath()).then(parseIni).then(getSsoSessionData)["catch"](loadSsoSessionData_swallowError));
        case 2:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function loadSsoSessionData() {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/mergeConfigFiles.js

var mergeConfigFiles = function mergeConfigFiles() {
  var merged = {};
  for (var _len = arguments.length, files = new Array(_len), _key = 0; _key < _len; _key++) {
    files[_key] = arguments[_key];
  }
  for (var _i = 0, _files = files; _i < _files.length; _i++) {
    var file = _files[_i];
    for (var _i2 = 0, _Object$entries = Object.entries(file); _i2 < _Object$entries.length; _i2++) {
      var _Object$entries$_i = slicedToArray_slicedToArray(_Object$entries[_i2], 2),
        key = _Object$entries$_i[0],
        values = _Object$entries$_i[1];
      if (merged[key] !== undefined) {
        Object.assign(merged[key], values);
      } else {
        merged[key] = values;
      }
    }
  }
  return merged;
};
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/parseKnownFiles.js




var parseKnownFiles = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(init) {
    var parsedFiles;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return loadSharedConfigFiles(init);
        case 2:
          parsedFiles = _context.sent;
          return _context.abrupt("return", mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile));
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function parseKnownFiles(_x) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+shared-ini-file-loader@2.0.3/node_modules/@smithy/shared-ini-file-loader/dist-es/index.js








;// external "url"
const external_url_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("url");
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/remoteProvider/httpRequest.js




function httpRequest(options) {
  return new Promise(function (resolve, reject) {
    var _options$hostname;
    var req = (0,external_http_.request)(_objectSpread2(_objectSpread2({
      method: "GET"
    }, options), {}, {
      hostname: (_options$hostname = options.hostname) === null || _options$hostname === void 0 ? void 0 : _options$hostname.replace(/^\[(.+)\]$/, "$1")
    }));
    req.on("error", function (err) {
      reject(Object.assign(new ProviderError("Unable to connect to instance metadata service"), err));
      req.destroy();
    });
    req.on("timeout", function () {
      reject(new ProviderError("TimeoutError from instance metadata service"));
      req.destroy();
    });
    req.on("response", function (res) {
      var _res$statusCode = res.statusCode,
        statusCode = _res$statusCode === void 0 ? 400 : _res$statusCode;
      if (statusCode < 200 || 300 <= statusCode) {
        reject(Object.assign(new ProviderError("Error response received from instance metadata service"), {
          statusCode: statusCode
        }));
        req.destroy();
      }
      var chunks = [];
      res.on("data", function (chunk) {
        chunks.push(chunk);
      });
      res.on("end", function () {
        resolve(external_buffer_namespaceObject.Buffer.concat(chunks));
        req.destroy();
      });
    });
    req.end();
  });
}
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/remoteProvider/ImdsCredentials.js
var isImdsCredentials = function isImdsCredentials(arg) {
  return Boolean(arg) && typeof arg === "object" && typeof arg.AccessKeyId === "string" && typeof arg.SecretAccessKey === "string" && typeof arg.Token === "string" && typeof arg.Expiration === "string";
};
var fromImdsCredentials = function fromImdsCredentials(creds) {
  return {
    accessKeyId: creds.AccessKeyId,
    secretAccessKey: creds.SecretAccessKey,
    sessionToken: creds.Token,
    expiration: new Date(creds.Expiration)
  };
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/remoteProvider/RemoteProviderInit.js
var DEFAULT_TIMEOUT = 1000;
var DEFAULT_MAX_RETRIES = 0;
var providerConfigFromInit = function providerConfigFromInit(_ref) {
  var _ref$maxRetries = _ref.maxRetries,
    maxRetries = _ref$maxRetries === void 0 ? DEFAULT_MAX_RETRIES : _ref$maxRetries,
    _ref$timeout = _ref.timeout,
    timeout = _ref$timeout === void 0 ? DEFAULT_TIMEOUT : _ref$timeout;
  return {
    maxRetries: maxRetries,
    timeout: timeout
  };
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/remoteProvider/retry.js
var retry = function retry(toRetry, maxRetries) {
  var promise = toRetry();
  for (var i = 0; i < maxRetries; i++) {
    promise = promise["catch"](toRetry);
  }
  return promise;
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/fromContainerMetadata.js









var ENV_CMDS_FULL_URI = "AWS_CONTAINER_CREDENTIALS_FULL_URI";
var ENV_CMDS_RELATIVE_URI = "AWS_CONTAINER_CREDENTIALS_RELATIVE_URI";
var ENV_CMDS_AUTH_TOKEN = "AWS_CONTAINER_AUTHORIZATION_TOKEN";
var fromContainerMetadata = function fromContainerMetadata() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _providerConfigFromIn = providerConfigFromInit(init),
    timeout = _providerConfigFromIn.timeout,
    maxRetries = _providerConfigFromIn.maxRetries;
  return function () {
    return retry( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      var requestOptions, credsResponse;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return getCmdsUri();
          case 2:
            requestOptions = _context.sent;
            _context.t0 = JSON;
            _context.next = 6;
            return requestFromEcsImds(timeout, requestOptions);
          case 6:
            _context.t1 = _context.sent;
            credsResponse = _context.t0.parse.call(_context.t0, _context.t1);
            if (isImdsCredentials(credsResponse)) {
              _context.next = 10;
              break;
            }
            throw new CredentialsProviderError("Invalid response received from instance metadata service.");
          case 10:
            return _context.abrupt("return", fromImdsCredentials(credsResponse));
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })), maxRetries);
  };
};
var requestFromEcsImds = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(timeout, options) {
    var buffer;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (process.env[ENV_CMDS_AUTH_TOKEN]) {
            options.headers = _objectSpread2(_objectSpread2({}, options.headers), {}, {
              Authorization: process.env[ENV_CMDS_AUTH_TOKEN]
            });
          }
          _context2.next = 3;
          return httpRequest(_objectSpread2(_objectSpread2({}, options), {}, {
            timeout: timeout
          }));
        case 3:
          buffer = _context2.sent;
          return _context2.abrupt("return", buffer.toString());
        case 5:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function requestFromEcsImds(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
var CMDS_IP = "169.254.170.2";
var GREENGRASS_HOSTS = {
  localhost: true,
  "127.0.0.1": true
};
var GREENGRASS_PROTOCOLS = {
  "http:": true,
  "https:": true
};
var getCmdsUri = /*#__PURE__*/function () {
  var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3() {
    var parsed;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          if (!process.env[ENV_CMDS_RELATIVE_URI]) {
            _context3.next = 2;
            break;
          }
          return _context3.abrupt("return", {
            hostname: CMDS_IP,
            path: process.env[ENV_CMDS_RELATIVE_URI]
          });
        case 2:
          if (!process.env[ENV_CMDS_FULL_URI]) {
            _context3.next = 9;
            break;
          }
          parsed = (0,external_url_namespaceObject.parse)(process.env[ENV_CMDS_FULL_URI]);
          if (!(!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS))) {
            _context3.next = 6;
            break;
          }
          throw new CredentialsProviderError("".concat(parsed.hostname, " is not a valid container metadata service hostname"), false);
        case 6:
          if (!(!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS))) {
            _context3.next = 8;
            break;
          }
          throw new CredentialsProviderError("".concat(parsed.protocol, " is not a valid container metadata service protocol"), false);
        case 8:
          return _context3.abrupt("return", _objectSpread2(_objectSpread2({}, parsed), {}, {
            port: parsed.port ? parseInt(parsed.port, 10) : undefined
          }));
        case 9:
          throw new CredentialsProviderError("The container metadata credential provider cannot be used unless" + " the ".concat(ENV_CMDS_RELATIVE_URI, " or ").concat(ENV_CMDS_FULL_URI, " environment") + " variable is set", false);
        case 10:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function getCmdsUri() {
    return _ref3.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/chain.js

function chain() {
  for (var _len = arguments.length, providers = new Array(_len), _key = 0; _key < _len; _key++) {
    providers[_key] = arguments[_key];
  }
  return function () {
    var promise = Promise.reject(new ProviderError("No providers in chain"));
    var _loop = function _loop() {
      var provider = _providers[_i];
      promise = promise["catch"](function (err) {
        if (err !== null && err !== void 0 && err.tryNextLink) {
          return provider();
        }
        throw err;
      });
    };
    for (var _i = 0, _providers = providers; _i < _providers.length; _i++) {
      _loop();
    }
    return promise;
  };
}
;// ./node_modules/.pnpm/@smithy+node-config-provider@2.0.3/node_modules/@smithy/node-config-provider/dist-es/fromEnv.js



var fromEnv_fromEnv = function fromEnv(envVarSelector) {
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var config;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          config = envVarSelector(process.env);
          if (!(config === undefined)) {
            _context.next = 4;
            break;
          }
          throw new Error();
        case 4:
          return _context.abrupt("return", config);
        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](0);
          throw new CredentialsProviderError(_context.t0.message || "Cannot load config from environment variables with getter: ".concat(envVarSelector));
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 7]]);
  }));
};
;// ./node_modules/.pnpm/@smithy+node-config-provider@2.0.3/node_modules/@smithy/node-config-provider/dist-es/fromSharedConfigFiles.js




var fromSharedConfigFiles_excluded = ["preferredFile"];


var fromSharedConfigFiles = function fromSharedConfigFiles(configSelector) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    _ref$preferredFile = _ref.preferredFile,
    preferredFile = _ref$preferredFile === void 0 ? "config" : _ref$preferredFile,
    init = objectWithoutProperties_objectWithoutProperties(_ref, fromSharedConfigFiles_excluded);
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var profile, _yield$loadSharedConf, configFile, credentialsFile, profileFromCredentials, profileFromConfig, mergedProfile, configValue;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          profile = getProfileName(init);
          _context.next = 3;
          return loadSharedConfigFiles(init);
        case 3:
          _yield$loadSharedConf = _context.sent;
          configFile = _yield$loadSharedConf.configFile;
          credentialsFile = _yield$loadSharedConf.credentialsFile;
          profileFromCredentials = credentialsFile[profile] || {};
          profileFromConfig = configFile[profile] || {};
          mergedProfile = preferredFile === "config" ? _objectSpread2(_objectSpread2({}, profileFromCredentials), profileFromConfig) : _objectSpread2(_objectSpread2({}, profileFromConfig), profileFromCredentials);
          _context.prev = 9;
          configValue = configSelector(mergedProfile);
          if (!(configValue === undefined)) {
            _context.next = 13;
            break;
          }
          throw new Error();
        case 13:
          return _context.abrupt("return", configValue);
        case 16:
          _context.prev = 16;
          _context.t0 = _context["catch"](9);
          throw new CredentialsProviderError(_context.t0.message || "Cannot load config for profile ".concat(profile, " in SDK configuration files with getter: ").concat(configSelector));
        case 19:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[9, 16]]);
  }));
};
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/fromStatic.js
var fromStatic_fromStatic = function fromStatic(staticValue) {
  return function () {
    return Promise.resolve(staticValue);
  };
};
;// ./node_modules/.pnpm/@smithy+node-config-provider@2.0.3/node_modules/@smithy/node-config-provider/dist-es/fromStatic.js



var isFunction = function isFunction(func) {
  return typeof func === "function";
};
var fromStatic = function fromStatic(defaultValue) {
  return isFunction(defaultValue) ? /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return defaultValue();
        case 2:
          return _context.abrupt("return", _context.sent);
        case 3:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })) : fromStatic_fromStatic(defaultValue);
};
;// ./node_modules/.pnpm/@smithy+node-config-provider@2.0.3/node_modules/@smithy/node-config-provider/dist-es/configLoader.js




var loadConfig = function loadConfig(_ref) {
  var environmentVariableSelector = _ref.environmentVariableSelector,
    configFileSelector = _ref.configFileSelector,
    defaultValue = _ref["default"];
  var configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return memoize(chain(fromEnv_fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));
};
;// ./node_modules/.pnpm/@smithy+node-config-provider@2.0.3/node_modules/@smithy/node-config-provider/dist-es/index.js

;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/config/Endpoint.js
var Endpoint;
(function (Endpoint) {
  Endpoint["IPv4"] = "http://169.254.169.254";
  Endpoint["IPv6"] = "http://[fd00:ec2::254]";
})(Endpoint || (Endpoint = {}));
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/config/EndpointConfigOptions.js
var ENV_ENDPOINT_NAME = "AWS_EC2_METADATA_SERVICE_ENDPOINT";
var CONFIG_ENDPOINT_NAME = "ec2_metadata_service_endpoint";
var ENDPOINT_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return env[ENV_ENDPOINT_NAME];
  },
  configFileSelector: function configFileSelector(profile) {
    return profile[CONFIG_ENDPOINT_NAME];
  },
  "default": undefined
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/config/EndpointMode.js
var EndpointMode;
(function (EndpointMode) {
  EndpointMode["IPv4"] = "IPv4";
  EndpointMode["IPv6"] = "IPv6";
})(EndpointMode || (EndpointMode = {}));
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/config/EndpointModeConfigOptions.js

var ENV_ENDPOINT_MODE_NAME = "AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE";
var CONFIG_ENDPOINT_MODE_NAME = "ec2_metadata_service_endpoint_mode";
var ENDPOINT_MODE_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return env[ENV_ENDPOINT_MODE_NAME];
  },
  configFileSelector: function configFileSelector(profile) {
    return profile[CONFIG_ENDPOINT_MODE_NAME];
  },
  "default": EndpointMode.IPv4
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/utils/getInstanceMetadataEndpoint.js








var getInstanceMetadataEndpoint = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = parseUrl;
          _context.next = 3;
          return getFromEndpointConfig();
        case 3:
          _context.t1 = _context.sent;
          if (_context.t1) {
            _context.next = 8;
            break;
          }
          _context.next = 7;
          return getFromEndpointModeConfig();
        case 7:
          _context.t1 = _context.sent;
        case 8:
          _context.t2 = _context.t1;
          return _context.abrupt("return", (0, _context.t0)(_context.t2));
        case 10:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getInstanceMetadataEndpoint() {
    return _ref.apply(this, arguments);
  };
}();
var getFromEndpointConfig = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          return _context2.abrupt("return", loadConfig(ENDPOINT_CONFIG_OPTIONS)());
        case 1:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function getFromEndpointConfig() {
    return _ref2.apply(this, arguments);
  };
}();
var getFromEndpointModeConfig = /*#__PURE__*/function () {
  var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3() {
    var endpointMode;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();
        case 2:
          endpointMode = _context3.sent;
          _context3.t0 = endpointMode;
          _context3.next = _context3.t0 === EndpointMode.IPv4 ? 6 : _context3.t0 === EndpointMode.IPv6 ? 7 : 8;
          break;
        case 6:
          return _context3.abrupt("return", Endpoint.IPv4);
        case 7:
          return _context3.abrupt("return", Endpoint.IPv6);
        case 8:
          throw new Error("Unsupported endpoint mode: ".concat(endpointMode, ".") + " Select from ".concat(Object.values(EndpointMode)));
        case 9:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function getFromEndpointModeConfig() {
    return _ref3.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/utils/getExtendedInstanceMetadataCredentials.js

var STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;
var STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;
var STATIC_STABILITY_DOC_URL = "https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html";
var getExtendedInstanceMetadataCredentials = function getExtendedInstanceMetadataCredentials(credentials, logger) {
  var _credentials$original;
  var refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS + Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);
  var newExpiration = new Date(Date.now() + refreshInterval * 1000);
  logger.warn("Attempting credential expiration extension due to a credential service availability issue. A refresh of these " + "credentials will be attempted after ${new Date(newExpiration)}.\nFor more information, please visit: " + STATIC_STABILITY_DOC_URL);
  var originalExpiration = (_credentials$original = credentials.originalExpiration) !== null && _credentials$original !== void 0 ? _credentials$original : credentials.expiration;
  return _objectSpread2(_objectSpread2(_objectSpread2({}, credentials), originalExpiration ? {
    originalExpiration: originalExpiration
  } : {}), {}, {
    expiration: newExpiration
  });
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/utils/staticStabilityProvider.js



var staticStabilityProvider = function staticStabilityProvider(provider) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var logger = (options === null || options === void 0 ? void 0 : options.logger) || console;
  var pastCredentials;
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var credentials;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          _context.next = 3;
          return provider();
        case 3:
          credentials = _context.sent;
          if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {
            credentials = getExtendedInstanceMetadataCredentials(credentials, logger);
          }
          _context.next = 15;
          break;
        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](0);
          if (!pastCredentials) {
            _context.next = 14;
            break;
          }
          logger.warn("Credential renew failed: ", _context.t0);
          credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);
          _context.next = 15;
          break;
        case 14:
          throw _context.t0;
        case 15:
          pastCredentials = credentials;
          return _context.abrupt("return", credentials);
        case 17:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 7]]);
  }));
};
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/fromInstanceMetadata.js










var IMDS_PATH = "/latest/meta-data/iam/security-credentials/";
var IMDS_TOKEN_PATH = "/latest/api/token";
var fromInstanceMetadata = function fromInstanceMetadata() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return staticStabilityProvider(getInstanceImdsProvider(init), {
    logger: init.logger
  });
};
var getInstanceImdsProvider = function getInstanceImdsProvider(init) {
  var disableFetchToken = false;
  var _providerConfigFromIn = providerConfigFromInit(init),
    timeout = _providerConfigFromIn.timeout,
    maxRetries = _providerConfigFromIn.maxRetries;
  var getCredentials = /*#__PURE__*/function () {
    var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(maxRetries, options) {
      var profile;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return retry( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
              var profile;
              return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) switch (_context.prev = _context.next) {
                  case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return getProfile(options);
                  case 3:
                    profile = _context.sent;
                    _context.next = 10;
                    break;
                  case 6:
                    _context.prev = 6;
                    _context.t0 = _context["catch"](0);
                    if (_context.t0.statusCode === 401) {
                      disableFetchToken = false;
                    }
                    throw _context.t0;
                  case 10:
                    return _context.abrupt("return", profile);
                  case 11:
                  case "end":
                    return _context.stop();
                }
              }, _callee, null, [[0, 6]]);
            })), maxRetries);
          case 2:
            profile = _context3.sent.trim();
            return _context3.abrupt("return", retry( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2() {
              var creds;
              return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.prev = 0;
                    _context2.next = 3;
                    return getCredentialsFromProfile(profile, options);
                  case 3:
                    creds = _context2.sent;
                    _context2.next = 10;
                    break;
                  case 6:
                    _context2.prev = 6;
                    _context2.t0 = _context2["catch"](0);
                    if (_context2.t0.statusCode === 401) {
                      disableFetchToken = false;
                    }
                    throw _context2.t0;
                  case 10:
                    return _context2.abrupt("return", creds);
                  case 11:
                  case "end":
                    return _context2.stop();
                }
              }, _callee2, null, [[0, 6]]);
            })), maxRetries));
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return function getCredentials(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4() {
    var endpoint, token;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return getInstanceMetadataEndpoint();
        case 2:
          endpoint = _context4.sent;
          if (!disableFetchToken) {
            _context4.next = 7;
            break;
          }
          return _context4.abrupt("return", getCredentials(maxRetries, _objectSpread2(_objectSpread2({}, endpoint), {}, {
            timeout: timeout
          })));
        case 7:
          _context4.prev = 7;
          _context4.next = 10;
          return getMetadataToken(_objectSpread2(_objectSpread2({}, endpoint), {}, {
            timeout: timeout
          }));
        case 10:
          token = _context4.sent.toString();
          _context4.next = 21;
          break;
        case 13:
          _context4.prev = 13;
          _context4.t0 = _context4["catch"](7);
          if (!((_context4.t0 === null || _context4.t0 === void 0 ? void 0 : _context4.t0.statusCode) === 400)) {
            _context4.next = 19;
            break;
          }
          throw Object.assign(_context4.t0, {
            message: "EC2 Metadata token request returned error"
          });
        case 19:
          if (_context4.t0.message === "TimeoutError" || [403, 404, 405].includes(_context4.t0.statusCode)) {
            disableFetchToken = true;
          }
        case 20:
          return _context4.abrupt("return", getCredentials(maxRetries, _objectSpread2(_objectSpread2({}, endpoint), {}, {
            timeout: timeout
          })));
        case 21:
          return _context4.abrupt("return", getCredentials(maxRetries, _objectSpread2(_objectSpread2({}, endpoint), {}, {
            headers: {
              "x-aws-ec2-metadata-token": token
            },
            timeout: timeout
          })));
        case 22:
        case "end":
          return _context4.stop();
      }
    }, _callee4, null, [[7, 13]]);
  }));
};
var getMetadataToken = /*#__PURE__*/function () {
  var _ref5 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(options) {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          return _context5.abrupt("return", httpRequest(_objectSpread2(_objectSpread2({}, options), {}, {
            path: IMDS_TOKEN_PATH,
            method: "PUT",
            headers: {
              "x-aws-ec2-metadata-token-ttl-seconds": "21600"
            }
          })));
        case 1:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function getMetadataToken(_x3) {
    return _ref5.apply(this, arguments);
  };
}();
var getProfile = /*#__PURE__*/function () {
  var _ref6 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(options) {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return httpRequest(_objectSpread2(_objectSpread2({}, options), {}, {
            path: IMDS_PATH
          }));
        case 2:
          return _context6.abrupt("return", _context6.sent.toString());
        case 3:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return function getProfile(_x4) {
    return _ref6.apply(this, arguments);
  };
}();
var getCredentialsFromProfile = /*#__PURE__*/function () {
  var _ref7 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee7(profile, options) {
    var credsResponse;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          _context7.t0 = JSON;
          _context7.next = 3;
          return httpRequest(_objectSpread2(_objectSpread2({}, options), {}, {
            path: IMDS_PATH + profile
          }));
        case 3:
          _context7.t1 = _context7.sent.toString();
          credsResponse = _context7.t0.parse.call(_context7.t0, _context7.t1);
          if (isImdsCredentials(credsResponse)) {
            _context7.next = 7;
            break;
          }
          throw new CredentialsProviderError("Invalid response received from instance metadata service.");
        case 7:
          return _context7.abrupt("return", fromImdsCredentials(credsResponse));
        case 8:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function getCredentialsFromProfile(_x5, _x6) {
    return _ref7.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+credential-provider-imds@2.0.3/node_modules/@smithy/credential-provider-imds/dist-es/index.js






;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js



var resolveCredentialSource = function resolveCredentialSource(credentialSource, profileName) {
  var sourceProvidersMap = {
    EcsContainer: fromContainerMetadata,
    Ec2InstanceMetadata: fromInstanceMetadata,
    Environment: fromEnv
  };
  if (credentialSource in sourceProvidersMap) {
    return sourceProvidersMap[credentialSource]();
  } else {
    throw new CredentialsProviderError("Unsupported credential source in profile ".concat(profileName, ". Got ").concat(credentialSource, ", ") + "expected EcsContainer or Ec2InstanceMetadata or Environment.");
  }
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveAssumeRoleCredentials.js








var isAssumeRoleProfile = function isAssumeRoleProfile(arg) {
  return Boolean(arg) && typeof arg === "object" && typeof arg.role_arn === "string" && ["undefined", "string"].indexOf(typeof arg.role_session_name) > -1 && ["undefined", "string"].indexOf(typeof arg.external_id) > -1 && ["undefined", "string"].indexOf(typeof arg.mfa_serial) > -1 && (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));
};
var isAssumeRoleWithSourceProfile = function isAssumeRoleWithSourceProfile(arg) {
  return typeof arg.source_profile === "string" && typeof arg.credential_source === "undefined";
};
var isAssumeRoleWithProviderProfile = function isAssumeRoleWithProviderProfile(arg) {
  return typeof arg.credential_source === "string" && typeof arg.source_profile === "undefined";
};
var resolveAssumeRoleCredentials = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(profileName, profiles, options) {
    var visitedProfiles,
      data,
      source_profile,
      sourceCredsProvider,
      params,
      mfa_serial,
      sourceCreds,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          visitedProfiles = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};
          data = profiles[profileName];
          if (options.roleAssumer) {
            _context.next = 4;
            break;
          }
          throw new CredentialsProviderError("Profile ".concat(profileName, " requires a role to be assumed, but no role assumption callback was provided."), false);
        case 4:
          source_profile = data.source_profile;
          if (!(source_profile && source_profile in visitedProfiles)) {
            _context.next = 7;
            break;
          }
          throw new CredentialsProviderError("Detected a cycle attempting to resolve credentials for profile" + " ".concat(getProfileName(options), ". Profiles visited: ") + Object.keys(visitedProfiles).join(", "), false);
        case 7:
          sourceCredsProvider = source_profile ? resolveProfileData(source_profile, profiles, options, _objectSpread2(_objectSpread2({}, visitedProfiles), {}, defineProperty_defineProperty({}, source_profile, true))) : resolveCredentialSource(data.credential_source, profileName)();
          params = {
            RoleArn: data.role_arn,
            RoleSessionName: data.role_session_name || "aws-sdk-js-".concat(Date.now()),
            ExternalId: data.external_id
          };
          mfa_serial = data.mfa_serial;
          if (!mfa_serial) {
            _context.next = 17;
            break;
          }
          if (options.mfaCodeProvider) {
            _context.next = 13;
            break;
          }
          throw new CredentialsProviderError("Profile ".concat(profileName, " requires multi-factor authentication, but no MFA code callback was provided."), false);
        case 13:
          params.SerialNumber = mfa_serial;
          _context.next = 16;
          return options.mfaCodeProvider(mfa_serial);
        case 16:
          params.TokenCode = _context.sent;
        case 17:
          _context.next = 19;
          return sourceCredsProvider;
        case 19:
          sourceCreds = _context.sent;
          return _context.abrupt("return", options.roleAssumer(sourceCreds, params));
        case 21:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function resolveAssumeRoleCredentials(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
;// external "child_process"
const external_child_process_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("child_process");
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-process@3.391.0/node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js

var getValidatedProcessCredentials = function getValidatedProcessCredentials(profileName, data) {
  if (data.Version !== 1) {
    throw Error("Profile ".concat(profileName, " credential_process did not return Version 1."));
  }
  if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {
    throw Error("Profile ".concat(profileName, " credential_process returned invalid credentials."));
  }
  if (data.Expiration) {
    var currentTime = new Date();
    var expireTime = new Date(data.Expiration);
    if (expireTime < currentTime) {
      throw Error("Profile ".concat(profileName, " credential_process returned expired credentials."));
    }
  }
  return _objectSpread2(_objectSpread2({
    accessKeyId: data.AccessKeyId,
    secretAccessKey: data.SecretAccessKey
  }, data.SessionToken && {
    sessionToken: data.SessionToken
  }), data.Expiration && {
    expiration: new Date(data.Expiration)
  });
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-process@3.391.0/node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js






var resolveProcessCredentials = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(profileName, profiles) {
    var profile, credentialProcess, execPromise, _yield$execPromise, stdout, data;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          profile = profiles[profileName];
          if (!profiles[profileName]) {
            _context.next = 28;
            break;
          }
          credentialProcess = profile["credential_process"];
          if (!(credentialProcess !== undefined)) {
            _context.next = 25;
            break;
          }
          execPromise = (0,external_util_.promisify)(external_child_process_namespaceObject.exec);
          _context.prev = 5;
          _context.next = 8;
          return execPromise(credentialProcess);
        case 8:
          _yield$execPromise = _context.sent;
          stdout = _yield$execPromise.stdout;
          _context.prev = 10;
          data = JSON.parse(stdout.trim());
          _context.next = 17;
          break;
        case 14:
          _context.prev = 14;
          _context.t0 = _context["catch"](10);
          throw Error("Profile ".concat(profileName, " credential_process returned invalid JSON."));
        case 17:
          return _context.abrupt("return", getValidatedProcessCredentials(profileName, data));
        case 20:
          _context.prev = 20;
          _context.t1 = _context["catch"](5);
          throw new CredentialsProviderError(_context.t1.message);
        case 23:
          _context.next = 26;
          break;
        case 25:
          throw new CredentialsProviderError("Profile ".concat(profileName, " did not contain credential_process."));
        case 26:
          _context.next = 29;
          break;
        case 28:
          throw new CredentialsProviderError("Profile ".concat(profileName, " could not be found in shared credentials file."));
        case 29:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[5, 20], [10, 14]]);
  }));
  return function resolveProcessCredentials(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-process@3.391.0/node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js




var fromProcess = function fromProcess() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var profiles;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return parseKnownFiles(init);
        case 2:
          profiles = _context.sent;
          return _context.abrupt("return", resolveProcessCredentials(getProfileName(init), profiles));
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-process@3.391.0/node_modules/@aws-sdk/credential-provider-process/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProcessCredentials.js




var isProcessProfile = function isProcessProfile(arg) {
  return Boolean(arg) && typeof arg === "object" && typeof arg.credential_process === "string";
};
var resolveProcessCredentials_resolveProcessCredentials = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(options, profile) {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", fromProcess(_objectSpread2(_objectSpread2({}, options), {}, {
            profile: profile
          }))());
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function resolveProcessCredentials(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-sso@3.395.0/node_modules/@aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js
var isSsoProfile = function isSsoProfile(arg) {
  return arg && (typeof arg.sso_start_url === "string" || typeof arg.sso_account_id === "string" || typeof arg.sso_session === "string" || typeof arg.sso_region === "string" || typeof arg.sso_role_name === "string");
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js

var endpoint_EndpointParameters_resolveClientEndpointParameters = function resolveClientEndpointParameters(options) {
  var _options$useDualstack, _options$useFipsEndpo;
  return _objectSpread2(_objectSpread2({}, options), {}, {
    useDualstackEndpoint: (_options$useDualstack = options.useDualstackEndpoint) !== null && _options$useDualstack !== void 0 ? _options$useDualstack : false,
    useFipsEndpoint: (_options$useFipsEndpo = options.useFipsEndpoint) !== null && _options$useFipsEndpo !== void 0 ? _options$useFipsEndpo : false,
    defaultSigningName: "awsssoportal"
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/package.json
const client_sso_package_namespaceObject = {"rE":"3.395.0"};
;// external "process"
const external_process_namespaceObject = __WEBPACK_EXTERNAL_createRequire(import.meta.url)("process");
;// ./node_modules/.pnpm/@aws-sdk+util-user-agent-node@3.391.0/node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js
var isCrtAvailable = function isCrtAvailable() {
  try {
    if ( true && __webpack_require__(Object(function webpackMissingModule() { var e = new Error("Cannot find module 'aws-crt'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()))) {
      return ["md/crt-avail"];
    }
    return null;
  } catch (e) {
    return null;
  }
};
;// ./node_modules/.pnpm/@aws-sdk+util-user-agent-node@3.391.0/node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js






var UA_APP_ID_ENV_NAME = "AWS_SDK_UA_APP_ID";
var UA_APP_ID_INI_NAME = "sdk-ua-app-id";
var defaultUserAgent = function defaultUserAgent(_ref) {
  var serviceId = _ref.serviceId,
    clientVersion = _ref.clientVersion;
  var sections = [["aws-sdk-js", clientVersion], ["ua", "2.0"], ["os/".concat((0,external_os_.platform)()), (0,external_os_.release)()], ["lang/js"], ["md/nodejs", "".concat(external_process_namespaceObject.versions.node)]];
  var crtAvailable = isCrtAvailable();
  if (crtAvailable) {
    sections.push(crtAvailable);
  }
  if (serviceId) {
    sections.push(["api/".concat(serviceId), clientVersion]);
  }
  if (external_process_namespaceObject.env.AWS_EXECUTION_ENV) {
    sections.push(["exec-env/".concat(external_process_namespaceObject.env.AWS_EXECUTION_ENV)]);
  }
  var appIdPromise = loadConfig({
    environmentVariableSelector: function environmentVariableSelector(env) {
      return env[UA_APP_ID_ENV_NAME];
    },
    configFileSelector: function configFileSelector(profile) {
      return profile[UA_APP_ID_INI_NAME];
    },
    "default": undefined
  })();
  var resolvedUserAgent = undefined;
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var appId;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (resolvedUserAgent) {
            _context.next = 5;
            break;
          }
          _context.next = 3;
          return appIdPromise;
        case 3:
          appId = _context.sent;
          resolvedUserAgent = appId ? [].concat(sections, [["app/".concat(appId)]]) : [].concat(sections);
        case 5:
          return _context.abrupt("return", resolvedUserAgent);
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
;// ./node_modules/.pnpm/@smithy+hash-node@2.0.3/node_modules/@smithy/hash-node/dist-es/index.js






var Hash = /*#__PURE__*/function () {
  function Hash(algorithmIdentifier, secret) {
    classCallCheck_classCallCheck(this, Hash);
    this.algorithmIdentifier = algorithmIdentifier;
    this.secret = secret;
    this.reset();
  }
  return createClass_createClass(Hash, [{
    key: "update",
    value: function update(toHash, encoding) {
      this.hash.update(toUint8Array(castSourceData(toHash, encoding)));
    }
  }, {
    key: "digest",
    value: function digest() {
      return Promise.resolve(this.hash.digest());
    }
  }, {
    key: "reset",
    value: function reset() {
      this.hash = this.secret ? (0,external_crypto_.createHmac)(this.algorithmIdentifier, castSourceData(this.secret)) : (0,external_crypto_.createHash)(this.algorithmIdentifier);
    }
  }]);
}();
function castSourceData(toCast, encoding) {
  if (external_buffer_namespaceObject.Buffer.isBuffer(toCast)) {
    return toCast;
  }
  if (typeof toCast === "string") {
    return fromString(toCast, encoding);
  }
  if (ArrayBuffer.isView(toCast)) {
    return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);
  }
  return fromArrayBuffer(toCast);
}
;// ./node_modules/.pnpm/@smithy+util-body-length-node@2.0.0/node_modules/@smithy/util-body-length-node/dist-es/calculateBodyLength.js

var calculateBodyLength = function calculateBodyLength(body) {
  if (!body) {
    return 0;
  }
  if (typeof body === "string") {
    return Buffer.from(body).length;
  } else if (typeof body.byteLength === "number") {
    return body.byteLength;
  } else if (typeof body.size === "number") {
    return body.size;
  } else if (typeof body.path === "string" || Buffer.isBuffer(body.path)) {
    return (0,external_fs_.lstatSync)(body.path).size;
  } else if (typeof body.fd === "number") {
    return (0,external_fs_.fstatSync)(body.fd).size;
  }
  throw new Error("Body Length computation failed for ".concat(body));
};
;// ./node_modules/.pnpm/@smithy+util-body-length-node@2.0.0/node_modules/@smithy/util-body-length-node/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js

var p = "required",
  q = "fn",
  r = "argv",
  s = "ref";
var a = "PartitionResult",
  b = "tree",
  c = "error",
  d = "endpoint",
  e = defineProperty_defineProperty(defineProperty_defineProperty({}, p, false), "type", "String"),
  f = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, p, true), "default", false), "type", "Boolean"),
  g = defineProperty_defineProperty({}, s, "Endpoint"),
  h = defineProperty_defineProperty(defineProperty_defineProperty({}, q, "booleanEquals"), r, [defineProperty_defineProperty({}, s, "UseFIPS"), true]),
  ruleset_i = defineProperty_defineProperty(defineProperty_defineProperty({}, q, "booleanEquals"), r, [defineProperty_defineProperty({}, s, "UseDualStack"), true]),
  j = {},
  k = defineProperty_defineProperty(defineProperty_defineProperty({}, q, "booleanEquals"), r, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, q, "getAttr"), r, [defineProperty_defineProperty({}, s, a), "supportsFIPS"])]),
  l = defineProperty_defineProperty(defineProperty_defineProperty({}, q, "booleanEquals"), r, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, q, "getAttr"), r, [defineProperty_defineProperty({}, s, a), "supportsDualStack"])]),
  m = [g],
  n = [h],
  o = [ruleset_i];
var _data = {
  version: "1.0",
  parameters: {
    Region: e,
    UseDualStack: f,
    UseFIPS: f,
    Endpoint: e
  },
  rules: [{
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, q, "aws.partition"), r, [defineProperty_defineProperty({}, s, "Region")]), "assign", a)],
    type: b,
    rules: [{
      conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, q, "isSet"), r, m), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, q, "parseURL"), r, m), "assign", "url")],
      type: b,
      rules: [{
        conditions: n,
        error: "Invalid Configuration: FIPS and custom endpoint are not supported",
        type: c
      }, {
        type: b,
        rules: [{
          conditions: o,
          error: "Invalid Configuration: Dualstack and custom endpoint are not supported",
          type: c
        }, {
          endpoint: {
            url: g,
            properties: j,
            headers: j
          },
          type: d
        }]
      }]
    }, {
      conditions: [h, ruleset_i],
      type: b,
      rules: [{
        conditions: [k, l],
        type: b,
        rules: [{
          endpoint: {
            url: "https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
            properties: j,
            headers: j
          },
          type: d
        }]
      }, {
        error: "FIPS and DualStack are enabled, but this partition does not support one or both",
        type: c
      }]
    }, {
      conditions: n,
      type: b,
      rules: [{
        conditions: [k],
        type: b,
        rules: [{
          type: b,
          rules: [{
            endpoint: {
              url: "https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",
              properties: j,
              headers: j
            },
            type: d
          }]
        }]
      }, {
        error: "FIPS is enabled but this partition does not support FIPS",
        type: c
      }]
    }, {
      conditions: o,
      type: b,
      rules: [{
        conditions: [l],
        type: b,
        rules: [{
          endpoint: {
            url: "https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",
            properties: j,
            headers: j
          },
          type: d
        }]
      }, {
        error: "DualStack is enabled but this partition does not support DualStack",
        type: c
      }]
    }, {
      endpoint: {
        url: "https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",
        properties: j,
        headers: j
      },
      type: d
    }]
  }]
};
var ruleSet = _data;
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js


var defaultEndpointResolver = function defaultEndpointResolver(endpointParams) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return resolveEndpoint(ruleSet, {
    endpointParams: endpointParams,
    logger: context.logger
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js





var runtimeConfig_shared_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$base64Decoder, _config$base64Encoder, _config$disableHostPr, _config$endpointProvi, _config$extensions, _config$logger, _config$serviceId, _config$urlParser, _config$utf8Decoder, _config$utf8Encoder;
  return {
    apiVersion: "2019-06-10",
    base64Decoder: (_config$base64Decoder = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _config$base64Decoder !== void 0 ? _config$base64Decoder : fromBase64,
    base64Encoder: (_config$base64Encoder = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _config$base64Encoder !== void 0 ? _config$base64Encoder : toBase64,
    disableHostPrefix: (_config$disableHostPr = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _config$disableHostPr !== void 0 ? _config$disableHostPr : false,
    endpointProvider: (_config$endpointProvi = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _config$endpointProvi !== void 0 ? _config$endpointProvi : defaultEndpointResolver,
    extensions: (_config$extensions = config === null || config === void 0 ? void 0 : config.extensions) !== null && _config$extensions !== void 0 ? _config$extensions : [],
    logger: (_config$logger = config === null || config === void 0 ? void 0 : config.logger) !== null && _config$logger !== void 0 ? _config$logger : new NoOpLogger(),
    serviceId: (_config$serviceId = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _config$serviceId !== void 0 ? _config$serviceId : "SSO",
    urlParser: (_config$urlParser = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _config$urlParser !== void 0 ? _config$urlParser : parseUrl,
    utf8Decoder: (_config$utf8Decoder = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _config$utf8Decoder !== void 0 ? _config$utf8Decoder : fromUtf8,
    utf8Encoder: (_config$utf8Encoder = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _config$utf8Encoder !== void 0 ? _config$utf8Encoder : toUtf8
  };
};
;// ./node_modules/.pnpm/@smithy+util-defaults-mode-node@2.0.3/node_modules/@smithy/util-defaults-mode-node/dist-es/constants.js
var AWS_EXECUTION_ENV = "AWS_EXECUTION_ENV";
var AWS_REGION_ENV = "AWS_REGION";
var AWS_DEFAULT_REGION_ENV = "AWS_DEFAULT_REGION";
var ENV_IMDS_DISABLED = "AWS_EC2_METADATA_DISABLED";
var DEFAULTS_MODE_OPTIONS = ["in-region", "cross-region", "mobile", "standard", "legacy"];
var IMDS_REGION_PATH = "/latest/meta-data/placement/region";
;// ./node_modules/.pnpm/@smithy+util-defaults-mode-node@2.0.3/node_modules/@smithy/util-defaults-mode-node/dist-es/defaultsModeConfig.js
var AWS_DEFAULTS_MODE_ENV = "AWS_DEFAULTS_MODE";
var AWS_DEFAULTS_MODE_CONFIG = "defaults_mode";
var NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return env[AWS_DEFAULTS_MODE_ENV];
  },
  configFileSelector: function configFileSelector(profile) {
    return profile[AWS_DEFAULTS_MODE_CONFIG];
  },
  "default": "legacy"
};
;// ./node_modules/.pnpm/@smithy+util-defaults-mode-node@2.0.3/node_modules/@smithy/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js









var resolveDefaultsModeConfig = function resolveDefaultsModeConfig() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    _ref$region = _ref.region,
    region = _ref$region === void 0 ? loadConfig(NODE_REGION_CONFIG_OPTIONS) : _ref$region,
    _ref$defaultsMode = _ref.defaultsMode,
    defaultsMode = _ref$defaultsMode === void 0 ? loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS) : _ref$defaultsMode;
  return memoize( /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var mode;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!(typeof defaultsMode === "function")) {
            _context.next = 6;
            break;
          }
          _context.next = 3;
          return defaultsMode();
        case 3:
          _context.t0 = _context.sent;
          _context.next = 7;
          break;
        case 6:
          _context.t0 = defaultsMode;
        case 7:
          mode = _context.t0;
          _context.t1 = mode === null || mode === void 0 ? void 0 : mode.toLowerCase();
          _context.next = _context.t1 === "auto" ? 11 : _context.t1 === "in-region" ? 12 : _context.t1 === "cross-region" ? 12 : _context.t1 === "mobile" ? 12 : _context.t1 === "standard" ? 12 : _context.t1 === "legacy" ? 12 : _context.t1 === undefined ? 13 : 14;
          break;
        case 11:
          return _context.abrupt("return", resolveNodeDefaultsModeAuto(region));
        case 12:
          return _context.abrupt("return", Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase()));
        case 13:
          return _context.abrupt("return", Promise.resolve("legacy"));
        case 14:
          throw new Error("Invalid parameter for \"defaultsMode\", expect ".concat(DEFAULTS_MODE_OPTIONS.join(", "), ", got ").concat(mode));
        case 15:
        case "end":
          return _context.stop();
      }
    }, _callee);
  })));
};
var resolveNodeDefaultsModeAuto = /*#__PURE__*/function () {
  var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(clientRegion) {
    var resolvedRegion, inferredRegion;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          if (!clientRegion) {
            _context2.next = 19;
            break;
          }
          if (!(typeof clientRegion === "function")) {
            _context2.next = 7;
            break;
          }
          _context2.next = 4;
          return clientRegion();
        case 4:
          _context2.t0 = _context2.sent;
          _context2.next = 8;
          break;
        case 7:
          _context2.t0 = clientRegion;
        case 8:
          resolvedRegion = _context2.t0;
          _context2.next = 11;
          return inferPhysicalRegion();
        case 11:
          inferredRegion = _context2.sent;
          if (inferredRegion) {
            _context2.next = 14;
            break;
          }
          return _context2.abrupt("return", "standard");
        case 14:
          if (!(resolvedRegion === inferredRegion)) {
            _context2.next = 18;
            break;
          }
          return _context2.abrupt("return", "in-region");
        case 18:
          return _context2.abrupt("return", "cross-region");
        case 19:
          return _context2.abrupt("return", "standard");
        case 20:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function resolveNodeDefaultsModeAuto(_x) {
    return _ref3.apply(this, arguments);
  };
}();
var inferPhysicalRegion = /*#__PURE__*/function () {
  var _ref4 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3() {
    var _process$env$AWS_REGI, endpoint;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          if (!(process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV]))) {
            _context3.next = 2;
            break;
          }
          return _context3.abrupt("return", (_process$env$AWS_REGI = process.env[AWS_REGION_ENV]) !== null && _process$env$AWS_REGI !== void 0 ? _process$env$AWS_REGI : process.env[AWS_DEFAULT_REGION_ENV]);
        case 2:
          if (process.env[ENV_IMDS_DISABLED]) {
            _context3.next = 14;
            break;
          }
          _context3.prev = 3;
          _context3.next = 6;
          return getInstanceMetadataEndpoint();
        case 6:
          endpoint = _context3.sent;
          _context3.next = 9;
          return httpRequest(_objectSpread2(_objectSpread2({}, endpoint), {}, {
            path: IMDS_REGION_PATH
          }));
        case 9:
          return _context3.abrupt("return", _context3.sent.toString());
        case 12:
          _context3.prev = 12;
          _context3.t0 = _context3["catch"](3);
        case 14:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[3, 12]]);
  }));
  return function inferPhysicalRegion() {
    return _ref4.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@smithy+util-defaults-mode-node@2.0.3/node_modules/@smithy/util-defaults-mode-node/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js
















var getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$bodyLengthChe, _config$defaultUserAg, _config$maxAttempts, _config$region, _config$requestHandle, _config$retryMode, _config$sha, _config$streamCollect, _config$useDualstackE, _config$useFipsEndpoi;
  emitWarningIfUnsupportedVersion(process.version);
  var defaultsMode = resolveDefaultsModeConfig(config);
  var defaultConfigProvider = function defaultConfigProvider() {
    return defaultsMode().then(loadConfigsForDefaultMode);
  };
  var clientSharedValues = runtimeConfig_shared_getRuntimeConfig(config);
  return _objectSpread2(_objectSpread2(_objectSpread2({}, clientSharedValues), config), {}, {
    runtime: "node",
    defaultsMode: defaultsMode,
    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,
    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : defaultUserAgent({
      serviceId: clientSharedValues.serviceId,
      clientVersion: client_sso_package_namespaceObject.rE
    }),
    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : loadConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),
    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : loadConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),
    requestHandler: (_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : new NodeHttpHandler(defaultConfigProvider),
    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : loadConfig(_objectSpread2(_objectSpread2({}, NODE_RETRY_MODE_CONFIG_OPTIONS), {}, {
      "default": function () {
        var _default2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
          return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return defaultConfigProvider();
              case 2:
                _context.t0 = _context.sent.retryMode;
                if (_context.t0) {
                  _context.next = 5;
                  break;
                }
                _context.t0 = DEFAULT_RETRY_MODE;
              case 5:
                return _context.abrupt("return", _context.t0);
              case 6:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function _default() {
          return _default2.apply(this, arguments);
        }
        return _default;
      }()
    })),
    sha256: (_config$sha = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha !== void 0 ? _config$sha : Hash.bind(null, "sha256"),
    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,
    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : loadConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),
    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : loadConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/runtimeExtensions.js


var asPartial = function asPartial(t) {
  return t;
};
var resolveRuntimeExtensions = function resolveRuntimeExtensions(runtimeConfig, extensions) {
  var clientConfiguration = _objectSpread2({}, asPartial(getDefaultClientConfiguration(runtimeConfig)));
  extensions.forEach(function (extension) {
    return extension.configureClient(clientConfiguration);
  });
  return _objectSpread2(_objectSpread2({}, runtimeConfig), resolveDefaultRuntimeConfig(clientConfiguration));
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js



















var SSOClient = /*#__PURE__*/function (_Client) {
  function SSOClient() {
    var _this;
    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {
      _ref[_key] = arguments[_key];
    }
    var configuration = _ref[0];
    classCallCheck_classCallCheck(this, SSOClient);
    var _config_0 = getRuntimeConfig(configuration || {});
    var _config_1 = endpoint_EndpointParameters_resolveClientEndpointParameters(_config_0);
    var _config_2 = resolveRegionConfig(_config_1);
    var _config_3 = resolveEndpointConfig(_config_2);
    var _config_4 = resolveRetryConfig(_config_3);
    var _config_5 = resolveHostHeaderConfig(_config_4);
    var _config_6 = resolveUserAgentConfig(_config_5);
    var _config_7 = resolveRuntimeExtensions(_config_6, (configuration === null || configuration === void 0 ? void 0 : configuration.extensions) || []);
    _this = callSuper_callSuper(this, SSOClient, [_config_7]);
    _this.config = _config_7;
    _this.middlewareStack.use(getRetryPlugin(_this.config));
    _this.middlewareStack.use(getContentLengthPlugin(_this.config));
    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));
    _this.middlewareStack.use(getLoggerPlugin(_this.config));
    _this.middlewareStack.use(getRecursionDetectionPlugin(_this.config));
    _this.middlewareStack.use(getUserAgentPlugin(_this.config));
    return _this;
  }
  inherits_inherits(SSOClient, _Client);
  return createClass_createClass(SSOClient, [{
    key: "destroy",
    value: function destroy() {
      get_get(getPrototypeOf_getPrototypeOf(SSOClient.prototype), "destroy", this).call(this);
    }
  }]);
}(Client);
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js






var SSOServiceException = /*#__PURE__*/function (_ServiceException) {
  function SSOServiceException(options) {
    var _this;
    classCallCheck_classCallCheck(this, SSOServiceException);
    _this = callSuper_callSuper(this, SSOServiceException, [options]);
    Object.setPrototypeOf(_this, SSOServiceException.prototype);
    return _this;
  }
  inherits_inherits(SSOServiceException, _ServiceException);
  return createClass_createClass(SSOServiceException);
}(ServiceException);
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js







var InvalidRequestException = /*#__PURE__*/function (_BaseException) {
  function InvalidRequestException(opts) {
    var _this;
    classCallCheck_classCallCheck(this, InvalidRequestException);
    _this = callSuper_callSuper(this, InvalidRequestException, [_objectSpread2({
      name: "InvalidRequestException",
      $fault: "client"
    }, opts)]);
    _this.name = "InvalidRequestException";
    _this.$fault = "client";
    Object.setPrototypeOf(_this, InvalidRequestException.prototype);
    return _this;
  }
  inherits_inherits(InvalidRequestException, _BaseException);
  return createClass_createClass(InvalidRequestException);
}(SSOServiceException);
var ResourceNotFoundException = /*#__PURE__*/function (_BaseException2) {
  function ResourceNotFoundException(opts) {
    var _this2;
    classCallCheck_classCallCheck(this, ResourceNotFoundException);
    _this2 = callSuper_callSuper(this, ResourceNotFoundException, [_objectSpread2({
      name: "ResourceNotFoundException",
      $fault: "client"
    }, opts)]);
    _this2.name = "ResourceNotFoundException";
    _this2.$fault = "client";
    Object.setPrototypeOf(_this2, ResourceNotFoundException.prototype);
    return _this2;
  }
  inherits_inherits(ResourceNotFoundException, _BaseException2);
  return createClass_createClass(ResourceNotFoundException);
}(SSOServiceException);
var TooManyRequestsException = /*#__PURE__*/function (_BaseException3) {
  function TooManyRequestsException(opts) {
    var _this3;
    classCallCheck_classCallCheck(this, TooManyRequestsException);
    _this3 = callSuper_callSuper(this, TooManyRequestsException, [_objectSpread2({
      name: "TooManyRequestsException",
      $fault: "client"
    }, opts)]);
    _this3.name = "TooManyRequestsException";
    _this3.$fault = "client";
    Object.setPrototypeOf(_this3, TooManyRequestsException.prototype);
    return _this3;
  }
  inherits_inherits(TooManyRequestsException, _BaseException3);
  return createClass_createClass(TooManyRequestsException);
}(SSOServiceException);
var UnauthorizedException = /*#__PURE__*/function (_BaseException4) {
  function UnauthorizedException(opts) {
    var _this4;
    classCallCheck_classCallCheck(this, UnauthorizedException);
    _this4 = callSuper_callSuper(this, UnauthorizedException, [_objectSpread2({
      name: "UnauthorizedException",
      $fault: "client"
    }, opts)]);
    _this4.name = "UnauthorizedException";
    _this4.$fault = "client";
    Object.setPrototypeOf(_this4, UnauthorizedException.prototype);
    return _this4;
  }
  inherits_inherits(UnauthorizedException, _BaseException4);
  return createClass_createClass(UnauthorizedException);
}(SSOServiceException);
var GetRoleCredentialsRequestFilterSensitiveLog = function GetRoleCredentialsRequestFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.accessToken && {
    accessToken: constants_SENSITIVE_STRING
  });
};
var RoleCredentialsFilterSensitiveLog = function RoleCredentialsFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2(_objectSpread2({}, obj), obj.secretAccessKey && {
    secretAccessKey: constants_SENSITIVE_STRING
  }), obj.sessionToken && {
    sessionToken: constants_SENSITIVE_STRING
  });
};
var GetRoleCredentialsResponseFilterSensitiveLog = function GetRoleCredentialsResponseFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2({}, obj), obj.roleCredentials && {
    roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials)
  });
};
var ListAccountRolesRequestFilterSensitiveLog = function ListAccountRolesRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.accessToken && {
    accessToken: SENSITIVE_STRING
  });
};
var ListAccountsRequestFilterSensitiveLog = function ListAccountsRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.accessToken && {
    accessToken: SENSITIVE_STRING
  });
};
var LogoutRequestFilterSensitiveLog = function LogoutRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.accessToken && {
    accessToken: SENSITIVE_STRING
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js







var se_GetRoleCredentialsCommand = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(input, context) {
    var _yield$context$endpoi, hostname, _yield$context$endpoi2, protocol, port, basePath, headers, resolvedPath, query, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi = _context.sent;
          hostname = _yield$context$endpoi.hostname;
          _yield$context$endpoi2 = _yield$context$endpoi.protocol;
          protocol = _yield$context$endpoi2 === void 0 ? "https" : _yield$context$endpoi2;
          port = _yield$context$endpoi.port;
          basePath = _yield$context$endpoi.path;
          headers = object_mapping_map({}, isSerializableHeaderValue, {
            "x-amz-sso_bearer_token": input.accessToken
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/federation/credentials";
          query = object_mapping_map({
            role_name: [, expectNonNull(input.roleName, "roleName")],
            account_id: [, expectNonNull(input.accountId, "accountId")]
          });
          return _context.abrupt("return", new httpRequest_HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 12:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function se_GetRoleCredentialsCommand(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var se_ListAccountRolesCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, context) {
    var _yield$context$endpoi3, hostname, _yield$context$endpoi4, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi3 = _context2.sent;
          hostname = _yield$context$endpoi3.hostname;
          _yield$context$endpoi4 = _yield$context$endpoi3.protocol;
          protocol = _yield$context$endpoi4 === void 0 ? "https" : _yield$context$endpoi4;
          port = _yield$context$endpoi3.port;
          basePath = _yield$context$endpoi3.path;
          headers = map({}, isSerializableHeaderValue, {
            "x-amz-sso_bearer_token": input.accessToken
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/assignment/roles";
          query = map({
            next_token: [, input.nextToken],
            max_result: [function () {
              return input.maxResults !== void 0;
            }, function () {
              return input.maxResults.toString();
            }],
            account_id: [, __expectNonNull(input.accountId, "accountId")]
          });
          return _context2.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 12:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function se_ListAccountRolesCommand(_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}()));
var se_ListAccountsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(input, context) {
    var _yield$context$endpoi5, hostname, _yield$context$endpoi6, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi5 = _context3.sent;
          hostname = _yield$context$endpoi5.hostname;
          _yield$context$endpoi6 = _yield$context$endpoi5.protocol;
          protocol = _yield$context$endpoi6 === void 0 ? "https" : _yield$context$endpoi6;
          port = _yield$context$endpoi5.port;
          basePath = _yield$context$endpoi5.path;
          headers = map({}, isSerializableHeaderValue, {
            "x-amz-sso_bearer_token": input.accessToken
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/assignment/accounts";
          query = map({
            next_token: [, input.nextToken],
            max_result: [function () {
              return input.maxResults !== void 0;
            }, function () {
              return input.maxResults.toString();
            }]
          });
          return _context3.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 12:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function se_ListAccountsCommand(_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}()));
var se_LogoutCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(input, context) {
    var _yield$context$endpoi7, hostname, _yield$context$endpoi8, protocol, port, basePath, headers, resolvedPath, body;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi7 = _context4.sent;
          hostname = _yield$context$endpoi7.hostname;
          _yield$context$endpoi8 = _yield$context$endpoi7.protocol;
          protocol = _yield$context$endpoi8 === void 0 ? "https" : _yield$context$endpoi8;
          port = _yield$context$endpoi7.port;
          basePath = _yield$context$endpoi7.path;
          headers = map({}, isSerializableHeaderValue, {
            "x-amz-sso_bearer_token": input.accessToken
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/logout";
          return _context4.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 11:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function se_LogoutCommand(_x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}()));
var de_GetRoleCredentialsCommand = /*#__PURE__*/function () {
  var _ref5 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(output, context) {
    var contents, data, doc;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context5.next = 2;
            break;
          }
          return _context5.abrupt("return", de_GetRoleCredentialsCommandError(output, context));
        case 2:
          contents = object_mapping_map({
            $metadata: Aws_restJson1_deserializeMetadata(output)
          });
          _context5.t0 = expectNonNull;
          _context5.t1 = expectObject;
          _context5.next = 7;
          return Aws_restJson1_parseBody(output.body, context);
        case 7:
          _context5.t2 = _context5.sent;
          _context5.t3 = (0, _context5.t1)(_context5.t2);
          data = (0, _context5.t0)(_context5.t3, "body");
          doc = object_mapping_take(data, {
            roleCredentials: serde_json_json
          });
          Object.assign(contents, doc);
          return _context5.abrupt("return", contents);
        case 13:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function de_GetRoleCredentialsCommand(_x9, _x10) {
    return _ref5.apply(this, arguments);
  };
}();
var de_GetRoleCredentialsCommandError = /*#__PURE__*/function () {
  var _ref6 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          _context6.t0 = _objectSpread2;
          _context6.t1 = _objectSpread2({}, output);
          _context6.t2 = {};
          _context6.next = 5;
          return Aws_restJson1_parseErrorBody(output.body, context);
        case 5:
          _context6.t3 = _context6.sent;
          _context6.t4 = {
            body: _context6.t3
          };
          parsedOutput = (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t4);
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _context6.t5 = errorCode;
          _context6.next = _context6.t5 === "InvalidRequestException" ? 12 : _context6.t5 === "com.amazonaws.sso#InvalidRequestException" ? 12 : _context6.t5 === "ResourceNotFoundException" ? 15 : _context6.t5 === "com.amazonaws.sso#ResourceNotFoundException" ? 15 : _context6.t5 === "TooManyRequestsException" ? 18 : _context6.t5 === "com.amazonaws.sso#TooManyRequestsException" ? 18 : _context6.t5 === "UnauthorizedException" ? 21 : _context6.t5 === "com.amazonaws.sso#UnauthorizedException" ? 21 : 24;
          break;
        case 12:
          _context6.next = 14;
          return de_InvalidRequestExceptionRes(parsedOutput, context);
        case 14:
          throw _context6.sent;
        case 15:
          _context6.next = 17;
          return de_ResourceNotFoundExceptionRes(parsedOutput, context);
        case 17:
          throw _context6.sent;
        case 18:
          _context6.next = 20;
          return de_TooManyRequestsExceptionRes(parsedOutput, context);
        case 20:
          throw _context6.sent;
        case 21:
          _context6.next = 23;
          return de_UnauthorizedExceptionRes(parsedOutput, context);
        case 23:
          throw _context6.sent;
        case 24:
          parsedBody = parsedOutput.body;
          return _context6.abrupt("return", Aws_restJson1_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 26:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return function de_GetRoleCredentialsCommandError(_x11, _x12) {
    return _ref6.apply(this, arguments);
  };
}();
var de_ListAccountRolesCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(output, context) {
    var contents, data, doc;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context7.next = 2;
            break;
          }
          return _context7.abrupt("return", de_ListAccountRolesCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restJson1_deserializeMetadata(output)
          });
          _context7.t0 = __expectNonNull;
          _context7.t1 = __expectObject;
          _context7.next = 7;
          return Aws_restJson1_parseBody(output.body, context);
        case 7:
          _context7.t2 = _context7.sent;
          _context7.t3 = (0, _context7.t1)(_context7.t2);
          data = (0, _context7.t0)(_context7.t3, "body");
          doc = take(data, {
            nextToken: __expectString,
            roleList: _json
          });
          Object.assign(contents, doc);
          return _context7.abrupt("return", contents);
        case 13:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function de_ListAccountRolesCommand(_x13, _x14) {
    return _ref7.apply(this, arguments);
  };
}()));
var de_ListAccountRolesCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          _context8.t0 = _objectSpread;
          _context8.t1 = _objectSpread({}, output);
          _context8.t2 = {};
          _context8.next = 5;
          return Aws_restJson1_parseErrorBody(output.body, context);
        case 5:
          _context8.t3 = _context8.sent;
          _context8.t4 = {
            body: _context8.t3
          };
          parsedOutput = (0, _context8.t0)(_context8.t1, _context8.t2, _context8.t4);
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _context8.t5 = errorCode;
          _context8.next = _context8.t5 === "InvalidRequestException" ? 12 : _context8.t5 === "com.amazonaws.sso#InvalidRequestException" ? 12 : _context8.t5 === "ResourceNotFoundException" ? 15 : _context8.t5 === "com.amazonaws.sso#ResourceNotFoundException" ? 15 : _context8.t5 === "TooManyRequestsException" ? 18 : _context8.t5 === "com.amazonaws.sso#TooManyRequestsException" ? 18 : _context8.t5 === "UnauthorizedException" ? 21 : _context8.t5 === "com.amazonaws.sso#UnauthorizedException" ? 21 : 24;
          break;
        case 12:
          _context8.next = 14;
          return de_InvalidRequestExceptionRes(parsedOutput, context);
        case 14:
          throw _context8.sent;
        case 15:
          _context8.next = 17;
          return de_ResourceNotFoundExceptionRes(parsedOutput, context);
        case 17:
          throw _context8.sent;
        case 18:
          _context8.next = 20;
          return de_TooManyRequestsExceptionRes(parsedOutput, context);
        case 20:
          throw _context8.sent;
        case 21:
          _context8.next = 23;
          return de_UnauthorizedExceptionRes(parsedOutput, context);
        case 23:
          throw _context8.sent;
        case 24:
          parsedBody = parsedOutput.body;
          return _context8.abrupt("return", Aws_restJson1_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 26:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return function de_ListAccountRolesCommandError(_x15, _x16) {
    return _ref8.apply(this, arguments);
  };
}()));
var de_ListAccountsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(output, context) {
    var contents, data, doc;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context9.next = 2;
            break;
          }
          return _context9.abrupt("return", de_ListAccountsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restJson1_deserializeMetadata(output)
          });
          _context9.t0 = __expectNonNull;
          _context9.t1 = __expectObject;
          _context9.next = 7;
          return Aws_restJson1_parseBody(output.body, context);
        case 7:
          _context9.t2 = _context9.sent;
          _context9.t3 = (0, _context9.t1)(_context9.t2);
          data = (0, _context9.t0)(_context9.t3, "body");
          doc = take(data, {
            accountList: _json,
            nextToken: __expectString
          });
          Object.assign(contents, doc);
          return _context9.abrupt("return", contents);
        case 13:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return function de_ListAccountsCommand(_x17, _x18) {
    return _ref9.apply(this, arguments);
  };
}()));
var de_ListAccountsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.t0 = _objectSpread;
          _context10.t1 = _objectSpread({}, output);
          _context10.t2 = {};
          _context10.next = 5;
          return Aws_restJson1_parseErrorBody(output.body, context);
        case 5:
          _context10.t3 = _context10.sent;
          _context10.t4 = {
            body: _context10.t3
          };
          parsedOutput = (0, _context10.t0)(_context10.t1, _context10.t2, _context10.t4);
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _context10.t5 = errorCode;
          _context10.next = _context10.t5 === "InvalidRequestException" ? 12 : _context10.t5 === "com.amazonaws.sso#InvalidRequestException" ? 12 : _context10.t5 === "ResourceNotFoundException" ? 15 : _context10.t5 === "com.amazonaws.sso#ResourceNotFoundException" ? 15 : _context10.t5 === "TooManyRequestsException" ? 18 : _context10.t5 === "com.amazonaws.sso#TooManyRequestsException" ? 18 : _context10.t5 === "UnauthorizedException" ? 21 : _context10.t5 === "com.amazonaws.sso#UnauthorizedException" ? 21 : 24;
          break;
        case 12:
          _context10.next = 14;
          return de_InvalidRequestExceptionRes(parsedOutput, context);
        case 14:
          throw _context10.sent;
        case 15:
          _context10.next = 17;
          return de_ResourceNotFoundExceptionRes(parsedOutput, context);
        case 17:
          throw _context10.sent;
        case 18:
          _context10.next = 20;
          return de_TooManyRequestsExceptionRes(parsedOutput, context);
        case 20:
          throw _context10.sent;
        case 21:
          _context10.next = 23;
          return de_UnauthorizedExceptionRes(parsedOutput, context);
        case 23:
          throw _context10.sent;
        case 24:
          parsedBody = parsedOutput.body;
          return _context10.abrupt("return", Aws_restJson1_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 26:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return function de_ListAccountsCommandError(_x19, _x20) {
    return _ref10.apply(this, arguments);
  };
}()));
var de_LogoutCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context11.next = 2;
            break;
          }
          return _context11.abrupt("return", de_LogoutCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restJson1_deserializeMetadata(output)
          });
          _context11.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context11.abrupt("return", contents);
        case 6:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return function de_LogoutCommand(_x21, _x22) {
    return _ref11.apply(this, arguments);
  };
}()));
var de_LogoutCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          _context12.t0 = _objectSpread;
          _context12.t1 = _objectSpread({}, output);
          _context12.t2 = {};
          _context12.next = 5;
          return Aws_restJson1_parseErrorBody(output.body, context);
        case 5:
          _context12.t3 = _context12.sent;
          _context12.t4 = {
            body: _context12.t3
          };
          parsedOutput = (0, _context12.t0)(_context12.t1, _context12.t2, _context12.t4);
          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
          _context12.t5 = errorCode;
          _context12.next = _context12.t5 === "InvalidRequestException" ? 12 : _context12.t5 === "com.amazonaws.sso#InvalidRequestException" ? 12 : _context12.t5 === "TooManyRequestsException" ? 15 : _context12.t5 === "com.amazonaws.sso#TooManyRequestsException" ? 15 : _context12.t5 === "UnauthorizedException" ? 18 : _context12.t5 === "com.amazonaws.sso#UnauthorizedException" ? 18 : 21;
          break;
        case 12:
          _context12.next = 14;
          return de_InvalidRequestExceptionRes(parsedOutput, context);
        case 14:
          throw _context12.sent;
        case 15:
          _context12.next = 17;
          return de_TooManyRequestsExceptionRes(parsedOutput, context);
        case 17:
          throw _context12.sent;
        case 18:
          _context12.next = 20;
          return de_UnauthorizedExceptionRes(parsedOutput, context);
        case 20:
          throw _context12.sent;
        case 21:
          parsedBody = parsedOutput.body;
          return _context12.abrupt("return", Aws_restJson1_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 23:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return function de_LogoutCommandError(_x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}()));
var Aws_restJson1_throwDefaultError = withBaseException(SSOServiceException);
var de_InvalidRequestExceptionRes = /*#__PURE__*/function () {
  var _ref13 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee13(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            message: expectString
          });
          Object.assign(contents, doc);
          exception = new InvalidRequestException(_objectSpread2({
            $metadata: Aws_restJson1_deserializeMetadata(parsedOutput)
          }, contents));
          return _context13.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function de_InvalidRequestExceptionRes(_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}();
var de_ResourceNotFoundExceptionRes = /*#__PURE__*/function () {
  var _ref14 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee14(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            message: expectString
          });
          Object.assign(contents, doc);
          exception = new ResourceNotFoundException(_objectSpread2({
            $metadata: Aws_restJson1_deserializeMetadata(parsedOutput)
          }, contents));
          return _context14.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return function de_ResourceNotFoundExceptionRes(_x27, _x28) {
    return _ref14.apply(this, arguments);
  };
}();
var de_TooManyRequestsExceptionRes = /*#__PURE__*/function () {
  var _ref15 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee15(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            message: expectString
          });
          Object.assign(contents, doc);
          exception = new TooManyRequestsException(_objectSpread2({
            $metadata: Aws_restJson1_deserializeMetadata(parsedOutput)
          }, contents));
          return _context15.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  }));
  return function de_TooManyRequestsExceptionRes(_x29, _x30) {
    return _ref15.apply(this, arguments);
  };
}();
var de_UnauthorizedExceptionRes = /*#__PURE__*/function () {
  var _ref16 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee16(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            message: expectString
          });
          Object.assign(contents, doc);
          exception = new UnauthorizedException(_objectSpread2({
            $metadata: Aws_restJson1_deserializeMetadata(parsedOutput)
          }, contents));
          return _context16.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return function de_UnauthorizedExceptionRes(_x31, _x32) {
    return _ref16.apply(this, arguments);
  };
}();
var Aws_restJson1_deserializeMetadata = function deserializeMetadata(output) {
  var _ref17, _output$headers$xAmz;
  return {
    httpStatusCode: output.statusCode,
    requestId: (_ref17 = (_output$headers$xAmz = output.headers["x-amzn-requestid"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers["x-amzn-request-id"]) !== null && _ref17 !== void 0 ? _ref17 : output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
};
var Aws_restJson1_collectBodyString = function collectBodyString(streamBody, context) {
  return collect_stream_body_collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
var isSerializableHeaderValue = function isSerializableHeaderValue(value) {
  return value !== undefined && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);
};
var Aws_restJson1_parseBody = function parseBody(streamBody, context) {
  return Aws_restJson1_collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      return JSON.parse(encoded);
    }
    return {};
  });
};
var Aws_restJson1_parseErrorBody = /*#__PURE__*/function () {
  var _ref18 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee17(errorBody, context) {
    var _value$message;
    var value;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          _context17.next = 2;
          return Aws_restJson1_parseBody(errorBody, context);
        case 2:
          value = _context17.sent;
          value.message = (_value$message = value.message) !== null && _value$message !== void 0 ? _value$message : value.Message;
          return _context17.abrupt("return", value);
        case 5:
        case "end":
          return _context17.stop();
      }
    }, _callee17);
  }));
  return function parseErrorBody(_x33, _x34) {
    return _ref18.apply(this, arguments);
  };
}();
var loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {
  var findKey = function findKey(object, key) {
    return Object.keys(object).find(function (k) {
      return k.toLowerCase() === key.toLowerCase();
    });
  };
  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {
    var cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  };
  var headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== undefined) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== undefined) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== undefined) {
    return sanitizeErrorCode(data["__type"]);
  }
};
;// ./node_modules/.pnpm/@aws-sdk+client-sso@3.395.0/node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js










var GetRoleCredentialsCommand = /*#__PURE__*/function (_$Command) {
  function GetRoleCredentialsCommand(input) {
    var _this;
    classCallCheck_classCallCheck(this, GetRoleCredentialsCommand);
    _this = callSuper_callSuper(this, GetRoleCredentialsCommand);
    _this.input = input;
    return _this;
  }
  inherits_inherits(GetRoleCredentialsCommand, _$Command);
  return createClass_createClass(GetRoleCredentialsCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, GetRoleCredentialsCommand.getEndpointParameterInstructions()));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "SSOClient";
      var commandName = "GetRoleCredentialsCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: GetRoleCredentialsRequestFilterSensitiveLog,
        outputFilterSensitiveLog: GetRoleCredentialsResponseFilterSensitiveLog
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_GetRoleCredentialsCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_GetRoleCredentialsCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);
;// ./node_modules/.pnpm/@smithy+property-provider@2.0.3/node_modules/@smithy/property-provider/dist-es/TokenProviderError.js





var TokenProviderError = /*#__PURE__*/function (_ProviderError) {
  function TokenProviderError(message) {
    var _this;
    var tryNextLink = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    classCallCheck_classCallCheck(this, TokenProviderError);
    _this = callSuper_callSuper(this, TokenProviderError, [message, tryNextLink]);
    _this.tryNextLink = tryNextLink;
    _this.name = "TokenProviderError";
    Object.setPrototypeOf(_this, TokenProviderError.prototype);
    return _this;
  }
  inherits_inherits(TokenProviderError, _ProviderError);
  return createClass_createClass(TokenProviderError);
}(ProviderError);
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/constants.js
var EXPIRE_WINDOW_MS = 5 * 60 * 1000;
var REFRESH_MESSAGE = "To refresh this SSO session run 'aws sso login' with the corresponding profile.";
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/bundle/client-sso-oidc-node.js



















var client_sso_oidc_node_resolveClientEndpointParameters = function resolveClientEndpointParameters(options) {
  var _options$useDualstack, _options$useFipsEndpo;
  return _objectSpread2(_objectSpread2({}, options), {}, {
    useDualstackEndpoint: (_options$useDualstack = options.useDualstackEndpoint) !== null && _options$useDualstack !== void 0 ? _options$useDualstack : false,
    useFipsEndpoint: (_options$useFipsEndpo = options.useFipsEndpoint) !== null && _options$useFipsEndpo !== void 0 ? _options$useFipsEndpo : false,
    defaultSigningName: "awsssooidc"
  });
};
var package_default = {
  version: "3.387.0"
};













var client_sso_oidc_node_p = "required";
var client_sso_oidc_node_q = "fn";
var client_sso_oidc_node_r = "argv";
var client_sso_oidc_node_s = "ref";
var client_sso_oidc_node_a = "PartitionResult";
var client_sso_oidc_node_b = "tree";
var client_sso_oidc_node_c = "error";
var client_sso_oidc_node_d = "endpoint";
var client_sso_oidc_node_e = defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_p, false), "type", "String");
var client_sso_oidc_node_f = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_p, true), "default", false), "type", "Boolean");
var client_sso_oidc_node_g = defineProperty_defineProperty({}, client_sso_oidc_node_s, "Endpoint");
var client_sso_oidc_node_h = defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "booleanEquals"), client_sso_oidc_node_r, [defineProperty_defineProperty({}, client_sso_oidc_node_s, "UseFIPS"), true]);
var client_sso_oidc_node_i = defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "booleanEquals"), client_sso_oidc_node_r, [defineProperty_defineProperty({}, client_sso_oidc_node_s, "UseDualStack"), true]);
var client_sso_oidc_node_j = {};
var client_sso_oidc_node_k = defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "booleanEquals"), client_sso_oidc_node_r, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "getAttr"), client_sso_oidc_node_r, [defineProperty_defineProperty({}, client_sso_oidc_node_s, client_sso_oidc_node_a), "supportsFIPS"])]);
var client_sso_oidc_node_l = defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "booleanEquals"), client_sso_oidc_node_r, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "getAttr"), client_sso_oidc_node_r, [defineProperty_defineProperty({}, client_sso_oidc_node_s, client_sso_oidc_node_a), "supportsDualStack"])]);
var client_sso_oidc_node_m = [client_sso_oidc_node_g];
var client_sso_oidc_node_n = [client_sso_oidc_node_h];
var client_sso_oidc_node_o = [client_sso_oidc_node_i];
var client_sso_oidc_node_data = {
  version: "1.0",
  parameters: {
    Region: client_sso_oidc_node_e,
    UseDualStack: client_sso_oidc_node_f,
    UseFIPS: client_sso_oidc_node_f,
    Endpoint: client_sso_oidc_node_e
  },
  rules: [{
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "aws.partition"), client_sso_oidc_node_r, [defineProperty_defineProperty({}, client_sso_oidc_node_s, "Region")]), "assign", client_sso_oidc_node_a)],
    type: client_sso_oidc_node_b,
    rules: [{
      conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "isSet"), client_sso_oidc_node_r, client_sso_oidc_node_m), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, client_sso_oidc_node_q, "parseURL"), client_sso_oidc_node_r, client_sso_oidc_node_m), "assign", "url")],
      type: client_sso_oidc_node_b,
      rules: [{
        conditions: client_sso_oidc_node_n,
        error: "Invalid Configuration: FIPS and custom endpoint are not supported",
        type: client_sso_oidc_node_c
      }, {
        type: client_sso_oidc_node_b,
        rules: [{
          conditions: client_sso_oidc_node_o,
          error: "Invalid Configuration: Dualstack and custom endpoint are not supported",
          type: client_sso_oidc_node_c
        }, {
          endpoint: {
            url: client_sso_oidc_node_g,
            properties: client_sso_oidc_node_j,
            headers: client_sso_oidc_node_j
          },
          type: client_sso_oidc_node_d
        }]
      }]
    }, {
      conditions: [client_sso_oidc_node_h, client_sso_oidc_node_i],
      type: client_sso_oidc_node_b,
      rules: [{
        conditions: [client_sso_oidc_node_k, client_sso_oidc_node_l],
        type: client_sso_oidc_node_b,
        rules: [{
          endpoint: {
            url: "https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
            properties: client_sso_oidc_node_j,
            headers: client_sso_oidc_node_j
          },
          type: client_sso_oidc_node_d
        }]
      }, {
        error: "FIPS and DualStack are enabled, but this partition does not support one or both",
        type: client_sso_oidc_node_c
      }]
    }, {
      conditions: client_sso_oidc_node_n,
      type: client_sso_oidc_node_b,
      rules: [{
        conditions: [client_sso_oidc_node_k],
        type: client_sso_oidc_node_b,
        rules: [{
          type: client_sso_oidc_node_b,
          rules: [{
            endpoint: {
              url: "https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}",
              properties: client_sso_oidc_node_j,
              headers: client_sso_oidc_node_j
            },
            type: client_sso_oidc_node_d
          }]
        }]
      }, {
        error: "FIPS is enabled but this partition does not support FIPS",
        type: client_sso_oidc_node_c
      }]
    }, {
      conditions: client_sso_oidc_node_o,
      type: client_sso_oidc_node_b,
      rules: [{
        conditions: [client_sso_oidc_node_l],
        type: client_sso_oidc_node_b,
        rules: [{
          endpoint: {
            url: "https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}",
            properties: client_sso_oidc_node_j,
            headers: client_sso_oidc_node_j
          },
          type: client_sso_oidc_node_d
        }]
      }, {
        error: "DualStack is enabled but this partition does not support DualStack",
        type: client_sso_oidc_node_c
      }]
    }, {
      endpoint: {
        url: "https://oidc.{Region}.{PartitionResult#dnsSuffix}",
        properties: client_sso_oidc_node_j,
        headers: client_sso_oidc_node_j
      },
      type: client_sso_oidc_node_d
    }]
  }]
};
var client_sso_oidc_node_ruleSet = client_sso_oidc_node_data;
var client_sso_oidc_node_defaultEndpointResolver = function defaultEndpointResolver(endpointParams) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return resolveEndpoint(client_sso_oidc_node_ruleSet, {
    endpointParams: endpointParams,
    logger: context.logger
  });
};
var client_sso_oidc_node_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$base64Decoder, _config$base64Encoder, _config$disableHostPr, _config$endpointProvi, _config$logger, _config$serviceId, _config$urlParser, _config$utf8Decoder, _config$utf8Encoder;
  return {
    apiVersion: "2019-06-10",
    base64Decoder: (_config$base64Decoder = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _config$base64Decoder !== void 0 ? _config$base64Decoder : fromBase64,
    base64Encoder: (_config$base64Encoder = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _config$base64Encoder !== void 0 ? _config$base64Encoder : toBase64,
    disableHostPrefix: (_config$disableHostPr = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _config$disableHostPr !== void 0 ? _config$disableHostPr : false,
    endpointProvider: (_config$endpointProvi = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _config$endpointProvi !== void 0 ? _config$endpointProvi : client_sso_oidc_node_defaultEndpointResolver,
    logger: (_config$logger = config === null || config === void 0 ? void 0 : config.logger) !== null && _config$logger !== void 0 ? _config$logger : new NoOpLogger(),
    serviceId: (_config$serviceId = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _config$serviceId !== void 0 ? _config$serviceId : "SSO OIDC",
    urlParser: (_config$urlParser = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _config$urlParser !== void 0 ? _config$urlParser : parseUrl,
    utf8Decoder: (_config$utf8Decoder = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _config$utf8Decoder !== void 0 ? _config$utf8Decoder : fromUtf8,
    utf8Encoder: (_config$utf8Encoder = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _config$utf8Encoder !== void 0 ? _config$utf8Encoder : toUtf8
  };
};



var getRuntimeConfig2 = function getRuntimeConfig2(config) {
  var _config$bodyLengthChe, _config$defaultUserAg, _config$maxAttempts, _config$region, _config$requestHandle, _config$retryMode, _config$sha, _config$streamCollect, _config$useDualstackE, _config$useFipsEndpoi;
  emitWarningIfUnsupportedVersion(process.version);
  var defaultsMode = resolveDefaultsModeConfig(config);
  var defaultConfigProvider = function defaultConfigProvider() {
    return defaultsMode().then(loadConfigsForDefaultMode);
  };
  var clientSharedValues = client_sso_oidc_node_getRuntimeConfig(config);
  return _objectSpread2(_objectSpread2(_objectSpread2({}, clientSharedValues), config), {}, {
    runtime: "node",
    defaultsMode: defaultsMode,
    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,
    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : defaultUserAgent({
      serviceId: clientSharedValues.serviceId,
      clientVersion: package_default.version
    }),
    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : loadConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),
    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : loadConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),
    requestHandler: (_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : new NodeHttpHandler(defaultConfigProvider),
    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : loadConfig(_objectSpread2(_objectSpread2({}, NODE_RETRY_MODE_CONFIG_OPTIONS), {}, {
      "default": function () {
        var _default2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
          return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return defaultConfigProvider();
              case 2:
                _context.t0 = _context.sent.retryMode;
                if (_context.t0) {
                  _context.next = 5;
                  break;
                }
                _context.t0 = DEFAULT_RETRY_MODE;
              case 5:
                return _context.abrupt("return", _context.t0);
              case 6:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function _default() {
          return _default2.apply(this, arguments);
        }
        return _default;
      }()
    })),
    sha256: (_config$sha = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha !== void 0 ? _config$sha : Hash.bind(null, "sha256"),
    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,
    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : loadConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),
    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : loadConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)
  });
};
var SSOOIDCClient = /*#__PURE__*/function (_Client) {
  function SSOOIDCClient() {
    var _this;
    for (var _len = arguments.length, _ref11 = new Array(_len), _key = 0; _key < _len; _key++) {
      _ref11[_key] = arguments[_key];
    }
    var configuration = _ref11[0];
    classCallCheck_classCallCheck(this, SSOOIDCClient);
    var _config_0 = getRuntimeConfig2(configuration || {});
    var _config_1 = client_sso_oidc_node_resolveClientEndpointParameters(_config_0);
    var _config_2 = resolveRegionConfig(_config_1);
    var _config_3 = resolveEndpointConfig(_config_2);
    var _config_4 = resolveRetryConfig(_config_3);
    var _config_5 = resolveHostHeaderConfig(_config_4);
    var _config_6 = resolveUserAgentConfig(_config_5);
    _this = callSuper_callSuper(this, SSOOIDCClient, [_config_6]);
    _this.config = _config_6;
    _this.middlewareStack.use(getRetryPlugin(_this.config));
    _this.middlewareStack.use(getContentLengthPlugin(_this.config));
    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));
    _this.middlewareStack.use(getLoggerPlugin(_this.config));
    _this.middlewareStack.use(getRecursionDetectionPlugin(_this.config));
    _this.middlewareStack.use(getUserAgentPlugin(_this.config));
    return _this;
  }
  inherits_inherits(SSOOIDCClient, _Client);
  return createClass_createClass(SSOOIDCClient, [{
    key: "destroy",
    value: function destroy() {
      get_get(getPrototypeOf_getPrototypeOf(SSOOIDCClient.prototype), "destroy", this).call(this);
    }
  }]);
}(Client);







var SSOOIDCServiceException = /*#__PURE__*/function (_ServiceException) {
  function _SSOOIDCServiceException(options) {
    var _this2;
    classCallCheck_classCallCheck(this, _SSOOIDCServiceException);
    _this2 = callSuper_callSuper(this, _SSOOIDCServiceException, [options]);
    Object.setPrototypeOf(_this2, _SSOOIDCServiceException.prototype);
    return _this2;
  }
  inherits_inherits(_SSOOIDCServiceException, _ServiceException);
  return createClass_createClass(_SSOOIDCServiceException);
}(ServiceException);
var AccessDeniedException = /*#__PURE__*/function (_SSOOIDCServiceExcept) {
  function _AccessDeniedException(opts) {
    var _this3;
    classCallCheck_classCallCheck(this, _AccessDeniedException);
    _this3 = callSuper_callSuper(this, _AccessDeniedException, [_objectSpread2({
      name: "AccessDeniedException",
      $fault: "client"
    }, opts)]);
    _this3.name = "AccessDeniedException";
    _this3.$fault = "client";
    Object.setPrototypeOf(_this3, _AccessDeniedException.prototype);
    _this3.error = opts.error;
    _this3.error_description = opts.error_description;
    return _this3;
  }
  inherits_inherits(_AccessDeniedException, _SSOOIDCServiceExcept);
  return createClass_createClass(_AccessDeniedException);
}(SSOOIDCServiceException);
var AuthorizationPendingException = /*#__PURE__*/function (_SSOOIDCServiceExcept2) {
  function _AuthorizationPendingException(opts) {
    var _this4;
    classCallCheck_classCallCheck(this, _AuthorizationPendingException);
    _this4 = callSuper_callSuper(this, _AuthorizationPendingException, [_objectSpread2({
      name: "AuthorizationPendingException",
      $fault: "client"
    }, opts)]);
    _this4.name = "AuthorizationPendingException";
    _this4.$fault = "client";
    Object.setPrototypeOf(_this4, _AuthorizationPendingException.prototype);
    _this4.error = opts.error;
    _this4.error_description = opts.error_description;
    return _this4;
  }
  inherits_inherits(_AuthorizationPendingException, _SSOOIDCServiceExcept2);
  return createClass_createClass(_AuthorizationPendingException);
}(SSOOIDCServiceException);
var client_sso_oidc_node_ExpiredTokenException = /*#__PURE__*/function (_SSOOIDCServiceExcept3) {
  function _ExpiredTokenException(opts) {
    var _this5;
    classCallCheck_classCallCheck(this, _ExpiredTokenException);
    _this5 = callSuper_callSuper(this, _ExpiredTokenException, [_objectSpread2({
      name: "ExpiredTokenException",
      $fault: "client"
    }, opts)]);
    _this5.name = "ExpiredTokenException";
    _this5.$fault = "client";
    Object.setPrototypeOf(_this5, _ExpiredTokenException.prototype);
    _this5.error = opts.error;
    _this5.error_description = opts.error_description;
    return _this5;
  }
  inherits_inherits(_ExpiredTokenException, _SSOOIDCServiceExcept3);
  return createClass_createClass(_ExpiredTokenException);
}(SSOOIDCServiceException);
var InternalServerException = /*#__PURE__*/function (_SSOOIDCServiceExcept4) {
  function _InternalServerException(opts) {
    var _this6;
    classCallCheck_classCallCheck(this, _InternalServerException);
    _this6 = callSuper_callSuper(this, _InternalServerException, [_objectSpread2({
      name: "InternalServerException",
      $fault: "server"
    }, opts)]);
    _this6.name = "InternalServerException";
    _this6.$fault = "server";
    Object.setPrototypeOf(_this6, _InternalServerException.prototype);
    _this6.error = opts.error;
    _this6.error_description = opts.error_description;
    return _this6;
  }
  inherits_inherits(_InternalServerException, _SSOOIDCServiceExcept4);
  return createClass_createClass(_InternalServerException);
}(SSOOIDCServiceException);
var InvalidClientException = /*#__PURE__*/function (_SSOOIDCServiceExcept5) {
  function _InvalidClientException(opts) {
    var _this7;
    classCallCheck_classCallCheck(this, _InvalidClientException);
    _this7 = callSuper_callSuper(this, _InvalidClientException, [_objectSpread2({
      name: "InvalidClientException",
      $fault: "client"
    }, opts)]);
    _this7.name = "InvalidClientException";
    _this7.$fault = "client";
    Object.setPrototypeOf(_this7, _InvalidClientException.prototype);
    _this7.error = opts.error;
    _this7.error_description = opts.error_description;
    return _this7;
  }
  inherits_inherits(_InvalidClientException, _SSOOIDCServiceExcept5);
  return createClass_createClass(_InvalidClientException);
}(SSOOIDCServiceException);
var InvalidGrantException = /*#__PURE__*/function (_SSOOIDCServiceExcept6) {
  function _InvalidGrantException(opts) {
    var _this8;
    classCallCheck_classCallCheck(this, _InvalidGrantException);
    _this8 = callSuper_callSuper(this, _InvalidGrantException, [_objectSpread2({
      name: "InvalidGrantException",
      $fault: "client"
    }, opts)]);
    _this8.name = "InvalidGrantException";
    _this8.$fault = "client";
    Object.setPrototypeOf(_this8, _InvalidGrantException.prototype);
    _this8.error = opts.error;
    _this8.error_description = opts.error_description;
    return _this8;
  }
  inherits_inherits(_InvalidGrantException, _SSOOIDCServiceExcept6);
  return createClass_createClass(_InvalidGrantException);
}(SSOOIDCServiceException);
var client_sso_oidc_node_InvalidRequestException = /*#__PURE__*/function (_SSOOIDCServiceExcept7) {
  function _InvalidRequestException(opts) {
    var _this9;
    classCallCheck_classCallCheck(this, _InvalidRequestException);
    _this9 = callSuper_callSuper(this, _InvalidRequestException, [_objectSpread2({
      name: "InvalidRequestException",
      $fault: "client"
    }, opts)]);
    _this9.name = "InvalidRequestException";
    _this9.$fault = "client";
    Object.setPrototypeOf(_this9, _InvalidRequestException.prototype);
    _this9.error = opts.error;
    _this9.error_description = opts.error_description;
    return _this9;
  }
  inherits_inherits(_InvalidRequestException, _SSOOIDCServiceExcept7);
  return createClass_createClass(_InvalidRequestException);
}(SSOOIDCServiceException);
var InvalidScopeException = /*#__PURE__*/function (_SSOOIDCServiceExcept8) {
  function _InvalidScopeException(opts) {
    var _this10;
    classCallCheck_classCallCheck(this, _InvalidScopeException);
    _this10 = callSuper_callSuper(this, _InvalidScopeException, [_objectSpread2({
      name: "InvalidScopeException",
      $fault: "client"
    }, opts)]);
    _this10.name = "InvalidScopeException";
    _this10.$fault = "client";
    Object.setPrototypeOf(_this10, _InvalidScopeException.prototype);
    _this10.error = opts.error;
    _this10.error_description = opts.error_description;
    return _this10;
  }
  inherits_inherits(_InvalidScopeException, _SSOOIDCServiceExcept8);
  return createClass_createClass(_InvalidScopeException);
}(SSOOIDCServiceException);
var SlowDownException = /*#__PURE__*/function (_SSOOIDCServiceExcept9) {
  function _SlowDownException(opts) {
    var _this11;
    classCallCheck_classCallCheck(this, _SlowDownException);
    _this11 = callSuper_callSuper(this, _SlowDownException, [_objectSpread2({
      name: "SlowDownException",
      $fault: "client"
    }, opts)]);
    _this11.name = "SlowDownException";
    _this11.$fault = "client";
    Object.setPrototypeOf(_this11, _SlowDownException.prototype);
    _this11.error = opts.error;
    _this11.error_description = opts.error_description;
    return _this11;
  }
  inherits_inherits(_SlowDownException, _SSOOIDCServiceExcept9);
  return createClass_createClass(_SlowDownException);
}(SSOOIDCServiceException);
var UnauthorizedClientException = /*#__PURE__*/function (_SSOOIDCServiceExcept10) {
  function _UnauthorizedClientException(opts) {
    var _this12;
    classCallCheck_classCallCheck(this, _UnauthorizedClientException);
    _this12 = callSuper_callSuper(this, _UnauthorizedClientException, [_objectSpread2({
      name: "UnauthorizedClientException",
      $fault: "client"
    }, opts)]);
    _this12.name = "UnauthorizedClientException";
    _this12.$fault = "client";
    Object.setPrototypeOf(_this12, _UnauthorizedClientException.prototype);
    _this12.error = opts.error;
    _this12.error_description = opts.error_description;
    return _this12;
  }
  inherits_inherits(_UnauthorizedClientException, _SSOOIDCServiceExcept10);
  return createClass_createClass(_UnauthorizedClientException);
}(SSOOIDCServiceException);
var UnsupportedGrantTypeException = /*#__PURE__*/function (_SSOOIDCServiceExcept11) {
  function _UnsupportedGrantTypeException(opts) {
    var _this13;
    classCallCheck_classCallCheck(this, _UnsupportedGrantTypeException);
    _this13 = callSuper_callSuper(this, _UnsupportedGrantTypeException, [_objectSpread2({
      name: "UnsupportedGrantTypeException",
      $fault: "client"
    }, opts)]);
    _this13.name = "UnsupportedGrantTypeException";
    _this13.$fault = "client";
    Object.setPrototypeOf(_this13, _UnsupportedGrantTypeException.prototype);
    _this13.error = opts.error;
    _this13.error_description = opts.error_description;
    return _this13;
  }
  inherits_inherits(_UnsupportedGrantTypeException, _SSOOIDCServiceExcept11);
  return createClass_createClass(_UnsupportedGrantTypeException);
}(SSOOIDCServiceException);
var InvalidClientMetadataException = /*#__PURE__*/function (_SSOOIDCServiceExcept12) {
  function _InvalidClientMetadataException(opts) {
    var _this14;
    classCallCheck_classCallCheck(this, _InvalidClientMetadataException);
    _this14 = callSuper_callSuper(this, _InvalidClientMetadataException, [_objectSpread2({
      name: "InvalidClientMetadataException",
      $fault: "client"
    }, opts)]);
    _this14.name = "InvalidClientMetadataException";
    _this14.$fault = "client";
    Object.setPrototypeOf(_this14, _InvalidClientMetadataException.prototype);
    _this14.error = opts.error;
    _this14.error_description = opts.error_description;
    return _this14;
  }
  inherits_inherits(_InvalidClientMetadataException, _SSOOIDCServiceExcept12);
  return createClass_createClass(_InvalidClientMetadataException);
}(SSOOIDCServiceException);
var se_CreateTokenCommand = /*#__PURE__*/function () {
  var _ref12 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(input, context) {
    var _yield$context$endpoi, hostname, _yield$context$endpoi2, protocol, port, basePath, headers, resolvedPath, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi = _context2.sent;
          hostname = _yield$context$endpoi.hostname;
          _yield$context$endpoi2 = _yield$context$endpoi.protocol;
          protocol = _yield$context$endpoi2 === void 0 ? "https" : _yield$context$endpoi2;
          port = _yield$context$endpoi.port;
          basePath = _yield$context$endpoi.path;
          headers = {
            "content-type": "application/json"
          };
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "", "/token");
          body = JSON.stringify(object_mapping_take(input, {
            clientId: [],
            clientSecret: [],
            code: [],
            deviceCode: [],
            grantType: [],
            redirectUri: [],
            refreshToken: [],
            scope: function scope(_) {
              return serde_json_json(_);
            }
          }));
          return _context2.abrupt("return", new httpRequest_HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function se_CreateTokenCommand(_x, _x2) {
    return _ref12.apply(this, arguments);
  };
}();
var se_RegisterClientCommand = /*#__PURE__*/function () {
  var _ref13 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(input, context) {
    var _yield$context$endpoi3, hostname, _yield$context$endpoi4, protocol, port, basePath, headers, resolvedPath, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi3 = _context3.sent;
          hostname = _yield$context$endpoi3.hostname;
          _yield$context$endpoi4 = _yield$context$endpoi3.protocol;
          protocol = _yield$context$endpoi4 === void 0 ? "https" : _yield$context$endpoi4;
          port = _yield$context$endpoi3.port;
          basePath = _yield$context$endpoi3.path;
          headers = {
            "content-type": "application/json"
          };
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "", "/client/register");
          body = JSON.stringify(object_mapping_take(input, {
            clientName: [],
            clientType: [],
            scopes: function scopes(_) {
              return serde_json_json(_);
            }
          }));
          return _context3.abrupt("return", new httpRequest_HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function se_RegisterClientCommand(_x3, _x4) {
    return _ref13.apply(this, arguments);
  };
}();
var se_StartDeviceAuthorizationCommand = /*#__PURE__*/function () {
  var _ref14 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee4(input, context) {
    var _yield$context$endpoi5, hostname, _yield$context$endpoi6, protocol, port, basePath, headers, resolvedPath, body;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi5 = _context4.sent;
          hostname = _yield$context$endpoi5.hostname;
          _yield$context$endpoi6 = _yield$context$endpoi5.protocol;
          protocol = _yield$context$endpoi6 === void 0 ? "https" : _yield$context$endpoi6;
          port = _yield$context$endpoi5.port;
          basePath = _yield$context$endpoi5.path;
          headers = {
            "content-type": "application/json"
          };
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "", "/device_authorization");
          body = JSON.stringify(object_mapping_take(input, {
            clientId: [],
            clientSecret: [],
            startUrl: []
          }));
          return _context4.abrupt("return", new httpRequest_HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function se_StartDeviceAuthorizationCommand(_x5, _x6) {
    return _ref14.apply(this, arguments);
  };
}();
var de_CreateTokenCommand = /*#__PURE__*/function () {
  var _ref15 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee5(output, context) {
    var contents, data, doc;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context5.next = 2;
            break;
          }
          return _context5.abrupt("return", de_CreateTokenCommandError(output, context));
        case 2:
          contents = object_mapping_map({
            $metadata: client_sso_oidc_node_deserializeMetadata(output)
          });
          _context5.t0 = expectNonNull;
          _context5.t1 = expectObject;
          _context5.next = 7;
          return client_sso_oidc_node_parseBody(output.body, context);
        case 7:
          _context5.t2 = _context5.sent;
          _context5.t3 = (0, _context5.t1)(_context5.t2);
          data = (0, _context5.t0)(_context5.t3, "body");
          doc = object_mapping_take(data, {
            accessToken: expectString,
            expiresIn: expectInt32,
            idToken: expectString,
            refreshToken: expectString,
            tokenType: expectString
          });
          Object.assign(contents, doc);
          return _context5.abrupt("return", contents);
        case 13:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function de_CreateTokenCommand(_x7, _x8) {
    return _ref15.apply(this, arguments);
  };
}();
var de_CreateTokenCommandError = /*#__PURE__*/function () {
  var _ref16 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee6(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          _context6.t0 = _objectSpread2;
          _context6.t1 = _objectSpread2({}, output);
          _context6.t2 = {};
          _context6.next = 5;
          return client_sso_oidc_node_parseErrorBody(output.body, context);
        case 5:
          _context6.t3 = _context6.sent;
          _context6.t4 = {
            body: _context6.t3
          };
          parsedOutput = (0, _context6.t0)(_context6.t1, _context6.t2, _context6.t4);
          errorCode = client_sso_oidc_node_loadRestJsonErrorCode(output, parsedOutput.body);
          _context6.t5 = errorCode;
          _context6.next = _context6.t5 === "AccessDeniedException" ? 12 : _context6.t5 === "com.amazonaws.ssooidc#AccessDeniedException" ? 12 : _context6.t5 === "AuthorizationPendingException" ? 15 : _context6.t5 === "com.amazonaws.ssooidc#AuthorizationPendingException" ? 15 : _context6.t5 === "ExpiredTokenException" ? 18 : _context6.t5 === "com.amazonaws.ssooidc#ExpiredTokenException" ? 18 : _context6.t5 === "InternalServerException" ? 21 : _context6.t5 === "com.amazonaws.ssooidc#InternalServerException" ? 21 : _context6.t5 === "InvalidClientException" ? 24 : _context6.t5 === "com.amazonaws.ssooidc#InvalidClientException" ? 24 : _context6.t5 === "InvalidGrantException" ? 27 : _context6.t5 === "com.amazonaws.ssooidc#InvalidGrantException" ? 27 : _context6.t5 === "InvalidRequestException" ? 30 : _context6.t5 === "com.amazonaws.ssooidc#InvalidRequestException" ? 30 : _context6.t5 === "InvalidScopeException" ? 33 : _context6.t5 === "com.amazonaws.ssooidc#InvalidScopeException" ? 33 : _context6.t5 === "SlowDownException" ? 36 : _context6.t5 === "com.amazonaws.ssooidc#SlowDownException" ? 36 : _context6.t5 === "UnauthorizedClientException" ? 39 : _context6.t5 === "com.amazonaws.ssooidc#UnauthorizedClientException" ? 39 : _context6.t5 === "UnsupportedGrantTypeException" ? 42 : _context6.t5 === "com.amazonaws.ssooidc#UnsupportedGrantTypeException" ? 42 : 45;
          break;
        case 12:
          _context6.next = 14;
          return de_AccessDeniedExceptionRes(parsedOutput, context);
        case 14:
          throw _context6.sent;
        case 15:
          _context6.next = 17;
          return de_AuthorizationPendingExceptionRes(parsedOutput, context);
        case 17:
          throw _context6.sent;
        case 18:
          _context6.next = 20;
          return client_sso_oidc_node_de_ExpiredTokenExceptionRes(parsedOutput, context);
        case 20:
          throw _context6.sent;
        case 21:
          _context6.next = 23;
          return de_InternalServerExceptionRes(parsedOutput, context);
        case 23:
          throw _context6.sent;
        case 24:
          _context6.next = 26;
          return de_InvalidClientExceptionRes(parsedOutput, context);
        case 26:
          throw _context6.sent;
        case 27:
          _context6.next = 29;
          return de_InvalidGrantExceptionRes(parsedOutput, context);
        case 29:
          throw _context6.sent;
        case 30:
          _context6.next = 32;
          return client_sso_oidc_node_de_InvalidRequestExceptionRes(parsedOutput, context);
        case 32:
          throw _context6.sent;
        case 33:
          _context6.next = 35;
          return de_InvalidScopeExceptionRes(parsedOutput, context);
        case 35:
          throw _context6.sent;
        case 36:
          _context6.next = 38;
          return de_SlowDownExceptionRes(parsedOutput, context);
        case 38:
          throw _context6.sent;
        case 39:
          _context6.next = 41;
          return de_UnauthorizedClientExceptionRes(parsedOutput, context);
        case 41:
          throw _context6.sent;
        case 42:
          _context6.next = 44;
          return de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);
        case 44:
          throw _context6.sent;
        case 45:
          parsedBody = parsedOutput.body;
          return _context6.abrupt("return", client_sso_oidc_node_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 47:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return function de_CreateTokenCommandError(_x9, _x10) {
    return _ref16.apply(this, arguments);
  };
}();
var de_RegisterClientCommand = /*#__PURE__*/function () {
  var _ref17 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee7(output, context) {
    var contents, data, doc;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context7.next = 2;
            break;
          }
          return _context7.abrupt("return", de_RegisterClientCommandError(output, context));
        case 2:
          contents = object_mapping_map({
            $metadata: client_sso_oidc_node_deserializeMetadata(output)
          });
          _context7.t0 = expectNonNull;
          _context7.t1 = expectObject;
          _context7.next = 7;
          return client_sso_oidc_node_parseBody(output.body, context);
        case 7:
          _context7.t2 = _context7.sent;
          _context7.t3 = (0, _context7.t1)(_context7.t2);
          data = (0, _context7.t0)(_context7.t3, "body");
          doc = object_mapping_take(data, {
            authorizationEndpoint: expectString,
            clientId: expectString,
            clientIdIssuedAt: expectLong,
            clientSecret: expectString,
            clientSecretExpiresAt: expectLong,
            tokenEndpoint: expectString
          });
          Object.assign(contents, doc);
          return _context7.abrupt("return", contents);
        case 13:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function de_RegisterClientCommand(_x11, _x12) {
    return _ref17.apply(this, arguments);
  };
}();
var de_RegisterClientCommandError = /*#__PURE__*/function () {
  var _ref18 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee8(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          _context8.t0 = _objectSpread2;
          _context8.t1 = _objectSpread2({}, output);
          _context8.t2 = {};
          _context8.next = 5;
          return client_sso_oidc_node_parseErrorBody(output.body, context);
        case 5:
          _context8.t3 = _context8.sent;
          _context8.t4 = {
            body: _context8.t3
          };
          parsedOutput = (0, _context8.t0)(_context8.t1, _context8.t2, _context8.t4);
          errorCode = client_sso_oidc_node_loadRestJsonErrorCode(output, parsedOutput.body);
          _context8.t5 = errorCode;
          _context8.next = _context8.t5 === "InternalServerException" ? 12 : _context8.t5 === "com.amazonaws.ssooidc#InternalServerException" ? 12 : _context8.t5 === "InvalidClientMetadataException" ? 15 : _context8.t5 === "com.amazonaws.ssooidc#InvalidClientMetadataException" ? 15 : _context8.t5 === "InvalidRequestException" ? 18 : _context8.t5 === "com.amazonaws.ssooidc#InvalidRequestException" ? 18 : _context8.t5 === "InvalidScopeException" ? 21 : _context8.t5 === "com.amazonaws.ssooidc#InvalidScopeException" ? 21 : 24;
          break;
        case 12:
          _context8.next = 14;
          return de_InternalServerExceptionRes(parsedOutput, context);
        case 14:
          throw _context8.sent;
        case 15:
          _context8.next = 17;
          return de_InvalidClientMetadataExceptionRes(parsedOutput, context);
        case 17:
          throw _context8.sent;
        case 18:
          _context8.next = 20;
          return client_sso_oidc_node_de_InvalidRequestExceptionRes(parsedOutput, context);
        case 20:
          throw _context8.sent;
        case 21:
          _context8.next = 23;
          return de_InvalidScopeExceptionRes(parsedOutput, context);
        case 23:
          throw _context8.sent;
        case 24:
          parsedBody = parsedOutput.body;
          return _context8.abrupt("return", client_sso_oidc_node_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 26:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return function de_RegisterClientCommandError(_x13, _x14) {
    return _ref18.apply(this, arguments);
  };
}();
var de_StartDeviceAuthorizationCommand = /*#__PURE__*/function () {
  var _ref19 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee9(output, context) {
    var contents, data, doc;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context9.next = 2;
            break;
          }
          return _context9.abrupt("return", de_StartDeviceAuthorizationCommandError(output, context));
        case 2:
          contents = object_mapping_map({
            $metadata: client_sso_oidc_node_deserializeMetadata(output)
          });
          _context9.t0 = expectNonNull;
          _context9.t1 = expectObject;
          _context9.next = 7;
          return client_sso_oidc_node_parseBody(output.body, context);
        case 7:
          _context9.t2 = _context9.sent;
          _context9.t3 = (0, _context9.t1)(_context9.t2);
          data = (0, _context9.t0)(_context9.t3, "body");
          doc = object_mapping_take(data, {
            deviceCode: expectString,
            expiresIn: expectInt32,
            interval: expectInt32,
            userCode: expectString,
            verificationUri: expectString,
            verificationUriComplete: expectString
          });
          Object.assign(contents, doc);
          return _context9.abrupt("return", contents);
        case 13:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return function de_StartDeviceAuthorizationCommand(_x15, _x16) {
    return _ref19.apply(this, arguments);
  };
}();
var de_StartDeviceAuthorizationCommandError = /*#__PURE__*/function () {
  var _ref20 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee10(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.t0 = _objectSpread2;
          _context10.t1 = _objectSpread2({}, output);
          _context10.t2 = {};
          _context10.next = 5;
          return client_sso_oidc_node_parseErrorBody(output.body, context);
        case 5:
          _context10.t3 = _context10.sent;
          _context10.t4 = {
            body: _context10.t3
          };
          parsedOutput = (0, _context10.t0)(_context10.t1, _context10.t2, _context10.t4);
          errorCode = client_sso_oidc_node_loadRestJsonErrorCode(output, parsedOutput.body);
          _context10.t5 = errorCode;
          _context10.next = _context10.t5 === "InternalServerException" ? 12 : _context10.t5 === "com.amazonaws.ssooidc#InternalServerException" ? 12 : _context10.t5 === "InvalidClientException" ? 15 : _context10.t5 === "com.amazonaws.ssooidc#InvalidClientException" ? 15 : _context10.t5 === "InvalidRequestException" ? 18 : _context10.t5 === "com.amazonaws.ssooidc#InvalidRequestException" ? 18 : _context10.t5 === "SlowDownException" ? 21 : _context10.t5 === "com.amazonaws.ssooidc#SlowDownException" ? 21 : _context10.t5 === "UnauthorizedClientException" ? 24 : _context10.t5 === "com.amazonaws.ssooidc#UnauthorizedClientException" ? 24 : 27;
          break;
        case 12:
          _context10.next = 14;
          return de_InternalServerExceptionRes(parsedOutput, context);
        case 14:
          throw _context10.sent;
        case 15:
          _context10.next = 17;
          return de_InvalidClientExceptionRes(parsedOutput, context);
        case 17:
          throw _context10.sent;
        case 18:
          _context10.next = 20;
          return client_sso_oidc_node_de_InvalidRequestExceptionRes(parsedOutput, context);
        case 20:
          throw _context10.sent;
        case 21:
          _context10.next = 23;
          return de_SlowDownExceptionRes(parsedOutput, context);
        case 23:
          throw _context10.sent;
        case 24:
          _context10.next = 26;
          return de_UnauthorizedClientExceptionRes(parsedOutput, context);
        case 26:
          throw _context10.sent;
        case 27:
          parsedBody = parsedOutput.body;
          return _context10.abrupt("return", client_sso_oidc_node_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 29:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return function de_StartDeviceAuthorizationCommandError(_x17, _x18) {
    return _ref20.apply(this, arguments);
  };
}();
var client_sso_oidc_node_throwDefaultError = withBaseException(SSOOIDCServiceException);
var de_AccessDeniedExceptionRes = /*#__PURE__*/function () {
  var _ref21 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee11(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new AccessDeniedException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context11.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return function de_AccessDeniedExceptionRes(_x19, _x20) {
    return _ref21.apply(this, arguments);
  };
}();
var de_AuthorizationPendingExceptionRes = /*#__PURE__*/function () {
  var _ref22 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee12(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new AuthorizationPendingException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context12.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return function de_AuthorizationPendingExceptionRes(_x21, _x22) {
    return _ref22.apply(this, arguments);
  };
}();
var client_sso_oidc_node_de_ExpiredTokenExceptionRes = /*#__PURE__*/function () {
  var _ref23 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee13(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new client_sso_oidc_node_ExpiredTokenException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context13.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function de_ExpiredTokenExceptionRes(_x23, _x24) {
    return _ref23.apply(this, arguments);
  };
}();
var de_InternalServerExceptionRes = /*#__PURE__*/function () {
  var _ref24 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee14(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new InternalServerException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context14.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return function de_InternalServerExceptionRes(_x25, _x26) {
    return _ref24.apply(this, arguments);
  };
}();
var de_InvalidClientExceptionRes = /*#__PURE__*/function () {
  var _ref25 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee15(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new InvalidClientException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context15.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  }));
  return function de_InvalidClientExceptionRes(_x27, _x28) {
    return _ref25.apply(this, arguments);
  };
}();
var de_InvalidClientMetadataExceptionRes = /*#__PURE__*/function () {
  var _ref26 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee16(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new InvalidClientMetadataException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context16.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return function de_InvalidClientMetadataExceptionRes(_x29, _x30) {
    return _ref26.apply(this, arguments);
  };
}();
var de_InvalidGrantExceptionRes = /*#__PURE__*/function () {
  var _ref27 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee17(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new InvalidGrantException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context17.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context17.stop();
      }
    }, _callee17);
  }));
  return function de_InvalidGrantExceptionRes(_x31, _x32) {
    return _ref27.apply(this, arguments);
  };
}();
var client_sso_oidc_node_de_InvalidRequestExceptionRes = /*#__PURE__*/function () {
  var _ref28 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee18(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) switch (_context18.prev = _context18.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new client_sso_oidc_node_InvalidRequestException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context18.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context18.stop();
      }
    }, _callee18);
  }));
  return function de_InvalidRequestExceptionRes(_x33, _x34) {
    return _ref28.apply(this, arguments);
  };
}();
var de_InvalidScopeExceptionRes = /*#__PURE__*/function () {
  var _ref29 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee19(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee19$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new InvalidScopeException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context19.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context19.stop();
      }
    }, _callee19);
  }));
  return function de_InvalidScopeExceptionRes(_x35, _x36) {
    return _ref29.apply(this, arguments);
  };
}();
var de_SlowDownExceptionRes = /*#__PURE__*/function () {
  var _ref30 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee20(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new SlowDownException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context20.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context20.stop();
      }
    }, _callee20);
  }));
  return function de_SlowDownExceptionRes(_x37, _x38) {
    return _ref30.apply(this, arguments);
  };
}();
var de_UnauthorizedClientExceptionRes = /*#__PURE__*/function () {
  var _ref31 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee21(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee21$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new UnauthorizedClientException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context21.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context21.stop();
      }
    }, _callee21);
  }));
  return function de_UnauthorizedClientExceptionRes(_x39, _x40) {
    return _ref31.apply(this, arguments);
  };
}();
var de_UnsupportedGrantTypeExceptionRes = /*#__PURE__*/function () {
  var _ref32 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee22(parsedOutput, context) {
    var contents, data, doc, exception;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          contents = object_mapping_map({});
          data = parsedOutput.body;
          doc = object_mapping_take(data, {
            error: expectString,
            error_description: expectString
          });
          Object.assign(contents, doc);
          exception = new UnsupportedGrantTypeException(_objectSpread2({
            $metadata: client_sso_oidc_node_deserializeMetadata(parsedOutput)
          }, contents));
          return _context22.abrupt("return", decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context22.stop();
      }
    }, _callee22);
  }));
  return function de_UnsupportedGrantTypeExceptionRes(_x41, _x42) {
    return _ref32.apply(this, arguments);
  };
}();
var client_sso_oidc_node_deserializeMetadata = function deserializeMetadata(output) {
  var _ref33, _output$headers$xAmz;
  return {
    httpStatusCode: output.statusCode,
    requestId: (_ref33 = (_output$headers$xAmz = output.headers["x-amzn-requestid"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers["x-amzn-request-id"]) !== null && _ref33 !== void 0 ? _ref33 : output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
};
var client_sso_oidc_node_collectBodyString = function collectBodyString(streamBody, context) {
  return collect_stream_body_collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
var client_sso_oidc_node_parseBody = function parseBody(streamBody, context) {
  return client_sso_oidc_node_collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      return JSON.parse(encoded);
    }
    return {};
  });
};
var client_sso_oidc_node_parseErrorBody = /*#__PURE__*/function () {
  var _ref34 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee23(errorBody, context) {
    var _value$message;
    var value;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee23$(_context23) {
      while (1) switch (_context23.prev = _context23.next) {
        case 0:
          _context23.next = 2;
          return client_sso_oidc_node_parseBody(errorBody, context);
        case 2:
          value = _context23.sent;
          value.message = (_value$message = value.message) !== null && _value$message !== void 0 ? _value$message : value.Message;
          return _context23.abrupt("return", value);
        case 5:
        case "end":
          return _context23.stop();
      }
    }, _callee23);
  }));
  return function parseErrorBody(_x43, _x44) {
    return _ref34.apply(this, arguments);
  };
}();
var client_sso_oidc_node_loadRestJsonErrorCode = function loadRestJsonErrorCode(output, data) {
  var findKey = function findKey(object, key) {
    return Object.keys(object).find(function (k2) {
      return k2.toLowerCase() === key.toLowerCase();
    });
  };
  var sanitizeErrorCode = function sanitizeErrorCode(rawValue) {
    var cleanValue = rawValue;
    if (typeof cleanValue === "number") {
      cleanValue = cleanValue.toString();
    }
    if (cleanValue.indexOf(",") >= 0) {
      cleanValue = cleanValue.split(",")[0];
    }
    if (cleanValue.indexOf(":") >= 0) {
      cleanValue = cleanValue.split(":")[0];
    }
    if (cleanValue.indexOf("#") >= 0) {
      cleanValue = cleanValue.split("#")[1];
    }
    return cleanValue;
  };
  var headerKey = findKey(output.headers, "x-amzn-errortype");
  if (headerKey !== void 0) {
    return sanitizeErrorCode(output.headers[headerKey]);
  }
  if (data.code !== void 0) {
    return sanitizeErrorCode(data.code);
  }
  if (data["__type"] !== void 0) {
    return sanitizeErrorCode(data["__type"]);
  }
};
var CreateTokenCommand = /*#__PURE__*/function (_$Command) {
  function _CreateTokenCommand(input) {
    var _this15;
    classCallCheck_classCallCheck(this, _CreateTokenCommand);
    _this15 = callSuper_callSuper(this, _CreateTokenCommand);
    _this15.input = input;
    return _this15;
  }
  inherits_inherits(_CreateTokenCommand, _$Command);
  return createClass_createClass(_CreateTokenCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, _CreateTokenCommand.getEndpointParameterInstructions()));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "SSOOIDCClient";
      var commandName = "CreateTokenCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: function inputFilterSensitiveLog(_) {
          return _;
        },
        outputFilterSensitiveLog: function outputFilterSensitiveLog(_) {
          return _;
        }
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_CreateTokenCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_CreateTokenCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);



var RegisterClientCommand = /*#__PURE__*/function (_$Command2) {
  function _RegisterClientCommand(input) {
    var _this16;
    classCallCheck_classCallCheck(this, _RegisterClientCommand);
    _this16 = callSuper_callSuper(this, _RegisterClientCommand);
    _this16.input = input;
    return _this16;
  }
  inherits_inherits(_RegisterClientCommand, _$Command2);
  return createClass_createClass(_RegisterClientCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, _RegisterClientCommand.getEndpointParameterInstructions()));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "SSOOIDCClient";
      var commandName = "RegisterClientCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: function inputFilterSensitiveLog(_) {
          return _;
        },
        outputFilterSensitiveLog: function outputFilterSensitiveLog(_) {
          return _;
        }
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_RegisterClientCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_RegisterClientCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);



var StartDeviceAuthorizationCommand = /*#__PURE__*/function (_$Command3) {
  function _StartDeviceAuthorizationCommand(input) {
    var _this17;
    classCallCheck_classCallCheck(this, _StartDeviceAuthorizationCommand);
    _this17 = callSuper_callSuper(this, _StartDeviceAuthorizationCommand);
    _this17.input = input;
    return _this17;
  }
  inherits_inherits(_StartDeviceAuthorizationCommand, _$Command3);
  return createClass_createClass(_StartDeviceAuthorizationCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, _StartDeviceAuthorizationCommand.getEndpointParameterInstructions()));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "SSOOIDCClient";
      var commandName = "StartDeviceAuthorizationCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: function inputFilterSensitiveLog(_) {
          return _;
        },
        outputFilterSensitiveLog: function outputFilterSensitiveLog(_) {
          return _;
        }
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_StartDeviceAuthorizationCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_StartDeviceAuthorizationCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);
var commands = {
  CreateTokenCommand: CreateTokenCommand,
  RegisterClientCommand: RegisterClientCommand,
  StartDeviceAuthorizationCommand: StartDeviceAuthorizationCommand
};
var SSOOIDC = /*#__PURE__*/function (_SSOOIDCClient) {
  function SSOOIDC() {
    classCallCheck_classCallCheck(this, SSOOIDC);
    return callSuper_callSuper(this, SSOOIDC, arguments);
  }
  inherits_inherits(SSOOIDC, _SSOOIDCClient);
  return createClass_createClass(SSOOIDC);
}(SSOOIDCClient);
createAggregatedClient(commands, SSOOIDC);

;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/getSsoOidcClient.js

var ssoOidcClientsHash = {};
var getSsoOidcClient = function getSsoOidcClient(ssoRegion) {
  if (ssoOidcClientsHash[ssoRegion]) {
    return ssoOidcClientsHash[ssoRegion];
  }
  var ssoOidcClient = new SSOOIDCClient({
    region: ssoRegion
  });
  ssoOidcClientsHash[ssoRegion] = ssoOidcClient;
  return ssoOidcClient;
};
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js


var getNewSsoOidcToken = function getNewSsoOidcToken(ssoToken, ssoRegion) {
  var ssoOidcClient = getSsoOidcClient(ssoRegion);
  return ssoOidcClient.send(new CreateTokenCommand({
    clientId: ssoToken.clientId,
    clientSecret: ssoToken.clientSecret,
    refreshToken: ssoToken.refreshToken,
    grantType: "refresh_token"
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/validateTokenExpiry.js


var validateTokenExpiry = function validateTokenExpiry(token) {
  if (token.expiration && token.expiration.getTime() < Date.now()) {
    throw new TokenProviderError("Token is expired. ".concat(REFRESH_MESSAGE), false);
  }
};
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js


var validateTokenKey = function validateTokenKey(key, value) {
  var forRefresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  if (typeof value === "undefined") {
    throw new TokenProviderError("Value not present for '".concat(key, "' in SSO Token").concat(forRefresh ? ". Cannot refresh" : "", ". ").concat(REFRESH_MESSAGE), false);
  }
};
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js


var writeFile = external_fs_.promises.writeFile;
var writeSSOTokenToFile = function writeSSOTokenToFile(id, ssoToken) {
  var tokenFilepath = getSSOTokenFilepath(id);
  var tokenString = JSON.stringify(ssoToken, null, 2);
  return writeFile(tokenFilepath, tokenString);
};
;// ./node_modules/.pnpm/@aws-sdk+token-providers@3.391.0/node_modules/@aws-sdk/token-providers/dist-es/fromSso.js










var lastRefreshAttemptTime = new Date(0);
var fromSso = function fromSso() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var profiles, profileName, profile, ssoSessionName, ssoSessions, ssoSession, _i, _arr, ssoSessionRequiredKey, ssoStartUrl, ssoRegion, ssoToken, _ssoToken, accessToken, expiresAt, existingToken, newSsoOidcToken, newTokenExpiration;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return parseKnownFiles(init);
        case 2:
          profiles = _context.sent;
          profileName = getProfileName(init);
          profile = profiles[profileName];
          if (profile) {
            _context.next = 9;
            break;
          }
          throw new TokenProviderError("Profile '".concat(profileName, "' could not be found in shared credentials file."), false);
        case 9:
          if (profile["sso_session"]) {
            _context.next = 11;
            break;
          }
          throw new TokenProviderError("Profile '".concat(profileName, "' is missing required property 'sso_session'."));
        case 11:
          ssoSessionName = profile["sso_session"];
          _context.next = 14;
          return loadSsoSessionData(init);
        case 14:
          ssoSessions = _context.sent;
          ssoSession = ssoSessions[ssoSessionName];
          if (ssoSession) {
            _context.next = 18;
            break;
          }
          throw new TokenProviderError("Sso session '".concat(ssoSessionName, "' could not be found in shared credentials file."), false);
        case 18:
          _i = 0, _arr = ["sso_start_url", "sso_region"];
        case 19:
          if (!(_i < _arr.length)) {
            _context.next = 26;
            break;
          }
          ssoSessionRequiredKey = _arr[_i];
          if (ssoSession[ssoSessionRequiredKey]) {
            _context.next = 23;
            break;
          }
          throw new TokenProviderError("Sso session '".concat(ssoSessionName, "' is missing required property '").concat(ssoSessionRequiredKey, "'."), false);
        case 23:
          _i++;
          _context.next = 19;
          break;
        case 26:
          ssoStartUrl = ssoSession["sso_start_url"];
          ssoRegion = ssoSession["sso_region"];
          _context.prev = 28;
          _context.next = 31;
          return getSSOTokenFromFile(ssoSessionName);
        case 31:
          ssoToken = _context.sent;
          _context.next = 37;
          break;
        case 34:
          _context.prev = 34;
          _context.t0 = _context["catch"](28);
          throw new TokenProviderError("The SSO session token associated with profile=".concat(profileName, " was not found or is invalid. ").concat(REFRESH_MESSAGE), false);
        case 37:
          validateTokenKey("accessToken", ssoToken.accessToken);
          validateTokenKey("expiresAt", ssoToken.expiresAt);
          _ssoToken = ssoToken, accessToken = _ssoToken.accessToken, expiresAt = _ssoToken.expiresAt;
          existingToken = {
            token: accessToken,
            expiration: new Date(expiresAt)
          };
          if (!(existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS)) {
            _context.next = 43;
            break;
          }
          return _context.abrupt("return", existingToken);
        case 43:
          if (!(Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000)) {
            _context.next = 46;
            break;
          }
          validateTokenExpiry(existingToken);
          return _context.abrupt("return", existingToken);
        case 46:
          validateTokenKey("clientId", ssoToken.clientId, true);
          validateTokenKey("clientSecret", ssoToken.clientSecret, true);
          validateTokenKey("refreshToken", ssoToken.refreshToken, true);
          _context.prev = 49;
          lastRefreshAttemptTime.setTime(Date.now());
          _context.next = 53;
          return getNewSsoOidcToken(ssoToken, ssoRegion);
        case 53:
          newSsoOidcToken = _context.sent;
          validateTokenKey("accessToken", newSsoOidcToken.accessToken);
          validateTokenKey("expiresIn", newSsoOidcToken.expiresIn);
          newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);
          _context.prev = 57;
          _context.next = 60;
          return writeSSOTokenToFile(ssoSessionName, _objectSpread2(_objectSpread2({}, ssoToken), {}, {
            accessToken: newSsoOidcToken.accessToken,
            expiresAt: newTokenExpiration.toISOString(),
            refreshToken: newSsoOidcToken.refreshToken
          }));
        case 60:
          _context.next = 64;
          break;
        case 62:
          _context.prev = 62;
          _context.t1 = _context["catch"](57);
        case 64:
          return _context.abrupt("return", {
            token: newSsoOidcToken.accessToken,
            expiration: newTokenExpiration
          });
        case 67:
          _context.prev = 67;
          _context.t2 = _context["catch"](49);
          validateTokenExpiry(existingToken);
          return _context.abrupt("return", existingToken);
        case 71:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[28, 34], [49, 67], [57, 62]]);
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-sso@3.395.0/node_modules/@aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js






var resolveSSOCredentials_EXPIRE_WINDOW_MS = 15 * 60 * 1000;
var SHOULD_FAIL_CREDENTIAL_CHAIN = false;
var resolveSSOCredentials = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(_ref) {
    var ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, profile, token, refreshMessage, _token, _token2, accessToken, sso, ssoResp, _ssoResp, _ssoResp$roleCredenti, _ssoResp$roleCredenti2, accessKeyId, secretAccessKey, sessionToken, expiration;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          ssoStartUrl = _ref.ssoStartUrl, ssoSession = _ref.ssoSession, ssoAccountId = _ref.ssoAccountId, ssoRegion = _ref.ssoRegion, ssoRoleName = _ref.ssoRoleName, ssoClient = _ref.ssoClient, profile = _ref.profile;
          refreshMessage = "To refresh this SSO session run aws sso login with the corresponding profile.";
          if (!ssoSession) {
            _context.next = 15;
            break;
          }
          _context.prev = 3;
          _context.next = 6;
          return fromSso({
            profile: profile
          })();
        case 6:
          _token = _context.sent;
          token = {
            accessToken: _token.token,
            expiresAt: new Date(_token.expiration).toISOString()
          };
          _context.next = 13;
          break;
        case 10:
          _context.prev = 10;
          _context.t0 = _context["catch"](3);
          throw new CredentialsProviderError(_context.t0.message, SHOULD_FAIL_CREDENTIAL_CHAIN);
        case 13:
          _context.next = 24;
          break;
        case 15:
          _context.prev = 15;
          _context.next = 18;
          return getSSOTokenFromFile(ssoStartUrl);
        case 18:
          token = _context.sent;
          _context.next = 24;
          break;
        case 21:
          _context.prev = 21;
          _context.t1 = _context["catch"](15);
          throw new CredentialsProviderError("The SSO session associated with this profile is invalid. ".concat(refreshMessage), SHOULD_FAIL_CREDENTIAL_CHAIN);
        case 24:
          if (!(new Date(token.expiresAt).getTime() - Date.now() <= resolveSSOCredentials_EXPIRE_WINDOW_MS)) {
            _context.next = 26;
            break;
          }
          throw new CredentialsProviderError("The SSO session associated with this profile has expired. ".concat(refreshMessage), SHOULD_FAIL_CREDENTIAL_CHAIN);
        case 26:
          _token2 = token, accessToken = _token2.accessToken;
          sso = ssoClient || new SSOClient({
            region: ssoRegion
          });
          _context.prev = 28;
          _context.next = 31;
          return sso.send(new GetRoleCredentialsCommand({
            accountId: ssoAccountId,
            roleName: ssoRoleName,
            accessToken: accessToken
          }));
        case 31:
          ssoResp = _context.sent;
          _context.next = 37;
          break;
        case 34:
          _context.prev = 34;
          _context.t2 = _context["catch"](28);
          throw CredentialsProviderError.from(_context.t2, SHOULD_FAIL_CREDENTIAL_CHAIN);
        case 37:
          _ssoResp = ssoResp, _ssoResp$roleCredenti = _ssoResp.roleCredentials, _ssoResp$roleCredenti2 = _ssoResp$roleCredenti === void 0 ? {} : _ssoResp$roleCredenti, accessKeyId = _ssoResp$roleCredenti2.accessKeyId, secretAccessKey = _ssoResp$roleCredenti2.secretAccessKey, sessionToken = _ssoResp$roleCredenti2.sessionToken, expiration = _ssoResp$roleCredenti2.expiration;
          if (!(!accessKeyId || !secretAccessKey || !sessionToken || !expiration)) {
            _context.next = 40;
            break;
          }
          throw new CredentialsProviderError("SSO returns an invalid temporary credential.", SHOULD_FAIL_CREDENTIAL_CHAIN);
        case 40:
          return _context.abrupt("return", {
            accessKeyId: accessKeyId,
            secretAccessKey: secretAccessKey,
            sessionToken: sessionToken,
            expiration: new Date(expiration)
          });
        case 41:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[3, 10], [15, 21], [28, 34]]);
  }));
  return function resolveSSOCredentials(_x) {
    return _ref2.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-sso@3.395.0/node_modules/@aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js

var validateSsoProfile = function validateSsoProfile(profile) {
  var sso_start_url = profile.sso_start_url,
    sso_account_id = profile.sso_account_id,
    sso_region = profile.sso_region,
    sso_role_name = profile.sso_role_name;
  if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {
    throw new CredentialsProviderError("Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", " + "\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ".concat(Object.keys(profile).join(", "), "\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html"), false);
  }
  return profile;
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-sso@3.395.0/node_modules/@aws-sdk/credential-provider-sso/dist-es/fromSSO.js







var fromSSO = function fromSSO() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, ssoSession, profileName, profiles, profile, ssoSessions, session, conflictMsg, _validateSsoProfile, sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          ssoStartUrl = init.ssoStartUrl, ssoAccountId = init.ssoAccountId, ssoRegion = init.ssoRegion, ssoRoleName = init.ssoRoleName, ssoClient = init.ssoClient, ssoSession = init.ssoSession;
          profileName = getProfileName(init);
          if (!(!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession)) {
            _context.next = 27;
            break;
          }
          _context.next = 5;
          return parseKnownFiles(init);
        case 5:
          profiles = _context.sent;
          profile = profiles[profileName];
          if (profile) {
            _context.next = 9;
            break;
          }
          throw new CredentialsProviderError("Profile ".concat(profileName, " was not found."));
        case 9:
          if (isSsoProfile(profile)) {
            _context.next = 11;
            break;
          }
          throw new CredentialsProviderError("Profile ".concat(profileName, " is not configured with SSO credentials."));
        case 11:
          if (!(profile !== null && profile !== void 0 && profile.sso_session)) {
            _context.next = 23;
            break;
          }
          _context.next = 14;
          return loadSsoSessionData(init);
        case 14:
          ssoSessions = _context.sent;
          session = ssoSessions[profile.sso_session];
          conflictMsg = " configurations in profile ".concat(profileName, " and sso-session ").concat(profile.sso_session);
          if (!(ssoRegion && ssoRegion !== session.sso_region)) {
            _context.next = 19;
            break;
          }
          throw new CredentialsProviderError("Conflicting SSO region" + conflictMsg, false);
        case 19:
          if (!(ssoStartUrl && ssoStartUrl !== session.sso_start_url)) {
            _context.next = 21;
            break;
          }
          throw new CredentialsProviderError("Conflicting SSO start_url" + conflictMsg, false);
        case 21:
          profile.sso_region = session.sso_region;
          profile.sso_start_url = session.sso_start_url;
        case 23:
          _validateSsoProfile = validateSsoProfile(profile), sso_start_url = _validateSsoProfile.sso_start_url, sso_account_id = _validateSsoProfile.sso_account_id, sso_region = _validateSsoProfile.sso_region, sso_role_name = _validateSsoProfile.sso_role_name, sso_session = _validateSsoProfile.sso_session;
          return _context.abrupt("return", resolveSSOCredentials({
            ssoStartUrl: sso_start_url,
            ssoSession: sso_session,
            ssoAccountId: sso_account_id,
            ssoRegion: sso_region,
            ssoRoleName: sso_role_name,
            ssoClient: ssoClient,
            profile: profileName
          }));
        case 27:
          if (!(!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName)) {
            _context.next = 31;
            break;
          }
          throw new CredentialsProviderError("Incomplete configuration. The fromSSO() argument hash must include " + '"ssoStartUrl", "ssoAccountId", "ssoRegion", "ssoRoleName"');
        case 31:
          return _context.abrupt("return", resolveSSOCredentials({
            ssoStartUrl: ssoStartUrl,
            ssoSession: ssoSession,
            ssoAccountId: ssoAccountId,
            ssoRegion: ssoRegion,
            ssoRoleName: ssoRoleName,
            ssoClient: ssoClient,
            profile: profileName
          }));
        case 32:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-sso@3.395.0/node_modules/@aws-sdk/credential-provider-sso/dist-es/index.js




;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveSsoCredentials.js


var resolveSsoCredentials = function resolveSsoCredentials(data) {
  var _validateSsoProfile = validateSsoProfile(data),
    sso_start_url = _validateSsoProfile.sso_start_url,
    sso_account_id = _validateSsoProfile.sso_account_id,
    sso_session = _validateSsoProfile.sso_session,
    sso_region = _validateSsoProfile.sso_region,
    sso_role_name = _validateSsoProfile.sso_role_name;
  return fromSSO({
    ssoStartUrl: sso_start_url,
    ssoAccountId: sso_account_id,
    ssoSession: sso_session,
    ssoRegion: sso_region,
    ssoRoleName: sso_role_name
  })();
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveStaticCredentials.js
var isStaticCredsProfile = function isStaticCredsProfile(arg) {
  return Boolean(arg) && typeof arg === "object" && typeof arg.aws_access_key_id === "string" && typeof arg.aws_secret_access_key === "string" && ["undefined", "string"].indexOf(typeof arg.aws_session_token) > -1;
};
var resolveStaticCredentials = function resolveStaticCredentials(profile) {
  return Promise.resolve({
    accessKeyId: profile.aws_access_key_id,
    secretAccessKey: profile.aws_secret_access_key,
    sessionToken: profile.aws_session_token
  });
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.391.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js

var fromWebToken = function fromWebToken(init) {
  return function () {
    var roleArn = init.roleArn,
      roleSessionName = init.roleSessionName,
      webIdentityToken = init.webIdentityToken,
      providerId = init.providerId,
      policyArns = init.policyArns,
      policy = init.policy,
      durationSeconds = init.durationSeconds,
      roleAssumerWithWebIdentity = init.roleAssumerWithWebIdentity;
    if (!roleAssumerWithWebIdentity) {
      throw new CredentialsProviderError("Role Arn '".concat(roleArn, "' needs to be assumed with web identity,") + " but no role assumption callback was provided.", false);
    }
    return roleAssumerWithWebIdentity({
      RoleArn: roleArn,
      RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : "aws-sdk-js-session-".concat(Date.now()),
      WebIdentityToken: webIdentityToken,
      ProviderId: providerId,
      PolicyArns: policyArns,
      Policy: policy,
      DurationSeconds: durationSeconds
    });
  };
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.391.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js






var ENV_TOKEN_FILE = "AWS_WEB_IDENTITY_TOKEN_FILE";
var ENV_ROLE_ARN = "AWS_ROLE_ARN";
var ENV_ROLE_SESSION_NAME = "AWS_ROLE_SESSION_NAME";
var fromTokenFile = function fromTokenFile() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var _init$webIdentityToke, _init$roleArn, _init$roleSessionName;
    var webIdentityTokenFile, roleArn, roleSessionName;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          webIdentityTokenFile = (_init$webIdentityToke = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _init$webIdentityToke !== void 0 ? _init$webIdentityToke : process.env[ENV_TOKEN_FILE];
          roleArn = (_init$roleArn = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _init$roleArn !== void 0 ? _init$roleArn : process.env[ENV_ROLE_ARN];
          roleSessionName = (_init$roleSessionName = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _init$roleSessionName !== void 0 ? _init$roleSessionName : process.env[ENV_ROLE_SESSION_NAME];
          if (!(!webIdentityTokenFile || !roleArn)) {
            _context.next = 5;
            break;
          }
          throw new CredentialsProviderError("Web identity configuration not specified");
        case 5:
          return _context.abrupt("return", fromWebToken(_objectSpread2(_objectSpread2({}, init), {}, {
            webIdentityToken: (0,external_fs_.readFileSync)(webIdentityTokenFile, {
              encoding: "ascii"
            }),
            roleArn: roleArn,
            roleSessionName: roleSessionName
          }))());
        case 6:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-web-identity@3.391.0/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/index.js


;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveWebIdentityCredentials.js



var isWebIdentityProfile = function isWebIdentityProfile(arg) {
  return Boolean(arg) && typeof arg === "object" && typeof arg.web_identity_token_file === "string" && typeof arg.role_arn === "string" && ["undefined", "string"].indexOf(typeof arg.role_session_name) > -1;
};
var resolveWebIdentityCredentials = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(profile, options) {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          return _context.abrupt("return", fromTokenFile({
            webIdentityTokenFile: profile.web_identity_token_file,
            roleArn: profile.role_arn,
            roleSessionName: profile.role_session_name,
            roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity
          })());
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function resolveWebIdentityCredentials(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProfileData.js








var resolveProfileData = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(profileName, profiles, options) {
    var visitedProfiles,
      data,
      _args = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          visitedProfiles = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};
          data = profiles[profileName];
          if (!(Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data))) {
            _context.next = 4;
            break;
          }
          return _context.abrupt("return", resolveStaticCredentials(data));
        case 4:
          if (!isAssumeRoleProfile(data)) {
            _context.next = 6;
            break;
          }
          return _context.abrupt("return", resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles));
        case 6:
          if (!isStaticCredsProfile(data)) {
            _context.next = 8;
            break;
          }
          return _context.abrupt("return", resolveStaticCredentials(data));
        case 8:
          if (!isWebIdentityProfile(data)) {
            _context.next = 10;
            break;
          }
          return _context.abrupt("return", resolveWebIdentityCredentials(data, options));
        case 10:
          if (!isProcessProfile(data)) {
            _context.next = 12;
            break;
          }
          return _context.abrupt("return", resolveProcessCredentials_resolveProcessCredentials(options, profileName));
        case 12:
          if (!isSsoProfile(data)) {
            _context.next = 14;
            break;
          }
          return _context.abrupt("return", resolveSsoCredentials(data));
        case 14:
          throw new CredentialsProviderError("Profile ".concat(profileName, " could not be found or parsed in shared credentials file."));
        case 15:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function resolveProfileData(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/fromIni.js




var fromIni = function fromIni() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    var profiles;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return parseKnownFiles(init);
        case 2:
          profiles = _context.sent;
          return _context.abrupt("return", resolveProfileData(getProfileName(init), profiles, init));
        case 4:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-ini@3.395.0/node_modules/@aws-sdk/credential-provider-ini/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+credential-provider-node@3.395.0/node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js




var remoteProvider_ENV_IMDS_DISABLED = "AWS_EC2_METADATA_DISABLED";
var remoteProvider = function remoteProvider(init) {
  if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {
    return fromContainerMetadata(init);
  }
  if (process.env[remoteProvider_ENV_IMDS_DISABLED]) {
    return /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            throw new CredentialsProviderError("EC2 Instance Metadata Service access disabled");
          case 1:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
  }
  return fromInstanceMetadata(init);
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-node@3.395.0/node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js











var defaultProvider = function defaultProvider() {
  var init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return memoize(chain.apply(void 0, _toConsumableArray(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]).concat([fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), /*#__PURE__*/asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          throw new CredentialsProviderError("Could not load credentials from any providers", false);
        case 1:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }))])), function (credentials) {
    return credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;
  }, function (credentials) {
    return credentials.expiration !== undefined;
  });
};
;// ./node_modules/.pnpm/@aws-sdk+credential-provider-node@3.395.0/node_modules/@aws-sdk/credential-provider-node/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js

var F = "required",
  G = "type",
  H = "fn",
  I = "argv",
  J = "ref";
var ruleset_a = false,
  ruleset_b = true,
  ruleset_c = "booleanEquals",
  ruleset_d = "tree",
  ruleset_e = "stringEquals",
  ruleset_f = "sigv4",
  ruleset_g = "sts",
  ruleset_h = "us-east-1",
  endpoint_ruleset_i = "endpoint",
  ruleset_j = "https://sts.{Region}.{PartitionResult#dnsSuffix}",
  ruleset_k = "error",
  ruleset_l = "getAttr",
  ruleset_m = defineProperty_defineProperty(defineProperty_defineProperty({}, F, false), G, "String"),
  ruleset_n = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, F, true), "default", false), G, "Boolean"),
  ruleset_o = defineProperty_defineProperty({}, J, "Endpoint"),
  ruleset_p = defineProperty_defineProperty(defineProperty_defineProperty({}, H, "isSet"), I, [defineProperty_defineProperty({}, J, "Region")]),
  ruleset_q = defineProperty_defineProperty({}, J, "Region"),
  ruleset_r = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, H, "aws.partition"), I, [ruleset_q]), "assign", "PartitionResult"),
  ruleset_s = defineProperty_defineProperty({}, J, "UseFIPS"),
  t = defineProperty_defineProperty({}, J, "UseDualStack"),
  u = {
    "url": "https://sts.amazonaws.com",
    "properties": {
      "authSchemes": [{
        "name": ruleset_f,
        "signingName": ruleset_g,
        "signingRegion": ruleset_h
      }]
    },
    "headers": {}
  },
  v = {},
  w = defineProperty_defineProperty(defineProperty_defineProperty({
    "conditions": [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "aws-global"])]
  }, endpoint_ruleset_i, u), G, endpoint_ruleset_i),
  x = defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [ruleset_s, true]),
  y = defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [t, true]),
  z = defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_l), I, [defineProperty_defineProperty({}, J, "PartitionResult"), "supportsFIPS"])]),
  A = defineProperty_defineProperty({}, J, "PartitionResult"),
  B = defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [true, defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_l), I, [A, "supportsDualStack"])]),
  C = [defineProperty_defineProperty(defineProperty_defineProperty({}, H, "isSet"), I, [ruleset_o])],
  D = [x],
  E = [y];
var ruleset_data = {
  version: "1.0",
  parameters: {
    Region: ruleset_m,
    UseDualStack: ruleset_n,
    UseFIPS: ruleset_n,
    Endpoint: ruleset_m,
    UseGlobalEndpoint: ruleset_n
  },
  rules: [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [defineProperty_defineProperty({}, J, "UseGlobalEndpoint"), ruleset_b]), defineProperty_defineProperty(defineProperty_defineProperty({}, H, "not"), I, C), ruleset_p, ruleset_r, defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [ruleset_s, ruleset_a]), defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_c), I, [t, ruleset_a])]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "ap-northeast-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "ap-south-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "ap-southeast-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "ap-southeast-2"])],
    endpoint: u
  }, G, endpoint_ruleset_i), w, defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "ca-central-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "eu-central-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "eu-north-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "eu-west-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "eu-west-2"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "eu-west-3"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "sa-east-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, ruleset_h])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "us-east-2"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "us-west-1"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, [ruleset_q, "us-west-2"])],
    endpoint: u
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    endpoint: {
      url: ruleset_j,
      properties: {
        authSchemes: [{
          name: ruleset_f,
          signingName: ruleset_g,
          signingRegion: "{Region}"
        }]
      },
      headers: v
    }
  }, G, endpoint_ruleset_i)]), defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: C
  }, G, ruleset_d), "rules", [defineProperty_defineProperty({
    conditions: D,
    error: "Invalid Configuration: FIPS and custom endpoint are not supported"
  }, G, ruleset_k), defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [defineProperty_defineProperty({
    conditions: E,
    error: "Invalid Configuration: Dualstack and custom endpoint are not supported"
  }, G, ruleset_k), defineProperty_defineProperty({
    endpoint: {
      url: ruleset_o,
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i)])]), defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [ruleset_p]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [ruleset_r]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [x, y]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [z, B]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: {
      url: "https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i)])]), defineProperty_defineProperty({
    error: "FIPS and DualStack are enabled, but this partition does not support one or both"
  }, G, ruleset_k)]), defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: D
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [z]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [defineProperty_defineProperty({
    conditions: [defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_e), I, ["aws-us-gov", defineProperty_defineProperty(defineProperty_defineProperty({}, H, ruleset_l), I, [A, "name"])])],
    endpoint: {
      url: "https://sts.{Region}.amazonaws.com",
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i), defineProperty_defineProperty({
    endpoint: {
      url: "https://sts-fips.{Region}.{PartitionResult#dnsSuffix}",
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i)])]), defineProperty_defineProperty({
    error: "FIPS is enabled but this partition does not support FIPS"
  }, G, ruleset_k)]), defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: E
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({
    conditions: [B]
  }, G, ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: {
      url: "https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}",
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i)])]), defineProperty_defineProperty({
    error: "DualStack is enabled but this partition does not support DualStack"
  }, G, ruleset_k)]), defineProperty_defineProperty(defineProperty_defineProperty({}, G, ruleset_d), "rules", [w, defineProperty_defineProperty({
    endpoint: {
      url: ruleset_j,
      properties: v,
      headers: v
    }
  }, G, endpoint_ruleset_i)])])]), defineProperty_defineProperty({
    error: "Invalid Configuration: Missing Region"
  }, G, ruleset_k)])]
};
var ruleset_ruleSet = ruleset_data;
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js


var endpointResolver_defaultEndpointResolver = function defaultEndpointResolver(endpointParams) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return resolveEndpoint(ruleset_ruleSet, {
    endpointParams: endpointParams,
    logger: context.logger
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js





var dist_es_runtimeConfig_shared_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$base64Decoder, _config$base64Encoder, _config$disableHostPr, _config$endpointProvi, _config$extensions, _config$logger, _config$serviceId, _config$urlParser, _config$utf8Decoder, _config$utf8Encoder;
  return {
    apiVersion: "2011-06-15",
    base64Decoder: (_config$base64Decoder = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _config$base64Decoder !== void 0 ? _config$base64Decoder : fromBase64,
    base64Encoder: (_config$base64Encoder = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _config$base64Encoder !== void 0 ? _config$base64Encoder : toBase64,
    disableHostPrefix: (_config$disableHostPr = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _config$disableHostPr !== void 0 ? _config$disableHostPr : false,
    endpointProvider: (_config$endpointProvi = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _config$endpointProvi !== void 0 ? _config$endpointProvi : endpointResolver_defaultEndpointResolver,
    extensions: (_config$extensions = config === null || config === void 0 ? void 0 : config.extensions) !== null && _config$extensions !== void 0 ? _config$extensions : [],
    logger: (_config$logger = config === null || config === void 0 ? void 0 : config.logger) !== null && _config$logger !== void 0 ? _config$logger : new NoOpLogger(),
    serviceId: (_config$serviceId = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _config$serviceId !== void 0 ? _config$serviceId : "STS",
    urlParser: (_config$urlParser = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _config$urlParser !== void 0 ? _config$urlParser : parseUrl,
    utf8Decoder: (_config$utf8Decoder = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _config$utf8Decoder !== void 0 ? _config$utf8Decoder : fromUtf8,
    utf8Encoder: (_config$utf8Encoder = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _config$utf8Encoder !== void 0 ? _config$utf8Encoder : toUtf8
  };
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js


















var runtimeConfig_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$bodyLengthChe, _config$credentialDef, _config$defaultUserAg, _config$maxAttempts, _config$region, _config$requestHandle, _config$retryMode, _config$sha, _config$streamCollect, _config$useDualstackE, _config$useFipsEndpoi;
  emitWarningIfUnsupportedVersion(process.version);
  var defaultsMode = resolveDefaultsModeConfig(config);
  var defaultConfigProvider = function defaultConfigProvider() {
    return defaultsMode().then(loadConfigsForDefaultMode);
  };
  var clientSharedValues = dist_es_runtimeConfig_shared_getRuntimeConfig(config);
  return _objectSpread2(_objectSpread2(_objectSpread2({}, clientSharedValues), config), {}, {
    runtime: "node",
    defaultsMode: defaultsMode,
    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,
    credentialDefaultProvider: (_config$credentialDef = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _config$credentialDef !== void 0 ? _config$credentialDef : decorateDefaultCredentialProvider(defaultProvider),
    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : defaultUserAgent({
      serviceId: clientSharedValues.serviceId,
      clientVersion: client_sts_package_namespaceObject.rE
    }),
    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : loadConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),
    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : loadConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),
    requestHandler: (_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : new NodeHttpHandler(defaultConfigProvider),
    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : loadConfig(_objectSpread2(_objectSpread2({}, NODE_RETRY_MODE_CONFIG_OPTIONS), {}, {
      "default": function () {
        var _default2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
          return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return defaultConfigProvider();
              case 2:
                _context.t0 = _context.sent.retryMode;
                if (_context.t0) {
                  _context.next = 5;
                  break;
                }
                _context.t0 = DEFAULT_RETRY_MODE;
              case 5:
                return _context.abrupt("return", _context.t0);
              case 6:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function _default() {
          return _default2.apply(this, arguments);
        }
        return _default;
      }()
    })),
    sha256: (_config$sha = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha !== void 0 ? _config$sha : Hash.bind(null, "sha256"),
    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,
    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : loadConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),
    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : loadConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js


var runtimeExtensions_asPartial = function asPartial(t) {
  return t;
};
var runtimeExtensions_resolveRuntimeExtensions = function resolveRuntimeExtensions(runtimeConfig, extensions) {
  var clientConfiguration = _objectSpread2({}, runtimeExtensions_asPartial(getDefaultClientConfiguration(runtimeConfig)));
  extensions.forEach(function (extension) {
    return extension.configureClient(clientConfiguration);
  });
  return _objectSpread2(_objectSpread2({}, runtimeConfig), resolveDefaultRuntimeConfig(clientConfiguration));
};
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/STSClient.js




















var STSClient = /*#__PURE__*/function (_Client) {
  function STSClient() {
    var _this;
    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {
      _ref[_key] = arguments[_key];
    }
    var configuration = _ref[0];
    classCallCheck_classCallCheck(this, STSClient);
    var _config_0 = runtimeConfig_getRuntimeConfig(configuration || {});
    var _config_1 = EndpointParameters_resolveClientEndpointParameters(_config_0);
    var _config_2 = resolveRegionConfig(_config_1);
    var _config_3 = resolveEndpointConfig(_config_2);
    var _config_4 = resolveRetryConfig(_config_3);
    var _config_5 = resolveHostHeaderConfig(_config_4);
    var _config_6 = resolveStsAuthConfig(_config_5, {
      stsClientCtor: STSClient
    });
    var _config_7 = resolveUserAgentConfig(_config_6);
    var _config_8 = runtimeExtensions_resolveRuntimeExtensions(_config_7, (configuration === null || configuration === void 0 ? void 0 : configuration.extensions) || []);
    _this = callSuper_callSuper(this, STSClient, [_config_8]);
    _this.config = _config_8;
    _this.middlewareStack.use(getRetryPlugin(_this.config));
    _this.middlewareStack.use(getContentLengthPlugin(_this.config));
    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));
    _this.middlewareStack.use(getLoggerPlugin(_this.config));
    _this.middlewareStack.use(getRecursionDetectionPlugin(_this.config));
    _this.middlewareStack.use(getUserAgentPlugin(_this.config));
    return _this;
  }
  inherits_inherits(STSClient, _Client);
  return createClass_createClass(STSClient, [{
    key: "destroy",
    value: function destroy() {
      get_get(getPrototypeOf_getPrototypeOf(STSClient.prototype), "destroy", this).call(this);
    }
  }]);
}(Client);
;// ./node_modules/.pnpm/@aws-sdk+client-sts@3.395.0/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js








var getCustomizableStsClientCtor = function getCustomizableStsClientCtor(baseCtor, customizations) {
  if (!customizations) return baseCtor;else return /*#__PURE__*/function (_baseCtor) {
    function CustomizableSTSClient(config) {
      var _this;
      classCallCheck_classCallCheck(this, CustomizableSTSClient);
      _this = callSuper_callSuper(this, CustomizableSTSClient, [config]);
      var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(customizations),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var customization = _step.value;
          _this.middlewareStack.use(customization);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return _this;
    }
    inherits_inherits(CustomizableSTSClient, _baseCtor);
    return createClass_createClass(CustomizableSTSClient);
  }(baseCtor);
};
var getDefaultRoleAssumer = function getDefaultRoleAssumer() {
  var stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var stsPlugins = arguments.length > 1 ? arguments[1] : undefined;
  return defaultStsRoleAssumers_getDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));
};
var getDefaultRoleAssumerWithWebIdentity = function getDefaultRoleAssumerWithWebIdentity() {
  var stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var stsPlugins = arguments.length > 1 ? arguments[1] : undefined;
  return defaultStsRoleAssumers_getDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));
};
var defaultRoleAssumers_decorateDefaultCredentialProvider = function decorateDefaultCredentialProvider(provider) {
  return function (input) {
    return provider(_objectSpread2({
      roleAssumer: getDefaultRoleAssumer(input),
      roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input)
    }, input));
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-bucket-endpoint@3.391.0/node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/NodeDisableMultiregionAccessPointConfigOptions.js

var NODE_DISABLE_MULTIREGION_ACCESS_POINT_ENV_NAME = "AWS_S3_DISABLE_MULTIREGION_ACCESS_POINTS";
var NODE_DISABLE_MULTIREGION_ACCESS_POINT_INI_NAME = "s3_disable_multiregion_access_points";
var NODE_DISABLE_MULTIREGION_ACCESS_POINT_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return booleanSelector(env, NODE_DISABLE_MULTIREGION_ACCESS_POINT_ENV_NAME, SelectorType.ENV);
  },
  configFileSelector: function configFileSelector(profile) {
    return booleanSelector(profile, NODE_DISABLE_MULTIREGION_ACCESS_POINT_INI_NAME, SelectorType.CONFIG);
  },
  "default": false
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-bucket-endpoint@3.391.0/node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/NodeUseArnRegionConfigOptions.js

var NODE_USE_ARN_REGION_ENV_NAME = "AWS_S3_USE_ARN_REGION";
var NODE_USE_ARN_REGION_INI_NAME = "s3_use_arn_region";
var NODE_USE_ARN_REGION_CONFIG_OPTIONS = {
  environmentVariableSelector: function environmentVariableSelector(env) {
    return booleanSelector(env, NODE_USE_ARN_REGION_ENV_NAME, SelectorType.ENV);
  },
  configFileSelector: function configFileSelector(profile) {
    return booleanSelector(profile, NODE_USE_ARN_REGION_INI_NAME, SelectorType.CONFIG);
  },
  "default": false
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-bucket-endpoint@3.391.0/node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/bucketEndpointMiddleware.js






var bucketEndpointMiddleware = function bucketEndpointMiddleware(options) {
  return function (next, context) {
    return /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(args) {
        var bucketName, replaceBucketInPath, request, bucketArn, clientRegion, useDualstackEndpoint, useFipsEndpoint, _ref2, partition, _ref2$signingRegion, signingRegion, useArnRegion, _bucketHostname, hostname, bucketEndpoint, modifiedSigningRegion, signingService, _clientRegion, dualstackEndpoint, fipsEndpoint, _bucketHostname2, _hostname, _bucketEndpoint;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              bucketName = args.input.Bucket;
              replaceBucketInPath = options.bucketEndpoint;
              request = args.request;
              if (!HttpRequest.isInstance(request)) {
                _context.next = 72;
                break;
              }
              if (!options.bucketEndpoint) {
                _context.next = 8;
                break;
              }
              request.hostname = bucketName;
              _context.next = 71;
              break;
            case 8:
              if (!validateArn(bucketName)) {
                _context.next = 59;
                break;
              }
              bucketArn = parseArn(bucketName);
              _context.next = 12;
              return options.region();
            case 12:
              clientRegion = _context.sent;
              _context.next = 15;
              return options.useDualstackEndpoint();
            case 15:
              useDualstackEndpoint = _context.sent;
              _context.next = 18;
              return options.useFipsEndpoint();
            case 18:
              useFipsEndpoint = _context.sent;
              _context.next = 21;
              return options.regionInfoProvider(clientRegion, {
                useDualstackEndpoint: useDualstackEndpoint,
                useFipsEndpoint: useFipsEndpoint
              });
            case 21:
              _context.t0 = _context.sent;
              if (_context.t0) {
                _context.next = 24;
                break;
              }
              _context.t0 = {};
            case 24:
              _ref2 = _context.t0;
              partition = _ref2.partition;
              _ref2$signingRegion = _ref2.signingRegion;
              signingRegion = _ref2$signingRegion === void 0 ? clientRegion : _ref2$signingRegion;
              _context.next = 30;
              return options.useArnRegion();
            case 30:
              useArnRegion = _context.sent;
              _context.t1 = bucketHostname;
              _context.t2 = bucketArn;
              _context.t3 = request.hostname;
              _context.t4 = options.useAccelerateEndpoint;
              _context.t5 = useDualstackEndpoint;
              _context.t6 = useFipsEndpoint;
              _context.t7 = options.forcePathStyle;
              _context.t8 = request.protocol === "https:";
              _context.t9 = useArnRegion;
              _context.t10 = partition;
              _context.t11 = signingRegion;
              _context.t12 = clientRegion;
              _context.t13 = options.isCustomEndpoint;
              _context.next = 46;
              return options.disableMultiregionAccessPoints();
            case 46:
              _context.t14 = _context.sent;
              _context.t15 = {
                bucketName: _context.t2,
                baseHostname: _context.t3,
                accelerateEndpoint: _context.t4,
                dualstackEndpoint: _context.t5,
                fipsEndpoint: _context.t6,
                pathStyleEndpoint: _context.t7,
                tlsCompatible: _context.t8,
                useArnRegion: _context.t9,
                clientPartition: _context.t10,
                clientSigningRegion: _context.t11,
                clientRegion: _context.t12,
                isCustomEndpoint: _context.t13,
                disableMultiregionAccessPoints: _context.t14
              };
              _bucketHostname = (0, _context.t1)(_context.t15);
              hostname = _bucketHostname.hostname;
              bucketEndpoint = _bucketHostname.bucketEndpoint;
              modifiedSigningRegion = _bucketHostname.signingRegion;
              signingService = _bucketHostname.signingService;
              if (modifiedSigningRegion && modifiedSigningRegion !== signingRegion) {
                context["signing_region"] = modifiedSigningRegion;
              }
              if (signingService && signingService !== "s3") {
                context["signing_service"] = signingService;
              }
              request.hostname = hostname;
              replaceBucketInPath = bucketEndpoint;
              _context.next = 71;
              break;
            case 59:
              _context.next = 61;
              return options.region();
            case 61:
              _clientRegion = _context.sent;
              _context.next = 64;
              return options.useDualstackEndpoint();
            case 64:
              dualstackEndpoint = _context.sent;
              _context.next = 67;
              return options.useFipsEndpoint();
            case 67:
              fipsEndpoint = _context.sent;
              _bucketHostname2 = bucketHostname({
                bucketName: bucketName,
                clientRegion: _clientRegion,
                baseHostname: request.hostname,
                accelerateEndpoint: options.useAccelerateEndpoint,
                dualstackEndpoint: dualstackEndpoint,
                fipsEndpoint: fipsEndpoint,
                pathStyleEndpoint: options.forcePathStyle,
                tlsCompatible: request.protocol === "https:",
                isCustomEndpoint: options.isCustomEndpoint
              }), _hostname = _bucketHostname2.hostname, _bucketEndpoint = _bucketHostname2.bucketEndpoint;
              request.hostname = _hostname;
              replaceBucketInPath = _bucketEndpoint;
            case 71:
              if (replaceBucketInPath) {
                request.path = request.path.replace(/^(\/)?[^\/]+/, "");
                if (request.path === "") {
                  request.path = "/";
                }
              }
            case 72:
              return _context.abrupt("return", next(_objectSpread(_objectSpread({}, args), {}, {
                request: request
              })));
            case 73:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
var bucketEndpointMiddlewareOptions = {
  tags: ["BUCKET_ENDPOINT"],
  name: "bucketEndpointMiddleware",
  relation: "before",
  toMiddleware: "hostHeaderMiddleware",
  override: true
};
var getBucketEndpointPlugin = function getBucketEndpointPlugin(options) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-bucket-endpoint@3.391.0/node_modules/@aws-sdk/middleware-bucket-endpoint/dist-es/index.js






;// ./node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.3/node_modules/@smithy/eventstream-serde-universal/dist-es/getChunkedStream.js




function getChunkedStream(source) {
  var currentMessageTotalLength = 0;
  var currentMessagePendingLength = 0;
  var currentMessage = null;
  var messageLengthBuffer = null;
  var allocateMessage = function allocateMessage(size) {
    if (typeof size !== "number") {
      throw new Error("Attempted to allocate an event message where size was not a number: " + size);
    }
    currentMessageTotalLength = size;
    currentMessagePendingLength = 4;
    currentMessage = new Uint8Array(size);
    var currentMessageView = new DataView(currentMessage.buffer);
    currentMessageView.setUint32(0, size, false);
  };
  var iterator = /*#__PURE__*/function () {
    var _ref = wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
      var sourceIterator, _yield$_awaitAsyncGen, value, done, chunkLength, currentOffset, bytesRemaining, numBytesForTotal, numBytesToWrite;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            sourceIterator = source[Symbol.asyncIterator]();
          case 1:
            if (false) {}
            _context.next = 4;
            return awaitAsyncGenerator_awaitAsyncGenerator(sourceIterator.next());
          case 4:
            _yield$_awaitAsyncGen = _context.sent;
            value = _yield$_awaitAsyncGen.value;
            done = _yield$_awaitAsyncGen.done;
            if (!done) {
              _context.next = 19;
              break;
            }
            if (currentMessageTotalLength) {
              _context.next = 12;
              break;
            }
            return _context.abrupt("return");
          case 12:
            if (!(currentMessageTotalLength === currentMessagePendingLength)) {
              _context.next = 17;
              break;
            }
            _context.next = 15;
            return currentMessage;
          case 15:
            _context.next = 18;
            break;
          case 17:
            throw new Error("Truncated event message received.");
          case 18:
            return _context.abrupt("return");
          case 19:
            chunkLength = value.length;
            currentOffset = 0;
          case 21:
            if (!(currentOffset < chunkLength)) {
              _context.next = 45;
              break;
            }
            if (currentMessage) {
              _context.next = 33;
              break;
            }
            bytesRemaining = chunkLength - currentOffset;
            if (!messageLengthBuffer) {
              messageLengthBuffer = new Uint8Array(4);
            }
            numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);
            messageLengthBuffer.set(value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);
            currentMessagePendingLength += numBytesForTotal;
            currentOffset += numBytesForTotal;
            if (!(currentMessagePendingLength < 4)) {
              _context.next = 31;
              break;
            }
            return _context.abrupt("break", 45);
          case 31:
            allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));
            messageLengthBuffer = null;
          case 33:
            numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);
            currentMessage.set(value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);
            currentMessagePendingLength += numBytesToWrite;
            currentOffset += numBytesToWrite;
            if (!(currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength)) {
              _context.next = 43;
              break;
            }
            _context.next = 40;
            return currentMessage;
          case 40:
            currentMessage = null;
            currentMessageTotalLength = 0;
            currentMessagePendingLength = 0;
          case 43:
            _context.next = 21;
            break;
          case 45:
            _context.next = 1;
            break;
          case 47:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function iterator() {
      return _ref.apply(this, arguments);
    };
  }();
  return defineProperty_defineProperty({}, Symbol.asyncIterator, iterator);
}
;// ./node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.3/node_modules/@smithy/eventstream-serde-universal/dist-es/getUnmarshalledStream.js






function getUnmarshalledStream(source, options) {
  var messageUnmarshaller = getMessageUnmarshaller(options.deserializer, options.toUtf8);
  return _defineProperty({}, Symbol.asyncIterator, _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk, message, type;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _iteratorAbruptCompletion = false;
          _didIteratorError = false;
          _context.prev = 2;
          _iterator = _asyncIterator(source);
        case 4:
          _context.next = 6;
          return _awaitAsyncGenerator(_iterator.next());
        case 6:
          if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {
            _context.next = 19;
            break;
          }
          chunk = _step.value;
          message = options.eventStreamCodec.decode(chunk);
          _context.next = 11;
          return _awaitAsyncGenerator(messageUnmarshaller(message));
        case 11:
          type = _context.sent;
          if (!(type === undefined)) {
            _context.next = 14;
            break;
          }
          return _context.abrupt("continue", 16);
        case 14:
          _context.next = 16;
          return type;
        case 16:
          _iteratorAbruptCompletion = false;
          _context.next = 4;
          break;
        case 19:
          _context.next = 25;
          break;
        case 21:
          _context.prev = 21;
          _context.t0 = _context["catch"](2);
          _didIteratorError = true;
          _iteratorError = _context.t0;
        case 25:
          _context.prev = 25;
          _context.prev = 26;
          if (!(_iteratorAbruptCompletion && _iterator["return"] != null)) {
            _context.next = 30;
            break;
          }
          _context.next = 30;
          return _awaitAsyncGenerator(_iterator["return"]());
        case 30:
          _context.prev = 30;
          if (!_didIteratorError) {
            _context.next = 33;
            break;
          }
          throw _iteratorError;
        case 33:
          return _context.finish(30);
        case 34:
          return _context.finish(25);
        case 35:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[2, 21, 25, 35], [26,, 30, 34]]);
  })));
}
function getMessageUnmarshaller(deserializer, toUtf8) {
  return /*#__PURE__*/function () {
    var _ref3 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(message) {
      var messageType, unmodeledError, code, exception, deserializedException, error, event, deserialized;
      return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            messageType = message.headers[":message-type"].value;
            if (!(messageType === "error")) {
              _context2.next = 7;
              break;
            }
            unmodeledError = new Error(message.headers[":error-message"].value || "UnknownError");
            unmodeledError.name = message.headers[":error-code"].value;
            throw unmodeledError;
          case 7:
            if (!(messageType === "exception")) {
              _context2.next = 20;
              break;
            }
            code = message.headers[":exception-type"].value;
            exception = defineProperty_defineProperty({}, code, message);
            _context2.next = 12;
            return deserializer(exception);
          case 12:
            deserializedException = _context2.sent;
            if (!deserializedException.$unknown) {
              _context2.next = 17;
              break;
            }
            error = new Error(toUtf8(message.body));
            error.name = code;
            throw error;
          case 17:
            throw deserializedException[code];
          case 20:
            if (!(messageType === "event")) {
              _context2.next = 30;
              break;
            }
            event = defineProperty_defineProperty({}, message.headers[":event-type"].value, message);
            _context2.next = 24;
            return deserializer(event);
          case 24:
            deserialized = _context2.sent;
            if (!deserialized.$unknown) {
              _context2.next = 27;
              break;
            }
            return _context2.abrupt("return");
          case 27:
            return _context2.abrupt("return", deserialized);
          case 30:
            throw Error("Unrecognizable event type: ".concat(message.headers[":event-type"].value));
          case 31:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return function (_x) {
      return _ref3.apply(this, arguments);
    };
  }();
}
;// ./node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.3/node_modules/@smithy/eventstream-serde-universal/dist-es/EventStreamMarshaller.js





var EventStreamMarshaller_EventStreamMarshaller = /*#__PURE__*/function () {
  function EventStreamMarshaller(_ref) {
    var utf8Encoder = _ref.utf8Encoder,
      utf8Decoder = _ref.utf8Decoder;
    classCallCheck_classCallCheck(this, EventStreamMarshaller);
    this.eventStreamCodec = new EventStreamCodec(utf8Encoder, utf8Decoder);
    this.utfEncoder = utf8Encoder;
  }
  return createClass_createClass(EventStreamMarshaller, [{
    key: "deserialize",
    value: function deserialize(body, deserializer) {
      var inputStream = getChunkedStream(body);
      return new SmithyMessageDecoderStream({
        messageStream: new MessageDecoderStream({
          inputStream: inputStream,
          decoder: this.eventStreamCodec
        }),
        deserializer: getMessageUnmarshaller(deserializer, this.utfEncoder)
      });
    }
  }, {
    key: "serialize",
    value: function serialize(inputStream, serializer) {
      return new MessageEncoderStream({
        messageStream: new SmithyMessageEncoderStream({
          inputStream: inputStream,
          serializer: serializer
        }),
        encoder: this.eventStreamCodec,
        includeEndFrame: true
      });
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.3/node_modules/@smithy/eventstream-serde-universal/dist-es/provider.js

var eventStreamSerdeProvider = function eventStreamSerdeProvider(options) {
  return new EventStreamMarshaller(options);
};
;// ./node_modules/.pnpm/@smithy+eventstream-serde-universal@2.0.3/node_modules/@smithy/eventstream-serde-universal/dist-es/index.js


;// ./node_modules/.pnpm/@smithy+eventstream-serde-node@2.0.3/node_modules/@smithy/eventstream-serde-node/dist-es/utils.js



function readabletoIterable(_x) {
  return _readabletoIterable.apply(this, arguments);
}
function _readabletoIterable() {
  _readabletoIterable = wrapAsyncGenerator_wrapAsyncGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(readStream) {
    var streamEnded, generationEnded, records, value;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          streamEnded = false;
          generationEnded = false;
          records = new Array();
          readStream.on("error", function (err) {
            if (!streamEnded) {
              streamEnded = true;
            }
            if (err) {
              throw err;
            }
          });
          readStream.on("data", function (data) {
            records.push(data);
          });
          readStream.on("end", function () {
            streamEnded = true;
          });
        case 6:
          if (generationEnded) {
            _context.next = 16;
            break;
          }
          _context.next = 9;
          return awaitAsyncGenerator_awaitAsyncGenerator(new Promise(function (resolve) {
            return setTimeout(function () {
              return resolve(records.shift());
            }, 0);
          }));
        case 9:
          value = _context.sent;
          if (!value) {
            _context.next = 13;
            break;
          }
          _context.next = 13;
          return value;
        case 13:
          generationEnded = streamEnded && records.length === 0;
          _context.next = 6;
          break;
        case 16:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _readabletoIterable.apply(this, arguments);
}
;// ./node_modules/.pnpm/@smithy+eventstream-serde-node@2.0.3/node_modules/@smithy/eventstream-serde-node/dist-es/EventStreamMarshaller.js





var dist_es_EventStreamMarshaller_EventStreamMarshaller = /*#__PURE__*/function () {
  function EventStreamMarshaller(_ref) {
    var utf8Encoder = _ref.utf8Encoder,
      utf8Decoder = _ref.utf8Decoder;
    classCallCheck_classCallCheck(this, EventStreamMarshaller);
    this.universalMarshaller = new EventStreamMarshaller_EventStreamMarshaller({
      utf8Decoder: utf8Decoder,
      utf8Encoder: utf8Encoder
    });
  }
  return createClass_createClass(EventStreamMarshaller, [{
    key: "deserialize",
    value: function deserialize(body, deserializer) {
      var bodyIterable = typeof body[Symbol.asyncIterator] === "function" ? body : readabletoIterable(body);
      return this.universalMarshaller.deserialize(bodyIterable, deserializer);
    }
  }, {
    key: "serialize",
    value: function serialize(input, serializer) {
      return external_stream_namespaceObject.Readable.from(this.universalMarshaller.serialize(input, serializer));
    }
  }]);
}();
;// ./node_modules/.pnpm/@smithy+eventstream-serde-node@2.0.3/node_modules/@smithy/eventstream-serde-node/dist-es/provider.js

var provider_eventStreamSerdeProvider = function eventStreamSerdeProvider(options) {
  return new dist_es_EventStreamMarshaller_EventStreamMarshaller(options);
};
;// ./node_modules/.pnpm/@smithy+eventstream-serde-node@2.0.3/node_modules/@smithy/eventstream-serde-node/dist-es/index.js


;// ./node_modules/.pnpm/@smithy+hash-stream-node@2.0.3/node_modules/@smithy/hash-stream-node/dist-es/HashCalculator.js






var HashCalculator_HashCalculator = /*#__PURE__*/function (_Writable) {
  function HashCalculator(hash, options) {
    var _this;
    classCallCheck_classCallCheck(this, HashCalculator);
    _this = callSuper_callSuper(this, HashCalculator, [options]);
    _this.hash = hash;
    return _this;
  }
  inherits_inherits(HashCalculator, _Writable);
  return createClass_createClass(HashCalculator, [{
    key: "_write",
    value: function _write(chunk, encoding, callback) {
      try {
        this.hash.update(toUint8Array(chunk));
      } catch (err) {
        return callback(err);
      }
      callback();
    }
  }]);
}(external_stream_namespaceObject.Writable);
;// ./node_modules/.pnpm/@smithy+hash-stream-node@2.0.3/node_modules/@smithy/hash-stream-node/dist-es/fileStreamHasher.js


var fileStreamHasher = function fileStreamHasher(hashCtor, fileStream) {
  return new Promise(function (resolve, reject) {
    if (!isReadStream(fileStream)) {
      reject(new Error("Unable to calculate hash for non-file streams."));
      return;
    }
    var fileStreamTee = createReadStream(fileStream.path, {
      start: fileStream.start,
      end: fileStream.end
    });
    var hash = new hashCtor();
    var hashCalculator = new HashCalculator(hash);
    fileStreamTee.pipe(hashCalculator);
    fileStreamTee.on("error", function (err) {
      hashCalculator.end();
      reject(err);
    });
    hashCalculator.on("error", reject);
    hashCalculator.on("finish", function () {
      hash.digest().then(resolve)["catch"](reject);
    });
  });
};
var isReadStream = function isReadStream(stream) {
  return typeof stream.path === "string";
};
;// ./node_modules/.pnpm/@smithy+hash-stream-node@2.0.3/node_modules/@smithy/hash-stream-node/dist-es/readableStreamHasher.js

var readableStreamHasher = function readableStreamHasher(hashCtor, readableStream) {
  if (readableStream.readableFlowing !== null) {
    throw new Error("Unable to calculate hash for flowing readable stream");
  }
  var hash = new hashCtor();
  var hashCalculator = new HashCalculator_HashCalculator(hash);
  readableStream.pipe(hashCalculator);
  return new Promise(function (resolve, reject) {
    readableStream.on("error", function (err) {
      hashCalculator.end();
      reject(err);
    });
    hashCalculator.on("error", reject);
    hashCalculator.on("finish", function () {
      hash.digest().then(resolve)["catch"](reject);
    });
  });
};
;// ./node_modules/.pnpm/@smithy+hash-stream-node@2.0.3/node_modules/@smithy/hash-stream-node/dist-es/index.js


;// ./node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.391.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/SignatureV4MultiRegion.js






var SignatureV4MultiRegion = /*#__PURE__*/function () {
  function SignatureV4MultiRegion(options) {
    classCallCheck_classCallCheck(this, SignatureV4MultiRegion);
    this.sigv4Signer = new SignatureV4_SignatureV4(options);
    this.signerOptions = options;
  }
  return createClass_createClass(SignatureV4MultiRegion, [{
    key: "sign",
    value: function () {
      var _sign = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(requestToSign) {
        var options,
          _args = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
              if (!(options.signingRegion === "*")) {
                _context.next = 5;
                break;
              }
              if (!(this.signerOptions.runtime !== "node")) {
                _context.next = 4;
                break;
              }
              throw new Error("This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js");
            case 4:
              return _context.abrupt("return", this.getSigv4aSigner().sign(requestToSign, options));
            case 5:
              return _context.abrupt("return", this.sigv4Signer.sign(requestToSign, options));
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function sign(_x) {
        return _sign.apply(this, arguments);
      }
      return sign;
    }()
  }, {
    key: "presign",
    value: function () {
      var _presign = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(originalRequest) {
        var options,
          _args2 = arguments;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};
              if (!(options.signingRegion === "*")) {
                _context2.next = 5;
                break;
              }
              if (!(this.signerOptions.runtime !== "node")) {
                _context2.next = 4;
                break;
              }
              throw new Error("This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js");
            case 4:
              return _context2.abrupt("return", this.getSigv4aSigner().presign(originalRequest, options));
            case 5:
              return _context2.abrupt("return", this.sigv4Signer.presign(originalRequest, options));
            case 6:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function presign(_x2) {
        return _presign.apply(this, arguments);
      }
      return presign;
    }()
  }, {
    key: "getSigv4aSigner",
    value: function getSigv4aSigner() {
      if (!this.sigv4aSigner) {
        var CrtSignerV4;
        try {
          CrtSignerV4 =  true && Object(function webpackMissingModule() { var e = new Error("Cannot find module '@aws-sdk/signature-v4-crt'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
          if (typeof CrtSignerV4 !== "function") throw new Error();
        } catch (e) {
          e.message = "".concat(e.message, "\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \n") + "For more information please go to " + "https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt";
          throw e;
        }
        this.sigv4aSigner = new CrtSignerV4(_objectSpread2(_objectSpread2({}, this.signerOptions), {}, {
          signingAlgorithm: 1
        }));
      }
      return this.sigv4aSigner;
    }
  }]);
}();
;// ./node_modules/.pnpm/@aws-sdk+signature-v4-multi-region@3.391.0/node_modules/@aws-sdk/signature-v4-multi-region/dist-es/index.js

;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/endpoint/ruleset.js

var bJ = "required",
  bK = "type",
  bL = "conditions",
  bM = "fn",
  bN = "argv",
  bO = "ref",
  bP = "assign",
  bQ = "url",
  bR = "properties",
  bS = "authSchemes",
  bT = "disableDoubleEncoding",
  bU = "signingName",
  bV = "signingRegion",
  bW = "headers";
var endpoint_ruleset_a = false,
  endpoint_ruleset_b = true,
  endpoint_ruleset_c = "isSet",
  endpoint_ruleset_d = "tree",
  endpoint_ruleset_e = "booleanEquals",
  endpoint_ruleset_f = "error",
  endpoint_ruleset_g = "aws.partition",
  endpoint_ruleset_h = "stringEquals",
  dist_es_endpoint_ruleset_i = "getAttr",
  endpoint_ruleset_j = "name",
  endpoint_ruleset_k = "substring",
  endpoint_ruleset_l = "hardwareType",
  endpoint_ruleset_m = "regionPrefix",
  endpoint_ruleset_n = "bucketAliasSuffix",
  endpoint_ruleset_o = "outpostId",
  endpoint_ruleset_p = "isValidHostLabel",
  endpoint_ruleset_q = "not",
  endpoint_ruleset_r = "parseURL",
  endpoint_ruleset_s = "s3-outposts",
  ruleset_t = "endpoint",
  ruleset_u = "aws.isVirtualHostableS3Bucket",
  ruleset_v = "s3",
  ruleset_w = "{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}",
  ruleset_x = "{url#scheme}://{Bucket}.{url#authority}{url#path}",
  ruleset_y = "https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}",
  ruleset_z = "https://{Bucket}.s3.{partitionResult#dnsSuffix}",
  ruleset_A = "aws.parseArn",
  ruleset_B = "bucketArn",
  ruleset_C = "arnType",
  ruleset_D = "",
  ruleset_E = "s3-object-lambda",
  ruleset_F = "accesspoint",
  ruleset_G = "accessPointName",
  ruleset_H = "{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}",
  ruleset_I = "mrapPartition",
  ruleset_J = "outpostType",
  K = "arnPrefix",
  L = "{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}",
  M = "https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
  N = "{url#scheme}://{url#authority}{url#path}",
  O = "https://s3.{partitionResult#dnsSuffix}",
  P = defineProperty_defineProperty(defineProperty_defineProperty({}, bJ, false), bK, "String"),
  Q = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bJ, true), "default", false), bK, "Boolean"),
  R = defineProperty_defineProperty(defineProperty_defineProperty({}, bJ, false), bK, "Boolean"),
  S = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "Accelerate"), true]),
  T = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseFIPS"), true]),
  U = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseDualStack"), true]),
  V = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty({}, bO, "Endpoint")]),
  W = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_g), bN, [defineProperty_defineProperty({}, bO, "Region")]), bP, "partitionResult"),
  X = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [defineProperty_defineProperty({}, bO, "partitionResult"), endpoint_ruleset_j]), "aws-cn"]),
  Y = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty({}, bO, "Bucket")]),
  Z = defineProperty_defineProperty({}, bO, "Bucket"),
  aa = defineProperty_defineProperty({}, bO, endpoint_ruleset_l),
  ab = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [V])]), endpoint_ruleset_f, "Expected a endpoint to be specified but no endpoint was found"), bK, endpoint_ruleset_f),
  ac = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [V]),
  ad = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_r), bN, [defineProperty_defineProperty({}, bO, "Endpoint")]), bP, "url"),
  ae = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, endpoint_ruleset_s), bV, "{Region}")]),
  af = {},
  ag = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "ForcePathStyle"), false]),
  ah = defineProperty_defineProperty({}, bO, "ForcePathStyle"),
  ai = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "Accelerate"), false]),
  aj = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, "Region"), "aws-global"]),
  ak = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_v), bV, "us-east-1")]),
  al = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [aj]),
  am = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseGlobalEndpoint"), true]),
  an = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}"), bR, defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_v), bV, "{Region}")])), bW, {}),
  ao = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_v), bV, "{Region}")]),
  ap = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseGlobalEndpoint"), false]),
  aq = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseDualStack"), false]),
  ar = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  as = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseFIPS"), false]),
  at = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  au = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  av = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [defineProperty_defineProperty({}, bO, "url"), "isIp"]), true]),
  aw = defineProperty_defineProperty({}, bO, "url"),
  ax = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aw, "isIp"]), false]),
  ay = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_w), bR, ao), bW, {}),
  az = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_x), bR, ao), bW, {}),
  aA = defineProperty_defineProperty(defineProperty_defineProperty({}, ruleset_t, az), bK, ruleset_t),
  aB = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_y), bR, ao), bW, {}),
  aC = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  aD = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid region: region was not a valid DNS name."), bK, endpoint_ruleset_f),
  aE = defineProperty_defineProperty({}, bO, ruleset_B),
  aF = defineProperty_defineProperty({}, bO, ruleset_C),
  aG = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "service"]),
  aH = defineProperty_defineProperty({}, bO, ruleset_G),
  aI = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U]), endpoint_ruleset_f, "S3 Object Lambda does not support Dual-stack"), bK, endpoint_ruleset_f),
  aJ = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [S]), endpoint_ruleset_f, "S3 Object Lambda does not support S3 Accelerate"), bK, endpoint_ruleset_f),
  aK = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty({}, bO, "DisableAccessPoints")]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "DisableAccessPoints"), true])]), endpoint_ruleset_f, "Access points are not supported for this operation"), bK, endpoint_ruleset_f),
  aL = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty({}, bO, "UseArnRegion")]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "UseArnRegion"), false]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "region"]), "{Region}"])])]), endpoint_ruleset_f, "Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`"), bK, endpoint_ruleset_f),
  aM = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [defineProperty_defineProperty({}, bO, "bucketPartition"), endpoint_ruleset_j]),
  aN = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "accountId"]),
  aO = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_E), bV, "{bucketArn#region}")]),
  aP = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`"), bK, endpoint_ruleset_f),
  aQ = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`"), bK, endpoint_ruleset_f),
  aR = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)"), bK, endpoint_ruleset_f),
  aS = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`"), bK, endpoint_ruleset_f),
  aT = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid ARN: The ARN may only contain a single resource component after `accesspoint`."), bK, endpoint_ruleset_f),
  aU = defineProperty_defineProperty(defineProperty_defineProperty({}, endpoint_ruleset_f, "Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided"), bK, endpoint_ruleset_f),
  aV = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_v), bV, "{bucketArn#region}")]),
  aW = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, endpoint_ruleset_s), bV, "{bucketArn#region}")]),
  aX = defineProperty_defineProperty(defineProperty_defineProperty({}, bM, ruleset_A), bN, [Z]),
  aY = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ao), bW, {}),
  aZ = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ao), bW, {}),
  ba = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ao), bW, {}),
  bb = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, L), bR, ao), bW, {}),
  bc = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ao), bW, {}),
  bd = defineProperty_defineProperty({}, bO, "UseObjectLambdaEndpoint"),
  be = defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, true), endpoint_ruleset_j, "sigv4"), bU, ruleset_E), bV, "{Region}")]),
  bf = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  bg = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  bh = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  bi = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, N), bR, ao), bW, {}),
  bj = defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.{Region}.{partitionResult#dnsSuffix}"), bR, ao), bW, {}),
  bk = [defineProperty_defineProperty({}, bO, "Region")],
  bl = [defineProperty_defineProperty({}, bO, "Endpoint")],
  bm = [Z],
  bn = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [defineProperty_defineProperty({}, bO, endpoint_ruleset_o), false])],
  bo = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, endpoint_ruleset_m), "beta"])],
  bp = [V, ad],
  bq = [Y],
  br = [W],
  bs = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [defineProperty_defineProperty({}, bO, "Region"), false])],
  bt = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, "Region"), "us-east-1"])],
  bu = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aF, ruleset_F])],
  bv = [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "resourceId[1]"]), bP, ruleset_G), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aH, ruleset_D])])],
  bw = [aE, "resourceId[1]"],
  bx = [U],
  by = [S],
  bz = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "region"]), ruleset_D])])],
  bA = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "resourceId[2]"])])])],
  bB = [aE, "resourceId[2]"],
  bC = [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_g), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "region"])]), bP, "bucketPartition")],
  bD = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aM, defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [defineProperty_defineProperty({}, bO, "partitionResult"), endpoint_ruleset_j])])],
  bE = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "region"]), true])],
  bF = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [aN, false])],
  bG = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [aH, false])],
  bH = [T],
  bI = [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [defineProperty_defineProperty({}, bO, "Region"), true])];
var endpoint_ruleset_data = {
  version: "1.0",
  parameters: {
    Bucket: P,
    Region: P,
    UseFIPS: Q,
    UseDualStack: Q,
    Endpoint: P,
    ForcePathStyle: Q,
    Accelerate: Q,
    UseGlobalEndpoint: Q,
    UseObjectLambdaEndpoint: R,
    DisableAccessPoints: R,
    DisableMultiRegionAccessPoints: Q,
    UseArnRegion: R
  },
  rules: [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, bk)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [S, T]), "error", "Accelerate cannot be used with FIPS"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, V]), "error", "Cannot set dual-stack in combination with a custom endpoint."), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [V, T]), "error", "A custom endpoint cannot be combined with FIPS"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [V, S]), "error", "A custom endpoint cannot be combined with S3 Accelerate"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, W, X]), "error", "Partition does not support FIPS"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [Y, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_k), bN, [Z, 49, 50, endpoint_ruleset_b]), bP, endpoint_ruleset_l), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_k), bN, [Z, 8, 12, endpoint_ruleset_b]), bP, endpoint_ruleset_m), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_k), bN, [Z, 0, 7, endpoint_ruleset_b]), bP, endpoint_ruleset_n), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_k), bN, [Z, 32, 49, endpoint_ruleset_b]), bP, endpoint_ruleset_o), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_g), bN, bk), bP, "regionPartition"), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, endpoint_ruleset_n), "--op-s3"])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bn), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aa, "e"])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bo), bK, endpoint_ruleset_d), "rules", [ab, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bp), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.ec2.{url#authority}"), bR, ae), bW, af)), bK, ruleset_t)]), defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}"), bR, ae), bW, af)
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aa, "o"])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bo), bK, endpoint_ruleset_d), "rules", [ab, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bp), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.op-{outpostId}.{url#authority}"), bR, ae), bW, af)), bK, ruleset_t)]), defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}"), bR, ae), bW, af)
  }, bK, ruleset_t)]), defineProperty_defineProperty({
    error: "Unrecognized hardware type: \"Expected hardware type o or e but got {hardwareType}\""
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`."
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bq), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [V, defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_r), bN, bl)])])]), "error", "Custom endpoint `{Endpoint}` was not a valid URI"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [ag, defineProperty_defineProperty(defineProperty_defineProperty({}, bM, ruleset_u), bN, [Z, endpoint_ruleset_a])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bs), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [S, X]), "error", "S3 Accelerate cannot be used in this region"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, T, ai, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, T, ai, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: an
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, T, ai, ac, al, ap]), "endpoint", an), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, T, ai, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, T, ai, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: ar
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, T, ai, ac, al, ap]), "endpoint", ar), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, S, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, S, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: at
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, S, ac, al, ap]), "endpoint", at), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, ai, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, ai, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: au
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, as, ai, ac, al, ap]), "endpoint", au), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, av, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_w), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, ax, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_x), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, av, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", ay), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: ay
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, ax, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", az), bK, ruleset_t), aA]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, av, al, ap]), "endpoint", ay), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, V, ad, ax, al, ap]), "endpoint", az), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, S, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_y), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, S, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", aB), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: aB
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, S, ac, al, ap]), "endpoint", aB), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_z), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_z), bR, ao), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: aC
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, as, ai, ac, al, ap]), "endpoint", aC), bK, ruleset_t)]), aD])]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [V, ad, defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aw, "scheme"]), "http"]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, ruleset_u), bN, [Z, endpoint_ruleset_b]), ag, as, aq, ai]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bs), bK, endpoint_ruleset_d), "rules", [aA]), aD])]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [ag, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, ruleset_A), bN, bm), bP, ruleset_B)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "resourceId[0]"]), bP, ruleset_C), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aF, ruleset_D])])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aG, ruleset_E])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bu), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bv), bK, endpoint_ruleset_d), "rules", [aI, aJ, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bz), bK, endpoint_ruleset_d), "rules", [aK, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bA), bK, endpoint_ruleset_d), "rules", [aL, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bC), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bD), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bE), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aN, ruleset_D])]), "error", "Invalid ARN: Missing account id"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bF), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bG), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bp), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_H), bR, aO), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bH), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aO), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aO), bW, af)
  }, bK, ruleset_t)]), aP]), aQ]), aR]), aS])])]), aT]), defineProperty_defineProperty({
    error: "Invalid ARN: bucket ARN is missing a region"
  }, bK, endpoint_ruleset_f)]), aU]), defineProperty_defineProperty({
    error: "Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bu), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bv), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bz), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bu), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bz), bK, endpoint_ruleset_d), "rules", [aK, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bA), bK, endpoint_ruleset_d), "rules", [aL, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bC), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aM, "{partitionResult#name}"])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bE), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aG, ruleset_v])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bF), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bG), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, by), "error", "Access Points do not support S3 Accelerate"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, U]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aV), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, aq]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aV), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, U]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aV), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, V, ad]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, ruleset_H), bR, aV), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aV), bW, af)), bK, ruleset_t)]), aP]), aQ]), defineProperty_defineProperty({
    error: "Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}"
  }, bK, endpoint_ruleset_f)]), aR]), aS])])]), aT])])]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_p), bN, [aH, endpoint_ruleset_b])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bx), "error", "S3 MRAP does not support dual-stack"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bH), "error", "S3 MRAP does not support FIPS"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, by), "error", "S3 MRAP does not support S3 Accelerate"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [defineProperty_defineProperty({}, bO, "DisableMultiRegionAccessPoints"), endpoint_ruleset_b])]), "error", "Invalid configuration: Multi-Region Access Point ARNs are disabled."), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_g), bN, bk), bP, ruleset_I)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [defineProperty_defineProperty({}, bO, ruleset_I), endpoint_ruleset_j]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "partition"])])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}"), bR, defineProperty_defineProperty({}, bS, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bT, endpoint_ruleset_b), "name", "sigv4a"), bU, ruleset_v), "signingRegionSet", ["*"])])), bW, af)
  }, bK, ruleset_t)]), defineProperty_defineProperty({
    error: "Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`"
  }, bK, endpoint_ruleset_f)])]), defineProperty_defineProperty({
    error: "Invalid Access Point Name"
  }, bK, endpoint_ruleset_f)]), aU]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [aG, endpoint_ruleset_s])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bx), "error", "S3 Outposts does not support Dual-stack"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bH), "error", "S3 Outposts does not support FIPS"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, by), "error", "S3 Outposts does not support S3 Accelerate"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "resourceId[4]"])])]), "error", "Invalid Arn: Outpost Access Point ARN contains sub resources"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, bw), bP, endpoint_ruleset_o)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bn), bK, endpoint_ruleset_d), "rules", [aL, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bC), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bD), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bE), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bF), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, bB), bP, ruleset_J)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, dist_es_endpoint_ruleset_i), bN, [aE, "resourceId[3]"]), bP, ruleset_G)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, ruleset_J), ruleset_F])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bp), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}"), bR, aW), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}"), bR, aW), bW, af)
  }, bK, ruleset_t)]), defineProperty_defineProperty({
    error: "Expected an outpost type `accesspoint`, found {outpostType}"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: expected an access point name"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: Expected a 4-component resource"
  }, bK, endpoint_ruleset_f)]), aQ]), aR]), aS])])]), defineProperty_defineProperty({
    error: "Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: The Outpost Id was not set"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty({
    error: "Invalid ARN: No ARN type specified"
  }, bK, endpoint_ruleset_f)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_k), bN, [Z, 0, 4, endpoint_ruleset_a]), bP, K), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_h), bN, [defineProperty_defineProperty({}, bO, K), "arn:"]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [aX])])]), "error", "Invalid ARN: `{Bucket}` was not a valid ARN"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [ah, endpoint_ruleset_b]), aX]), "error", "Path-style addressing cannot be used with ARN buckets"), bK, endpoint_ruleset_f), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bM, "uriEncode"), bN, bm), bP, "uri_encoded_bucket")]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [ai]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, T, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, T, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: aY
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, T, al, ap]), "endpoint", aY), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, T, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, T, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: aZ
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, T, al, ap]), "endpoint", aZ), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, as, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, as, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: ba
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [U, ac, as, al, ap]), "endpoint", ba), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, V, ad, as, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, L), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, V, ad, as, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", bb), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: bb
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, V, ad, as, al, ap]), "endpoint", bb), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, as, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, M), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, as, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, M), bR, ao), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: bc
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [aq, ac, as, al, ap]), "endpoint", bc), bK, ruleset_t)]), defineProperty_defineProperty({
    error: "Path-style addressing cannot be used with S3 Accelerate"
  }, bK, endpoint_ruleset_f)])])]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_c), bN, [bd]), defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_e), bN, [bd, endpoint_ruleset_b])]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bI), bK, endpoint_ruleset_d), "rules", [aI, aJ, defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bp), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, N), bR, be), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bH), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}"), bR, be), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}"), bR, be), bW, af)
  }, bK, ruleset_t)]), aD])]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [defineProperty_defineProperty(defineProperty_defineProperty({}, bM, endpoint_ruleset_q), bN, bq)]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, br), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bI), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, U, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, U, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: bf
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, U, ac, al, ap]), "endpoint", bf), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, aq, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3-fips.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, aq, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: bg
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [T, aq, ac, al, ap]), "endpoint", bg), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, U, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, "https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}"), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, U, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty({
    endpoint: bh
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, U, ac, al, ap]), "endpoint", bh), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, V, ad, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, N), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, V, ad, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", bi), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: bi
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, V, ad, al, ap]), "endpoint", bi), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, ac, aj]), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, O), bR, ak), bW, af)), bK, ruleset_t), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, ac, al, am]), bK, endpoint_ruleset_d), "rules", [defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, bt), "endpoint", defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bQ, O), bR, ao), bW, af)), bK, ruleset_t), defineProperty_defineProperty({
    endpoint: bj
  }, bK, ruleset_t)]), defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, bL, [as, aq, ac, al, ap]), "endpoint", bj), bK, ruleset_t)]), aD])])]), defineProperty_defineProperty({
    error: "A region must be set when sending requests to S3."
  }, bK, endpoint_ruleset_f)]
};
var endpoint_ruleset_ruleSet = endpoint_ruleset_data;
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/endpoint/endpointResolver.js


var endpoint_endpointResolver_defaultEndpointResolver = function defaultEndpointResolver(endpointParams) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return resolveEndpoint(endpoint_ruleset_ruleSet, {
    endpointParams: endpointParams,
    logger: context.logger
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.shared.js







var client_s3_dist_es_runtimeConfig_shared_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$base64Decoder, _config$base64Encoder, _config$disableHostPr, _config$endpointProvi, _config$extensions, _config$getAwsChunked, _config$logger, _config$sdkStreamMixi, _config$serviceId, _config$signerConstru, _config$signingEscape, _config$urlParser, _config$useArnRegion, _config$utf8Decoder, _config$utf8Encoder;
  return {
    apiVersion: "2006-03-01",
    base64Decoder: (_config$base64Decoder = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _config$base64Decoder !== void 0 ? _config$base64Decoder : fromBase64,
    base64Encoder: (_config$base64Encoder = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _config$base64Encoder !== void 0 ? _config$base64Encoder : toBase64,
    disableHostPrefix: (_config$disableHostPr = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _config$disableHostPr !== void 0 ? _config$disableHostPr : false,
    endpointProvider: (_config$endpointProvi = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _config$endpointProvi !== void 0 ? _config$endpointProvi : endpoint_endpointResolver_defaultEndpointResolver,
    extensions: (_config$extensions = config === null || config === void 0 ? void 0 : config.extensions) !== null && _config$extensions !== void 0 ? _config$extensions : [],
    getAwsChunkedEncodingStream: (_config$getAwsChunked = config === null || config === void 0 ? void 0 : config.getAwsChunkedEncodingStream) !== null && _config$getAwsChunked !== void 0 ? _config$getAwsChunked : getAwsChunkedEncodingStream,
    logger: (_config$logger = config === null || config === void 0 ? void 0 : config.logger) !== null && _config$logger !== void 0 ? _config$logger : new NoOpLogger(),
    sdkStreamMixin: (_config$sdkStreamMixi = config === null || config === void 0 ? void 0 : config.sdkStreamMixin) !== null && _config$sdkStreamMixi !== void 0 ? _config$sdkStreamMixi : sdkStreamMixin,
    serviceId: (_config$serviceId = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _config$serviceId !== void 0 ? _config$serviceId : "S3",
    signerConstructor: (_config$signerConstru = config === null || config === void 0 ? void 0 : config.signerConstructor) !== null && _config$signerConstru !== void 0 ? _config$signerConstru : SignatureV4MultiRegion,
    signingEscapePath: (_config$signingEscape = config === null || config === void 0 ? void 0 : config.signingEscapePath) !== null && _config$signingEscape !== void 0 ? _config$signingEscape : false,
    urlParser: (_config$urlParser = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _config$urlParser !== void 0 ? _config$urlParser : parseUrl,
    useArnRegion: (_config$useArnRegion = config === null || config === void 0 ? void 0 : config.useArnRegion) !== null && _config$useArnRegion !== void 0 ? _config$useArnRegion : false,
    utf8Decoder: (_config$utf8Decoder = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _config$utf8Decoder !== void 0 ? _config$utf8Decoder : fromUtf8,
    utf8Encoder: (_config$utf8Encoder = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _config$utf8Encoder !== void 0 ? _config$utf8Encoder : toUtf8
  };
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/runtimeConfig.js





















var dist_es_runtimeConfig_getRuntimeConfig = function getRuntimeConfig(config) {
  var _config$bodyLengthChe, _config$credentialDef, _config$defaultUserAg, _config$eventStreamSe, _config$maxAttempts, _config$md, _config$region, _config$requestHandle, _config$retryMode, _config$sha, _config$sha2, _config$streamCollect, _config$streamHasher, _config$useArnRegion, _config$useDualstackE, _config$useFipsEndpoi;
  emitWarningIfUnsupportedVersion(process.version);
  var defaultsMode = resolveDefaultsModeConfig(config);
  var defaultConfigProvider = function defaultConfigProvider() {
    return defaultsMode().then(loadConfigsForDefaultMode);
  };
  var clientSharedValues = client_s3_dist_es_runtimeConfig_shared_getRuntimeConfig(config);
  return _objectSpread2(_objectSpread2(_objectSpread2({}, clientSharedValues), config), {}, {
    runtime: "node",
    defaultsMode: defaultsMode,
    bodyLengthChecker: (_config$bodyLengthChe = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _config$bodyLengthChe !== void 0 ? _config$bodyLengthChe : calculateBodyLength,
    credentialDefaultProvider: (_config$credentialDef = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _config$credentialDef !== void 0 ? _config$credentialDef : defaultRoleAssumers_decorateDefaultCredentialProvider(defaultProvider),
    defaultUserAgentProvider: (_config$defaultUserAg = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _config$defaultUserAg !== void 0 ? _config$defaultUserAg : defaultUserAgent({
      serviceId: clientSharedValues.serviceId,
      clientVersion: package_namespaceObject.rE
    }),
    eventStreamSerdeProvider: (_config$eventStreamSe = config === null || config === void 0 ? void 0 : config.eventStreamSerdeProvider) !== null && _config$eventStreamSe !== void 0 ? _config$eventStreamSe : provider_eventStreamSerdeProvider,
    maxAttempts: (_config$maxAttempts = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _config$maxAttempts !== void 0 ? _config$maxAttempts : loadConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),
    md5: (_config$md = config === null || config === void 0 ? void 0 : config.md5) !== null && _config$md !== void 0 ? _config$md : Hash.bind(null, "md5"),
    region: (_config$region = config === null || config === void 0 ? void 0 : config.region) !== null && _config$region !== void 0 ? _config$region : loadConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),
    requestHandler: (_config$requestHandle = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _config$requestHandle !== void 0 ? _config$requestHandle : new NodeHttpHandler(defaultConfigProvider),
    retryMode: (_config$retryMode = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _config$retryMode !== void 0 ? _config$retryMode : loadConfig(_objectSpread2(_objectSpread2({}, NODE_RETRY_MODE_CONFIG_OPTIONS), {}, {
      "default": function () {
        var _default2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
          return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return defaultConfigProvider();
              case 2:
                _context.t0 = _context.sent.retryMode;
                if (_context.t0) {
                  _context.next = 5;
                  break;
                }
                _context.t0 = DEFAULT_RETRY_MODE;
              case 5:
                return _context.abrupt("return", _context.t0);
              case 6:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));
        function _default() {
          return _default2.apply(this, arguments);
        }
        return _default;
      }()
    })),
    sha1: (_config$sha = config === null || config === void 0 ? void 0 : config.sha1) !== null && _config$sha !== void 0 ? _config$sha : Hash.bind(null, "sha1"),
    sha256: (_config$sha2 = config === null || config === void 0 ? void 0 : config.sha256) !== null && _config$sha2 !== void 0 ? _config$sha2 : Hash.bind(null, "sha256"),
    streamCollector: (_config$streamCollect = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _config$streamCollect !== void 0 ? _config$streamCollect : streamCollector,
    streamHasher: (_config$streamHasher = config === null || config === void 0 ? void 0 : config.streamHasher) !== null && _config$streamHasher !== void 0 ? _config$streamHasher : readableStreamHasher,
    useArnRegion: (_config$useArnRegion = config === null || config === void 0 ? void 0 : config.useArnRegion) !== null && _config$useArnRegion !== void 0 ? _config$useArnRegion : loadConfig(NODE_USE_ARN_REGION_CONFIG_OPTIONS),
    useDualstackEndpoint: (_config$useDualstackE = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _config$useDualstackE !== void 0 ? _config$useDualstackE : loadConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),
    useFipsEndpoint: (_config$useFipsEndpoi = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _config$useFipsEndpoi !== void 0 ? _config$useFipsEndpoi : loadConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/runtimeExtensions.js


var dist_es_runtimeExtensions_asPartial = function asPartial(t) {
  return t;
};
var dist_es_runtimeExtensions_resolveRuntimeExtensions = function resolveRuntimeExtensions(runtimeConfig, extensions) {
  var clientConfiguration = _objectSpread2({}, dist_es_runtimeExtensions_asPartial(getDefaultClientConfiguration(runtimeConfig)));
  extensions.forEach(function (extension) {
    return extension.configureClient(clientConfiguration);
  });
  return _objectSpread2(_objectSpread2({}, runtimeConfig), resolveDefaultRuntimeConfig(clientConfiguration));
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/S3Client.js























var S3Client = /*#__PURE__*/function (_Client) {
  function S3Client() {
    var _this;
    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {
      _ref[_key] = arguments[_key];
    }
    var configuration = _ref[0];
    classCallCheck_classCallCheck(this, S3Client);
    var _config_0 = dist_es_runtimeConfig_getRuntimeConfig(configuration || {});
    var _config_1 = resolveClientEndpointParameters(_config_0);
    var _config_2 = resolveRegionConfig(_config_1);
    var _config_3 = resolveEndpointConfig(_config_2);
    var _config_4 = resolveRetryConfig(_config_3);
    var _config_5 = resolveHostHeaderConfig(_config_4);
    var _config_6 = resolveAwsAuthConfig(_config_5);
    var _config_7 = resolveS3Config(_config_6);
    var _config_8 = resolveUserAgentConfig(_config_7);
    var _config_9 = resolveEventStreamSerdeConfig(_config_8);
    var _config_10 = dist_es_runtimeExtensions_resolveRuntimeExtensions(_config_9, (configuration === null || configuration === void 0 ? void 0 : configuration.extensions) || []);
    _this = callSuper_callSuper(this, S3Client, [_config_10]);
    _this.config = _config_10;
    _this.middlewareStack.use(getRetryPlugin(_this.config));
    _this.middlewareStack.use(getContentLengthPlugin(_this.config));
    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));
    _this.middlewareStack.use(getLoggerPlugin(_this.config));
    _this.middlewareStack.use(getRecursionDetectionPlugin(_this.config));
    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));
    _this.middlewareStack.use(getValidateBucketNamePlugin(_this.config));
    _this.middlewareStack.use(getAddExpectContinuePlugin(_this.config));
    _this.middlewareStack.use(getUserAgentPlugin(_this.config));
    return _this;
  }
  inherits_inherits(S3Client, _Client);
  return createClass_createClass(S3Client, [{
    key: "destroy",
    value: function destroy() {
      get_get(getPrototypeOf_getPrototypeOf(S3Client.prototype), "destroy", this).call(this);
    }
  }]);
}(Client);
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/constants.js
var ChecksumAlgorithm;
(function (ChecksumAlgorithm) {
  ChecksumAlgorithm["MD5"] = "MD5";
  ChecksumAlgorithm["CRC32"] = "CRC32";
  ChecksumAlgorithm["CRC32C"] = "CRC32C";
  ChecksumAlgorithm["SHA1"] = "SHA1";
  ChecksumAlgorithm["SHA256"] = "SHA256";
})(ChecksumAlgorithm || (ChecksumAlgorithm = {}));
var ChecksumLocation;
(function (ChecksumLocation) {
  ChecksumLocation["HEADER"] = "header";
  ChecksumLocation["TRAILER"] = "trailer";
})(ChecksumLocation || (ChecksumLocation = {}));
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/types.js

var CLIENT_SUPPORTED_ALGORITHMS = [ChecksumAlgorithm.CRC32, ChecksumAlgorithm.CRC32C, ChecksumAlgorithm.SHA1, ChecksumAlgorithm.SHA256];
var PRIORITY_ORDER_ALGORITHMS = [ChecksumAlgorithm.CRC32, ChecksumAlgorithm.CRC32C, ChecksumAlgorithm.SHA1, ChecksumAlgorithm.SHA256];
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmForRequest.js


var getChecksumAlgorithmForRequest = function getChecksumAlgorithmForRequest(input, _ref) {
  var requestChecksumRequired = _ref.requestChecksumRequired,
    requestAlgorithmMember = _ref.requestAlgorithmMember;
  if (!requestAlgorithmMember || !input[requestAlgorithmMember]) {
    return requestChecksumRequired ? ChecksumAlgorithm.MD5 : undefined;
  }
  var checksumAlgorithm = input[requestAlgorithmMember];
  if (!CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {
    throw new Error("The checksum algorithm \"".concat(checksumAlgorithm, "\" is not supported by the client.") + " Select one of ".concat(CLIENT_SUPPORTED_ALGORITHMS, "."));
  }
  return checksumAlgorithm;
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumLocationName.js

var getChecksumLocationName = function getChecksumLocationName(algorithm) {
  return algorithm === ChecksumAlgorithm.MD5 ? "content-md5" : "x-amz-checksum-".concat(algorithm.toLowerCase());
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/hasHeader.js
var hasHeader_hasHeader = function hasHeader(header, headers) {
  var soughtHeader = header.toLowerCase();
  for (var _i = 0, _Object$keys = Object.keys(headers); _i < _Object$keys.length; _i++) {
    var headerName = _Object$keys[_i];
    if (soughtHeader === headerName.toLowerCase()) {
      return true;
    }
  }
  return false;
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/isStreaming.js

var isStreaming = function isStreaming(body) {
  return body !== undefined && typeof body !== "string" && !ArrayBuffer.isView(body) && !isArrayBuffer(body);
};
// EXTERNAL MODULE: ./node_modules/.pnpm/@aws-crypto+crc32c@3.0.0/node_modules/@aws-crypto/crc32c/build/index.js
var crc32c_build = __webpack_require__(4820);
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/selectChecksumAlgorithmFunction.js




var selectChecksumAlgorithmFunction = function selectChecksumAlgorithmFunction(checksumAlgorithm, config) {
  return defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty(defineProperty_defineProperty({}, ChecksumAlgorithm.MD5, config.md5), ChecksumAlgorithm.CRC32, crc32_build.AwsCrc32), ChecksumAlgorithm.CRC32C, crc32c_build.AwsCrc32c), ChecksumAlgorithm.SHA1, config.sha1), ChecksumAlgorithm.SHA256, config.sha256)[checksumAlgorithm];
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/stringHasher.js

var stringHasher = function stringHasher(checksumAlgorithmFn, body) {
  var hash = new checksumAlgorithmFn();
  hash.update(toUint8Array(body || ""));
  return hash.digest();
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksum.js




var getChecksum = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(body, _ref) {
    var streamHasher, checksumAlgorithmFn, base64Encoder, digest;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          streamHasher = _ref.streamHasher, checksumAlgorithmFn = _ref.checksumAlgorithmFn, base64Encoder = _ref.base64Encoder;
          digest = isStreaming(body) ? streamHasher(checksumAlgorithmFn, body) : stringHasher(checksumAlgorithmFn, body);
          _context.t0 = base64Encoder;
          _context.next = 5;
          return digest;
        case 5:
          _context.t1 = _context.sent;
          return _context.abrupt("return", (0, _context.t0)(_context.t1));
        case 7:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function getChecksum(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getChecksumAlgorithmListForResponse.js


var getChecksumAlgorithmListForResponse = function getChecksumAlgorithmListForResponse() {
  var responseAlgorithms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var validChecksumAlgorithms = [];
  var _iterator = createForOfIteratorHelper_createForOfIteratorHelper(PRIORITY_ORDER_ALGORITHMS),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var algorithm = _step.value;
      if (!responseAlgorithms.includes(algorithm) || !CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {
        continue;
      }
      validChecksumAlgorithms.push(algorithm);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return validChecksumAlgorithms;
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/validateChecksumFromResponse.js







var validateChecksumFromResponse = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(response, _ref) {
    var config, responseAlgorithms, checksumAlgorithms, responseBody, responseHeaders, _iterator, _step, algorithm, responseHeader, checksumFromResponse, checksumAlgorithmFn, streamHasher, base64Encoder, checksum;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          config = _ref.config, responseAlgorithms = _ref.responseAlgorithms;
          checksumAlgorithms = getChecksumAlgorithmListForResponse(responseAlgorithms);
          responseBody = response.body, responseHeaders = response.headers;
          _iterator = createForOfIteratorHelper_createForOfIteratorHelper(checksumAlgorithms);
          _context.prev = 4;
          _iterator.s();
        case 6:
          if ((_step = _iterator.n()).done) {
            _context.next = 21;
            break;
          }
          algorithm = _step.value;
          responseHeader = getChecksumLocationName(algorithm);
          checksumFromResponse = responseHeaders[responseHeader];
          if (!checksumFromResponse) {
            _context.next = 19;
            break;
          }
          checksumAlgorithmFn = selectChecksumAlgorithmFunction(algorithm, config);
          streamHasher = config.streamHasher, base64Encoder = config.base64Encoder;
          _context.next = 15;
          return getChecksum(responseBody, {
            streamHasher: streamHasher,
            checksumAlgorithmFn: checksumAlgorithmFn,
            base64Encoder: base64Encoder
          });
        case 15:
          checksum = _context.sent;
          if (!(checksum === checksumFromResponse)) {
            _context.next = 18;
            break;
          }
          return _context.abrupt("break", 21);
        case 18:
          throw new Error("Checksum mismatch: expected \"".concat(checksum, "\" but received \"").concat(checksumFromResponse, "\"") + " in response header \"".concat(responseHeader, "\"."));
        case 19:
          _context.next = 6;
          break;
        case 21:
          _context.next = 26;
          break;
        case 23:
          _context.prev = 23;
          _context.t0 = _context["catch"](4);
          _iterator.e(_context.t0);
        case 26:
          _context.prev = 26;
          _iterator.f();
          return _context.finish(26);
        case 29:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[4, 23, 26, 29]]);
  }));
  return function validateChecksumFromResponse(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/flexibleChecksumsMiddleware.js












var flexibleChecksumsMiddleware = function flexibleChecksumsMiddleware(config, middlewareConfig) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var request, requestBody, headers, base64Encoder, streamHasher, input, requestChecksumRequired, requestAlgorithmMember, checksumAlgorithm, updatedBody, updatedHeaders, checksumLocationName, checksumAlgorithmFn, getAwsChunkedEncodingStream, bodyLengthChecker, rawChecksum, result, requestValidationModeMember, responseAlgorithms;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (httpRequest_HttpRequest.isInstance(args.request)) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", next(args));
            case 2:
              request = args.request;
              requestBody = request.body, headers = request.headers;
              base64Encoder = config.base64Encoder, streamHasher = config.streamHasher;
              input = middlewareConfig.input, requestChecksumRequired = middlewareConfig.requestChecksumRequired, requestAlgorithmMember = middlewareConfig.requestAlgorithmMember;
              checksumAlgorithm = getChecksumAlgorithmForRequest(input, {
                requestChecksumRequired: requestChecksumRequired,
                requestAlgorithmMember: requestAlgorithmMember
              });
              updatedBody = requestBody;
              updatedHeaders = headers;
              if (!checksumAlgorithm) {
                _context.next = 24;
                break;
              }
              checksumLocationName = getChecksumLocationName(checksumAlgorithm);
              checksumAlgorithmFn = selectChecksumAlgorithmFunction(checksumAlgorithm, config);
              if (!isStreaming(requestBody)) {
                _context.next = 19;
                break;
              }
              getAwsChunkedEncodingStream = config.getAwsChunkedEncodingStream, bodyLengthChecker = config.bodyLengthChecker;
              updatedBody = getAwsChunkedEncodingStream(requestBody, {
                base64Encoder: base64Encoder,
                bodyLengthChecker: bodyLengthChecker,
                checksumLocationName: checksumLocationName,
                checksumAlgorithmFn: checksumAlgorithmFn,
                streamHasher: streamHasher
              });
              updatedHeaders = _objectSpread2(_objectSpread2({}, headers), {}, {
                "content-encoding": headers["content-encoding"] ? "".concat(headers["content-encoding"], ",aws-chunked") : "aws-chunked",
                "transfer-encoding": "chunked",
                "x-amz-decoded-content-length": headers["content-length"],
                "x-amz-content-sha256": "STREAMING-UNSIGNED-PAYLOAD-TRAILER",
                "x-amz-trailer": checksumLocationName
              });
              delete updatedHeaders["content-length"];
              _context.next = 24;
              break;
            case 19:
              if (hasHeader_hasHeader(checksumLocationName, headers)) {
                _context.next = 24;
                break;
              }
              _context.next = 22;
              return stringHasher(checksumAlgorithmFn, requestBody);
            case 22:
              rawChecksum = _context.sent;
              updatedHeaders = _objectSpread2(_objectSpread2({}, headers), {}, defineProperty_defineProperty({}, checksumLocationName, base64Encoder(rawChecksum)));
            case 24:
              _context.next = 26;
              return next(_objectSpread2(_objectSpread2({}, args), {}, {
                request: _objectSpread2(_objectSpread2({}, request), {}, {
                  headers: updatedHeaders,
                  body: updatedBody
                })
              }));
            case 26:
              result = _context.sent;
              requestValidationModeMember = middlewareConfig.requestValidationModeMember, responseAlgorithms = middlewareConfig.responseAlgorithms;
              if (!(requestValidationModeMember && input[requestValidationModeMember] === "ENABLED")) {
                _context.next = 31;
                break;
              }
              _context.next = 31;
              return validateChecksumFromResponse(result.response, {
                config: config,
                responseAlgorithms: responseAlgorithms
              });
            case 31:
              return _context.abrupt("return", result);
            case 32:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/getFlexibleChecksumsPlugin.js

var flexibleChecksumsMiddlewareOptions = {
  name: "flexibleChecksumsMiddleware",
  step: "build",
  tags: ["BODY_CHECKSUM"],
  override: true
};
var getFlexibleChecksumsPlugin = function getFlexibleChecksumsPlugin(config, middlewareConfig) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(flexibleChecksumsMiddleware(config, middlewareConfig), flexibleChecksumsMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+middleware-flexible-checksums@3.391.0/node_modules/@aws-sdk/middleware-flexible-checksums/dist-es/index.js



;// ./node_modules/.pnpm/@aws-sdk+middleware-ssec@3.391.0/node_modules/@aws-sdk/middleware-ssec/dist-es/index.js




function ssecMiddleware(options) {
  return function (next) {
    return /*#__PURE__*/function () {
      var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args) {
        var input, properties, _i, _properties, prop, value, valueView, encoded, hash;
        return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              input = _objectSpread2({}, args.input);
              properties = [{
                target: "SSECustomerKey",
                hash: "SSECustomerKeyMD5"
              }, {
                target: "CopySourceSSECustomerKey",
                hash: "CopySourceSSECustomerKeyMD5"
              }];
              _i = 0, _properties = properties;
            case 3:
              if (!(_i < _properties.length)) {
                _context.next = 27;
                break;
              }
              prop = _properties[_i];
              value = input[prop.target];
              if (!value) {
                _context.next = 24;
                break;
              }
              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === "string" ? options.utf8Decoder(value) : new Uint8Array(value);
              encoded = options.base64Encoder(valueView);
              hash = new options.md5();
              hash.update(valueView);
              _context.t0 = _objectSpread2;
              _context.t1 = _objectSpread2({}, input);
              _context.t2 = {};
              _context.t3 = defineProperty_defineProperty;
              _context.t4 = defineProperty_defineProperty({}, prop.target, encoded);
              _context.t5 = prop.hash;
              _context.t6 = options;
              _context.next = 20;
              return hash.digest();
            case 20:
              _context.t7 = _context.sent;
              _context.t8 = _context.t6.base64Encoder.call(_context.t6, _context.t7);
              _context.t9 = (0, _context.t3)(_context.t4, _context.t5, _context.t8);
              input = (0, _context.t0)(_context.t1, _context.t2, _context.t9);
            case 24:
              _i++;
              _context.next = 3;
              break;
            case 27:
              return _context.abrupt("return", next(_objectSpread2(_objectSpread2({}, args), {}, {
                input: input
              })));
            case 28:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();
  };
}
var ssecMiddlewareOptions = {
  name: "ssecMiddleware",
  step: "initialize",
  tags: ["SSE"],
  override: true
};
var getSsecPlugin = function getSsecPlugin(config) {
  return {
    applyToStack: function applyToStack(clientStack) {
      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);
    }
  };
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/models/models_0.js







var RequestCharged = {
  requester: "requester"
};
var RequestPayer = {
  requester: "requester"
};
var models_0_NoSuchUpload = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException) {
  function NoSuchUpload(opts) {
    var _this;
    _classCallCheck(this, NoSuchUpload);
    _this = _callSuper(this, NoSuchUpload, [_objectSpread({
      name: "NoSuchUpload",
      $fault: "client"
    }, opts)]);
    _this.name = "NoSuchUpload";
    _this.$fault = "client";
    Object.setPrototypeOf(_this, NoSuchUpload.prototype);
    return _this;
  }
  _inherits(NoSuchUpload, _BaseException);
  return _createClass(NoSuchUpload);
}(__BaseException)));
var BucketAccelerateStatus = {
  Enabled: "Enabled",
  Suspended: "Suspended"
};
var Type = {
  AmazonCustomerByEmail: "AmazonCustomerByEmail",
  CanonicalUser: "CanonicalUser",
  Group: "Group"
};
var Permission = {
  FULL_CONTROL: "FULL_CONTROL",
  READ: "READ",
  READ_ACP: "READ_ACP",
  WRITE: "WRITE",
  WRITE_ACP: "WRITE_ACP"
};
var OwnerOverride = {
  Destination: "Destination"
};
var ServerSideEncryption = {
  AES256: "AES256",
  aws_kms: "aws:kms",
  aws_kms_dsse: "aws:kms:dsse"
};
var ObjectCannedACL = {
  authenticated_read: "authenticated-read",
  aws_exec_read: "aws-exec-read",
  bucket_owner_full_control: "bucket-owner-full-control",
  bucket_owner_read: "bucket-owner-read",
  "private": "private",
  public_read: "public-read",
  public_read_write: "public-read-write"
};
var models_0_ChecksumAlgorithm = {
  CRC32: "CRC32",
  CRC32C: "CRC32C",
  SHA1: "SHA1",
  SHA256: "SHA256"
};
var MetadataDirective = {
  COPY: "COPY",
  REPLACE: "REPLACE"
};
var ObjectLockLegalHoldStatus = {
  OFF: "OFF",
  ON: "ON"
};
var ObjectLockMode = {
  COMPLIANCE: "COMPLIANCE",
  GOVERNANCE: "GOVERNANCE"
};
var StorageClass = {
  DEEP_ARCHIVE: "DEEP_ARCHIVE",
  GLACIER: "GLACIER",
  GLACIER_IR: "GLACIER_IR",
  INTELLIGENT_TIERING: "INTELLIGENT_TIERING",
  ONEZONE_IA: "ONEZONE_IA",
  OUTPOSTS: "OUTPOSTS",
  REDUCED_REDUNDANCY: "REDUCED_REDUNDANCY",
  SNOW: "SNOW",
  STANDARD: "STANDARD",
  STANDARD_IA: "STANDARD_IA"
};
var TaggingDirective = {
  COPY: "COPY",
  REPLACE: "REPLACE"
};
var models_0_ObjectNotInActiveTierError = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException2) {
  function ObjectNotInActiveTierError(opts) {
    var _this2;
    _classCallCheck(this, ObjectNotInActiveTierError);
    _this2 = _callSuper(this, ObjectNotInActiveTierError, [_objectSpread({
      name: "ObjectNotInActiveTierError",
      $fault: "client"
    }, opts)]);
    _this2.name = "ObjectNotInActiveTierError";
    _this2.$fault = "client";
    Object.setPrototypeOf(_this2, ObjectNotInActiveTierError.prototype);
    return _this2;
  }
  _inherits(ObjectNotInActiveTierError, _BaseException2);
  return _createClass(ObjectNotInActiveTierError);
}(__BaseException)));
var models_0_BucketAlreadyExists = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException3) {
  function BucketAlreadyExists(opts) {
    var _this3;
    _classCallCheck(this, BucketAlreadyExists);
    _this3 = _callSuper(this, BucketAlreadyExists, [_objectSpread({
      name: "BucketAlreadyExists",
      $fault: "client"
    }, opts)]);
    _this3.name = "BucketAlreadyExists";
    _this3.$fault = "client";
    Object.setPrototypeOf(_this3, BucketAlreadyExists.prototype);
    return _this3;
  }
  _inherits(BucketAlreadyExists, _BaseException3);
  return _createClass(BucketAlreadyExists);
}(__BaseException)));
var models_0_BucketAlreadyOwnedByYou = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException4) {
  function BucketAlreadyOwnedByYou(opts) {
    var _this4;
    _classCallCheck(this, BucketAlreadyOwnedByYou);
    _this4 = _callSuper(this, BucketAlreadyOwnedByYou, [_objectSpread({
      name: "BucketAlreadyOwnedByYou",
      $fault: "client"
    }, opts)]);
    _this4.name = "BucketAlreadyOwnedByYou";
    _this4.$fault = "client";
    Object.setPrototypeOf(_this4, BucketAlreadyOwnedByYou.prototype);
    return _this4;
  }
  _inherits(BucketAlreadyOwnedByYou, _BaseException4);
  return _createClass(BucketAlreadyOwnedByYou);
}(__BaseException)));
var BucketCannedACL = {
  authenticated_read: "authenticated-read",
  "private": "private",
  public_read: "public-read",
  public_read_write: "public-read-write"
};
var BucketLocationConstraint = {
  EU: "EU",
  af_south_1: "af-south-1",
  ap_east_1: "ap-east-1",
  ap_northeast_1: "ap-northeast-1",
  ap_northeast_2: "ap-northeast-2",
  ap_northeast_3: "ap-northeast-3",
  ap_south_1: "ap-south-1",
  ap_south_2: "ap-south-2",
  ap_southeast_1: "ap-southeast-1",
  ap_southeast_2: "ap-southeast-2",
  ap_southeast_3: "ap-southeast-3",
  ca_central_1: "ca-central-1",
  cn_north_1: "cn-north-1",
  cn_northwest_1: "cn-northwest-1",
  eu_central_1: "eu-central-1",
  eu_north_1: "eu-north-1",
  eu_south_1: "eu-south-1",
  eu_south_2: "eu-south-2",
  eu_west_1: "eu-west-1",
  eu_west_2: "eu-west-2",
  eu_west_3: "eu-west-3",
  me_south_1: "me-south-1",
  sa_east_1: "sa-east-1",
  us_east_2: "us-east-2",
  us_gov_east_1: "us-gov-east-1",
  us_gov_west_1: "us-gov-west-1",
  us_west_1: "us-west-1",
  us_west_2: "us-west-2"
};
var ObjectOwnership = {
  BucketOwnerEnforced: "BucketOwnerEnforced",
  BucketOwnerPreferred: "BucketOwnerPreferred",
  ObjectWriter: "ObjectWriter"
};
var models_0_AnalyticsFilter;
(function (AnalyticsFilter) {
  AnalyticsFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(models_0_AnalyticsFilter || (models_0_AnalyticsFilter = {}));
var AnalyticsS3ExportFileFormat = {
  CSV: "CSV"
};
var StorageClassAnalysisSchemaVersion = {
  V_1: "V_1"
};
var IntelligentTieringStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var IntelligentTieringAccessTier = {
  ARCHIVE_ACCESS: "ARCHIVE_ACCESS",
  DEEP_ARCHIVE_ACCESS: "DEEP_ARCHIVE_ACCESS"
};
var InventoryFormat = {
  CSV: "CSV",
  ORC: "ORC",
  Parquet: "Parquet"
};
var InventoryIncludedObjectVersions = {
  All: "All",
  Current: "Current"
};
var InventoryOptionalField = {
  BucketKeyStatus: "BucketKeyStatus",
  ChecksumAlgorithm: "ChecksumAlgorithm",
  ETag: "ETag",
  EncryptionStatus: "EncryptionStatus",
  IntelligentTieringAccessTier: "IntelligentTieringAccessTier",
  IsMultipartUploaded: "IsMultipartUploaded",
  LastModifiedDate: "LastModifiedDate",
  ObjectAccessControlList: "ObjectAccessControlList",
  ObjectLockLegalHoldStatus: "ObjectLockLegalHoldStatus",
  ObjectLockMode: "ObjectLockMode",
  ObjectLockRetainUntilDate: "ObjectLockRetainUntilDate",
  ObjectOwner: "ObjectOwner",
  ReplicationStatus: "ReplicationStatus",
  Size: "Size",
  StorageClass: "StorageClass"
};
var InventoryFrequency = {
  Daily: "Daily",
  Weekly: "Weekly"
};
var models_0_LifecycleRuleFilter;
(function (LifecycleRuleFilter) {
  LifecycleRuleFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.ObjectSizeGreaterThan !== undefined) return visitor.ObjectSizeGreaterThan(value.ObjectSizeGreaterThan);
    if (value.ObjectSizeLessThan !== undefined) return visitor.ObjectSizeLessThan(value.ObjectSizeLessThan);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(models_0_LifecycleRuleFilter || (models_0_LifecycleRuleFilter = {}));
var TransitionStorageClass = {
  DEEP_ARCHIVE: "DEEP_ARCHIVE",
  GLACIER: "GLACIER",
  GLACIER_IR: "GLACIER_IR",
  INTELLIGENT_TIERING: "INTELLIGENT_TIERING",
  ONEZONE_IA: "ONEZONE_IA",
  STANDARD_IA: "STANDARD_IA"
};
var ExpirationStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var BucketLogsPermission = {
  FULL_CONTROL: "FULL_CONTROL",
  READ: "READ",
  WRITE: "WRITE"
};
var models_0_MetricsFilter;
(function (MetricsFilter) {
  MetricsFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.AccessPointArn !== undefined) return visitor.AccessPointArn(value.AccessPointArn);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(models_0_MetricsFilter || (models_0_MetricsFilter = {}));
var Event = {
  s3_IntelligentTiering: "s3:IntelligentTiering",
  s3_LifecycleExpiration_: "s3:LifecycleExpiration:*",
  s3_LifecycleExpiration_Delete: "s3:LifecycleExpiration:Delete",
  s3_LifecycleExpiration_DeleteMarkerCreated: "s3:LifecycleExpiration:DeleteMarkerCreated",
  s3_LifecycleTransition: "s3:LifecycleTransition",
  s3_ObjectAcl_Put: "s3:ObjectAcl:Put",
  s3_ObjectCreated_: "s3:ObjectCreated:*",
  s3_ObjectCreated_CompleteMultipartUpload: "s3:ObjectCreated:CompleteMultipartUpload",
  s3_ObjectCreated_Copy: "s3:ObjectCreated:Copy",
  s3_ObjectCreated_Post: "s3:ObjectCreated:Post",
  s3_ObjectCreated_Put: "s3:ObjectCreated:Put",
  s3_ObjectRemoved_: "s3:ObjectRemoved:*",
  s3_ObjectRemoved_Delete: "s3:ObjectRemoved:Delete",
  s3_ObjectRemoved_DeleteMarkerCreated: "s3:ObjectRemoved:DeleteMarkerCreated",
  s3_ObjectRestore_: "s3:ObjectRestore:*",
  s3_ObjectRestore_Completed: "s3:ObjectRestore:Completed",
  s3_ObjectRestore_Delete: "s3:ObjectRestore:Delete",
  s3_ObjectRestore_Post: "s3:ObjectRestore:Post",
  s3_ObjectTagging_: "s3:ObjectTagging:*",
  s3_ObjectTagging_Delete: "s3:ObjectTagging:Delete",
  s3_ObjectTagging_Put: "s3:ObjectTagging:Put",
  s3_ReducedRedundancyLostObject: "s3:ReducedRedundancyLostObject",
  s3_Replication_: "s3:Replication:*",
  s3_Replication_OperationFailedReplication: "s3:Replication:OperationFailedReplication",
  s3_Replication_OperationMissedThreshold: "s3:Replication:OperationMissedThreshold",
  s3_Replication_OperationNotTracked: "s3:Replication:OperationNotTracked",
  s3_Replication_OperationReplicatedAfterThreshold: "s3:Replication:OperationReplicatedAfterThreshold"
};
var FilterRuleName = {
  prefix: "prefix",
  suffix: "suffix"
};
var DeleteMarkerReplicationStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var MetricsStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var ReplicationTimeStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var ExistingObjectReplicationStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var models_0_ReplicationRuleFilter;
(function (ReplicationRuleFilter) {
  ReplicationRuleFilter.visit = function (value, visitor) {
    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);
    if (value.Tag !== undefined) return visitor.Tag(value.Tag);
    if (value.And !== undefined) return visitor.And(value.And);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  };
})(models_0_ReplicationRuleFilter || (models_0_ReplicationRuleFilter = {}));
var ReplicaModificationsStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var SseKmsEncryptedObjectsStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var ReplicationRuleStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var Payer = {
  BucketOwner: "BucketOwner",
  Requester: "Requester"
};
var MFADeleteStatus = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var BucketVersioningStatus = {
  Enabled: "Enabled",
  Suspended: "Suspended"
};
var Protocol = {
  http: "http",
  https: "https"
};
var ReplicationStatus = {
  COMPLETE: "COMPLETE",
  FAILED: "FAILED",
  PENDING: "PENDING",
  REPLICA: "REPLICA"
};
var ChecksumMode = {
  ENABLED: "ENABLED"
};
var models_0_InvalidObjectState = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException5) {
  function InvalidObjectState(opts) {
    var _this5;
    _classCallCheck(this, InvalidObjectState);
    _this5 = _callSuper(this, InvalidObjectState, [_objectSpread({
      name: "InvalidObjectState",
      $fault: "client"
    }, opts)]);
    _this5.name = "InvalidObjectState";
    _this5.$fault = "client";
    Object.setPrototypeOf(_this5, InvalidObjectState.prototype);
    _this5.StorageClass = opts.StorageClass;
    _this5.AccessTier = opts.AccessTier;
    return _this5;
  }
  _inherits(InvalidObjectState, _BaseException5);
  return _createClass(InvalidObjectState);
}(__BaseException)));
var models_0_NoSuchKey = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException6) {
  function NoSuchKey(opts) {
    var _this6;
    _classCallCheck(this, NoSuchKey);
    _this6 = _callSuper(this, NoSuchKey, [_objectSpread({
      name: "NoSuchKey",
      $fault: "client"
    }, opts)]);
    _this6.name = "NoSuchKey";
    _this6.$fault = "client";
    Object.setPrototypeOf(_this6, NoSuchKey.prototype);
    return _this6;
  }
  _inherits(NoSuchKey, _BaseException6);
  return _createClass(NoSuchKey);
}(__BaseException)));
var ObjectAttributes = {
  CHECKSUM: "Checksum",
  ETAG: "ETag",
  OBJECT_PARTS: "ObjectParts",
  OBJECT_SIZE: "ObjectSize",
  STORAGE_CLASS: "StorageClass"
};
var ObjectLockEnabled = {
  Enabled: "Enabled"
};
var ObjectLockRetentionMode = {
  COMPLIANCE: "COMPLIANCE",
  GOVERNANCE: "GOVERNANCE"
};
var models_0_NotFound = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException7) {
  function NotFound(opts) {
    var _this7;
    _classCallCheck(this, NotFound);
    _this7 = _callSuper(this, NotFound, [_objectSpread({
      name: "NotFound",
      $fault: "client"
    }, opts)]);
    _this7.name = "NotFound";
    _this7.$fault = "client";
    Object.setPrototypeOf(_this7, NotFound.prototype);
    return _this7;
  }
  _inherits(NotFound, _BaseException7);
  return _createClass(NotFound);
}(__BaseException)));
var ArchiveStatus = {
  ARCHIVE_ACCESS: "ARCHIVE_ACCESS",
  DEEP_ARCHIVE_ACCESS: "DEEP_ARCHIVE_ACCESS"
};
var EncodingType = {
  url: "url"
};
var ObjectStorageClass = {
  DEEP_ARCHIVE: "DEEP_ARCHIVE",
  GLACIER: "GLACIER",
  GLACIER_IR: "GLACIER_IR",
  INTELLIGENT_TIERING: "INTELLIGENT_TIERING",
  ONEZONE_IA: "ONEZONE_IA",
  OUTPOSTS: "OUTPOSTS",
  REDUCED_REDUNDANCY: "REDUCED_REDUNDANCY",
  SNOW: "SNOW",
  STANDARD: "STANDARD",
  STANDARD_IA: "STANDARD_IA"
};
var OptionalObjectAttributes = {
  RESTORE_STATUS: "RestoreStatus"
};
var models_0_NoSuchBucket = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_BaseException8) {
  function NoSuchBucket(opts) {
    var _this8;
    _classCallCheck(this, NoSuchBucket);
    _this8 = _callSuper(this, NoSuchBucket, [_objectSpread({
      name: "NoSuchBucket",
      $fault: "client"
    }, opts)]);
    _this8.name = "NoSuchBucket";
    _this8.$fault = "client";
    Object.setPrototypeOf(_this8, NoSuchBucket.prototype);
    return _this8;
  }
  _inherits(NoSuchBucket, _BaseException8);
  return _createClass(NoSuchBucket);
}(__BaseException)));
var ObjectVersionStorageClass = {
  STANDARD: "STANDARD"
};
var MFADelete = {
  Disabled: "Disabled",
  Enabled: "Enabled"
};
var CompleteMultipartUploadOutputFilterSensitiveLog = function CompleteMultipartUploadOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  });
};
var CompleteMultipartUploadRequestFilterSensitiveLog = function CompleteMultipartUploadRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  });
};
var CopyObjectOutputFilterSensitiveLog = function CopyObjectOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread(_objectSpread({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: SENSITIVE_STRING
  });
};
var CopyObjectRequestFilterSensitiveLog = function CopyObjectRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  }), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: SENSITIVE_STRING
  }), obj.CopySourceSSECustomerKey && {
    CopySourceSSECustomerKey: SENSITIVE_STRING
  });
};
var CreateMultipartUploadOutputFilterSensitiveLog = function CreateMultipartUploadOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread(_objectSpread({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: SENSITIVE_STRING
  });
};
var CreateMultipartUploadRequestFilterSensitiveLog = function CreateMultipartUploadRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  }), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: SENSITIVE_STRING
  });
};
var ServerSideEncryptionByDefaultFilterSensitiveLog = function ServerSideEncryptionByDefaultFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.KMSMasterKeyID && {
    KMSMasterKeyID: SENSITIVE_STRING
  });
};
var ServerSideEncryptionRuleFilterSensitiveLog = function ServerSideEncryptionRuleFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.ApplyServerSideEncryptionByDefault && {
    ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefaultFilterSensitiveLog(obj.ApplyServerSideEncryptionByDefault)
  });
};
var ServerSideEncryptionConfigurationFilterSensitiveLog = function ServerSideEncryptionConfigurationFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Rules && {
    Rules: obj.Rules.map(function (item) {
      return ServerSideEncryptionRuleFilterSensitiveLog(item);
    })
  });
};
var GetBucketEncryptionOutputFilterSensitiveLog = function GetBucketEncryptionOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.ServerSideEncryptionConfiguration && {
    ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration)
  });
};
var SSEKMSFilterSensitiveLog = function SSEKMSFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.KeyId && {
    KeyId: SENSITIVE_STRING
  });
};
var InventoryEncryptionFilterSensitiveLog = function InventoryEncryptionFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSEKMS && {
    SSEKMS: SSEKMSFilterSensitiveLog(obj.SSEKMS)
  });
};
var InventoryS3BucketDestinationFilterSensitiveLog = function InventoryS3BucketDestinationFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Encryption && {
    Encryption: InventoryEncryptionFilterSensitiveLog(obj.Encryption)
  });
};
var InventoryDestinationFilterSensitiveLog = function InventoryDestinationFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.S3BucketDestination && {
    S3BucketDestination: InventoryS3BucketDestinationFilterSensitiveLog(obj.S3BucketDestination)
  });
};
var InventoryConfigurationFilterSensitiveLog = function InventoryConfigurationFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.Destination && {
    Destination: InventoryDestinationFilterSensitiveLog(obj.Destination)
  });
};
var GetBucketInventoryConfigurationOutputFilterSensitiveLog = function GetBucketInventoryConfigurationOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.InventoryConfiguration && {
    InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration)
  });
};
var GetObjectOutputFilterSensitiveLog = function GetObjectOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  });
};
var GetObjectRequestFilterSensitiveLog = function GetObjectRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  });
};
var GetObjectAttributesRequestFilterSensitiveLog = function GetObjectAttributesRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  });
};
var GetObjectTorrentOutputFilterSensitiveLog = function GetObjectTorrentOutputFilterSensitiveLog(obj) {
  return _objectSpread({}, obj);
};
var HeadObjectOutputFilterSensitiveLog = function HeadObjectOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: SENSITIVE_STRING
  });
};
var HeadObjectRequestFilterSensitiveLog = function HeadObjectRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  });
};
var ListBucketInventoryConfigurationsOutputFilterSensitiveLog = function ListBucketInventoryConfigurationsOutputFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.InventoryConfigurationList && {
    InventoryConfigurationList: obj.InventoryConfigurationList.map(function (item) {
      return InventoryConfigurationFilterSensitiveLog(item);
    })
  });
};
var ListPartsRequestFilterSensitiveLog = function ListPartsRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: SENSITIVE_STRING
  });
};
var PutBucketEncryptionRequestFilterSensitiveLog = function PutBucketEncryptionRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.ServerSideEncryptionConfiguration && {
    ServerSideEncryptionConfiguration: ServerSideEncryptionConfigurationFilterSensitiveLog(obj.ServerSideEncryptionConfiguration)
  });
};
var PutBucketInventoryConfigurationRequestFilterSensitiveLog = function PutBucketInventoryConfigurationRequestFilterSensitiveLog(obj) {
  return _objectSpread(_objectSpread({}, obj), obj.InventoryConfiguration && {
    InventoryConfiguration: InventoryConfigurationFilterSensitiveLog(obj.InventoryConfiguration)
  });
};
var PutObjectOutputFilterSensitiveLog = function PutObjectOutputFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2(_objectSpread2({}, obj), obj.SSEKMSKeyId && {
    SSEKMSKeyId: constants_SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: constants_SENSITIVE_STRING
  });
};
var PutObjectRequestFilterSensitiveLog = function PutObjectRequestFilterSensitiveLog(obj) {
  return _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, obj), obj.SSECustomerKey && {
    SSECustomerKey: constants_SENSITIVE_STRING
  }), obj.SSEKMSKeyId && {
    SSEKMSKeyId: constants_SENSITIVE_STRING
  }), obj.SSEKMSEncryptionContext && {
    SSEKMSEncryptionContext: constants_SENSITIVE_STRING
  });
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/models/S3ServiceException.js






var S3ServiceException = /*#__PURE__*/function (_ServiceException) {
  function S3ServiceException(options) {
    var _this;
    classCallCheck_classCallCheck(this, S3ServiceException);
    _this = callSuper_callSuper(this, S3ServiceException, [options]);
    Object.setPrototypeOf(_this, S3ServiceException.prototype);
    return _this;
  }
  inherits_inherits(S3ServiceException, _ServiceException);
  return createClass_createClass(S3ServiceException);
}(ServiceException);
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/protocols/Aws_restXml.js










var se_AbortMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, context) {
    var _yield$context$endpoi, hostname, _yield$context$endpoi2, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi = _context.sent;
          hostname = _yield$context$endpoi.hostname;
          _yield$context$endpoi2 = _yield$context$endpoi.protocol;
          protocol = _yield$context$endpoi2 === void 0 ? "https" : _yield$context$endpoi2;
          port = _yield$context$endpoi.port;
          basePath = _yield$context$endpoi.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "AbortMultipartUpload"],
            uploadId: [, __expectNonNull(input.UploadId, "UploadId")]
          });
          return _context.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function se_AbortMultipartUploadCommand(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}()));
var se_CompleteMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(input, context) {
    var _yield$context$endpoi3, hostname, _yield$context$endpoi4, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi3 = _context2.sent;
          hostname = _yield$context$endpoi3.hostname;
          _yield$context$endpoi4 = _yield$context$endpoi3.protocol;
          protocol = _yield$context$endpoi4 === void 0 ? "https" : _yield$context$endpoi4;
          port = _yield$context$endpoi3.port;
          basePath = _yield$context$endpoi3.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-checksum-crc32": input.ChecksumCRC32,
            "x-amz-checksum-crc32c": input.ChecksumCRC32C,
            "x-amz-checksum-sha1": input.ChecksumSHA1,
            "x-amz-checksum-sha256": input.ChecksumSHA256,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "CompleteMultipartUpload"],
            uploadId: [, __expectNonNull(input.UploadId, "UploadId")]
          });
          if (input.MultipartUpload !== undefined) {
            body = se_CompletedMultipartUpload(input.MultipartUpload, context);
          }
          if (input.MultipartUpload !== undefined) {
            contents = se_CompletedMultipartUpload(input.MultipartUpload, context);
            contents = contents.withName("CompleteMultipartUpload");
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context2.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return function se_CompleteMultipartUploadCommand(_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}()));
var se_CopyObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(input, context) {
    var _yield$context$endpoi5, hostname, _yield$context$endpoi6, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi5 = _context3.sent;
          hostname = _yield$context$endpoi5.hostname;
          _yield$context$endpoi6 = _yield$context$endpoi5.protocol;
          protocol = _yield$context$endpoi6 === void 0 ? "https" : _yield$context$endpoi6;
          port = _yield$context$endpoi5.port;
          basePath = _yield$context$endpoi5.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, _objectSpread({
            "x-amz-acl": input.ACL,
            "cache-control": input.CacheControl,
            "x-amz-checksum-algorithm": input.ChecksumAlgorithm,
            "content-disposition": input.ContentDisposition,
            "content-encoding": input.ContentEncoding,
            "content-language": input.ContentLanguage,
            "content-type": input.ContentType,
            "x-amz-copy-source": input.CopySource,
            "x-amz-copy-source-if-match": input.CopySourceIfMatch,
            "x-amz-copy-source-if-modified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.CopySourceIfModifiedSince);
            }, function () {
              return __dateToUtcString(input.CopySourceIfModifiedSince).toString();
            }],
            "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch,
            "x-amz-copy-source-if-unmodified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince);
            }, function () {
              return __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();
            }],
            expires: [function () {
              return Aws_restXml_isSerializableHeaderValue(input.Expires);
            }, function () {
              return __dateToUtcString(input.Expires).toString();
            }],
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-metadata-directive": input.MetadataDirective,
            "x-amz-tagging-directive": input.TaggingDirective,
            "x-amz-server-side-encryption": input.ServerSideEncryption,
            "x-amz-storage-class": input.StorageClass,
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
            "x-amz-server-side-encryption-bucket-key-enabled": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BucketKeyEnabled);
            }, function () {
              return input.BucketKeyEnabled.toString();
            }],
            "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm,
            "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey,
            "x-amz-copy-source-server-side-encryption-customer-key-md5": input.CopySourceSSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-tagging": input.Tagging,
            "x-amz-object-lock-mode": input.ObjectLockMode,
            "x-amz-object-lock-retain-until-date": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectLockRetainUntilDate);
            }, function () {
              return (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString();
            }],
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner
          }, input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            acc["x-amz-meta-".concat(suffix.toLowerCase())] = input.Metadata[suffix];
            return acc;
          }, {})));
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "CopyObject"]
          });
          return _context3.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function se_CopyObjectCommand(_x5, _x6) {
    return _ref3.apply(this, arguments);
  };
}()));
var se_CreateBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(input, context) {
    var _yield$context$endpoi7, hostname, _yield$context$endpoi8, protocol, port, basePath, headers, resolvedPath, body, contents;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi7 = _context4.sent;
          hostname = _yield$context$endpoi7.hostname;
          _yield$context$endpoi8 = _yield$context$endpoi7.protocol;
          protocol = _yield$context$endpoi8 === void 0 ? "https" : _yield$context$endpoi8;
          port = _yield$context$endpoi7.port;
          basePath = _yield$context$endpoi7.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-acl": input.ACL,
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write": input.GrantWrite,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-bucket-object-lock-enabled": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectLockEnabledForBucket);
            }, function () {
              return input.ObjectLockEnabledForBucket.toString();
            }],
            "x-amz-object-ownership": input.ObjectOwnership
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          if (input.CreateBucketConfiguration !== undefined) {
            body = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);
          }
          if (input.CreateBucketConfiguration !== undefined) {
            contents = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context4.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 14:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return function se_CreateBucketCommand(_x7, _x8) {
    return _ref4.apply(this, arguments);
  };
}()));
var se_CreateMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(input, context) {
    var _yield$context$endpoi9, hostname, _yield$context$endpoi10, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi9 = _context5.sent;
          hostname = _yield$context$endpoi9.hostname;
          _yield$context$endpoi10 = _yield$context$endpoi9.protocol;
          protocol = _yield$context$endpoi10 === void 0 ? "https" : _yield$context$endpoi10;
          port = _yield$context$endpoi9.port;
          basePath = _yield$context$endpoi9.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, _objectSpread({
            "x-amz-acl": input.ACL,
            "cache-control": input.CacheControl,
            "content-disposition": input.ContentDisposition,
            "content-encoding": input.ContentEncoding,
            "content-language": input.ContentLanguage,
            "content-type": input.ContentType,
            expires: [function () {
              return Aws_restXml_isSerializableHeaderValue(input.Expires);
            }, function () {
              return __dateToUtcString(input.Expires).toString();
            }],
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-server-side-encryption": input.ServerSideEncryption,
            "x-amz-storage-class": input.StorageClass,
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
            "x-amz-server-side-encryption-bucket-key-enabled": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BucketKeyEnabled);
            }, function () {
              return input.BucketKeyEnabled.toString();
            }],
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-tagging": input.Tagging,
            "x-amz-object-lock-mode": input.ObjectLockMode,
            "x-amz-object-lock-retain-until-date": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectLockRetainUntilDate);
            }, function () {
              return (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString();
            }],
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-checksum-algorithm": input.ChecksumAlgorithm
          }, input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            acc["x-amz-meta-".concat(suffix.toLowerCase())] = input.Metadata[suffix];
            return acc;
          }, {})));
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            uploads: [, ""],
            "x-id": [, "CreateMultipartUpload"]
          });
          return _context5.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return function se_CreateMultipartUploadCommand(_x9, _x10) {
    return _ref5.apply(this, arguments);
  };
}()));
var se_DeleteBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(input, context) {
    var _yield$context$endpoi11, hostname, _yield$context$endpoi12, protocol, port, basePath, headers, resolvedPath, body;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          _context6.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi11 = _context6.sent;
          hostname = _yield$context$endpoi11.hostname;
          _yield$context$endpoi12 = _yield$context$endpoi11.protocol;
          protocol = _yield$context$endpoi12 === void 0 ? "https" : _yield$context$endpoi12;
          port = _yield$context$endpoi11.port;
          basePath = _yield$context$endpoi11.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          return _context6.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return function se_DeleteBucketCommand(_x11, _x12) {
    return _ref6.apply(this, arguments);
  };
}()));
var se_DeleteBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(input, context) {
    var _yield$context$endpoi13, hostname, _yield$context$endpoi14, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          _context7.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi13 = _context7.sent;
          hostname = _yield$context$endpoi13.hostname;
          _yield$context$endpoi14 = _yield$context$endpoi13.protocol;
          protocol = _yield$context$endpoi14 === void 0 ? "https" : _yield$context$endpoi14;
          port = _yield$context$endpoi13.port;
          basePath = _yield$context$endpoi13.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            analytics: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context7.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return function se_DeleteBucketAnalyticsConfigurationCommand(_x13, _x14) {
    return _ref7.apply(this, arguments);
  };
}()));
var se_DeleteBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(input, context) {
    var _yield$context$endpoi15, hostname, _yield$context$endpoi16, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          _context8.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi15 = _context8.sent;
          hostname = _yield$context$endpoi15.hostname;
          _yield$context$endpoi16 = _yield$context$endpoi15.protocol;
          protocol = _yield$context$endpoi16 === void 0 ? "https" : _yield$context$endpoi16;
          port = _yield$context$endpoi15.port;
          basePath = _yield$context$endpoi15.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            cors: [, ""]
          });
          return _context8.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return function se_DeleteBucketCorsCommand(_x15, _x16) {
    return _ref8.apply(this, arguments);
  };
}()));
var se_DeleteBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(input, context) {
    var _yield$context$endpoi17, hostname, _yield$context$endpoi18, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          _context9.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi17 = _context9.sent;
          hostname = _yield$context$endpoi17.hostname;
          _yield$context$endpoi18 = _yield$context$endpoi17.protocol;
          protocol = _yield$context$endpoi18 === void 0 ? "https" : _yield$context$endpoi18;
          port = _yield$context$endpoi17.port;
          basePath = _yield$context$endpoi17.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            encryption: [, ""]
          });
          return _context9.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return function se_DeleteBucketEncryptionCommand(_x17, _x18) {
    return _ref9.apply(this, arguments);
  };
}()));
var se_DeleteBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(input, context) {
    var _yield$context$endpoi19, hostname, _yield$context$endpoi20, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          _context10.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi19 = _context10.sent;
          hostname = _yield$context$endpoi19.hostname;
          _yield$context$endpoi20 = _yield$context$endpoi19.protocol;
          protocol = _yield$context$endpoi20 === void 0 ? "https" : _yield$context$endpoi20;
          port = _yield$context$endpoi19.port;
          basePath = _yield$context$endpoi19.path;
          headers = {};
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "intelligent-tiering": [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context10.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return function se_DeleteBucketIntelligentTieringConfigurationCommand(_x19, _x20) {
    return _ref10.apply(this, arguments);
  };
}()));
var se_DeleteBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(input, context) {
    var _yield$context$endpoi21, hostname, _yield$context$endpoi22, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          _context11.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi21 = _context11.sent;
          hostname = _yield$context$endpoi21.hostname;
          _yield$context$endpoi22 = _yield$context$endpoi21.protocol;
          protocol = _yield$context$endpoi22 === void 0 ? "https" : _yield$context$endpoi22;
          port = _yield$context$endpoi21.port;
          basePath = _yield$context$endpoi21.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            inventory: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context11.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return function se_DeleteBucketInventoryConfigurationCommand(_x21, _x22) {
    return _ref11.apply(this, arguments);
  };
}()));
var se_DeleteBucketLifecycleCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(input, context) {
    var _yield$context$endpoi23, hostname, _yield$context$endpoi24, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          _context12.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi23 = _context12.sent;
          hostname = _yield$context$endpoi23.hostname;
          _yield$context$endpoi24 = _yield$context$endpoi23.protocol;
          protocol = _yield$context$endpoi24 === void 0 ? "https" : _yield$context$endpoi24;
          port = _yield$context$endpoi23.port;
          basePath = _yield$context$endpoi23.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            lifecycle: [, ""]
          });
          return _context12.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return function se_DeleteBucketLifecycleCommand(_x23, _x24) {
    return _ref12.apply(this, arguments);
  };
}()));
var se_DeleteBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(input, context) {
    var _yield$context$endpoi25, hostname, _yield$context$endpoi26, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          _context13.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi25 = _context13.sent;
          hostname = _yield$context$endpoi25.hostname;
          _yield$context$endpoi26 = _yield$context$endpoi25.protocol;
          protocol = _yield$context$endpoi26 === void 0 ? "https" : _yield$context$endpoi26;
          port = _yield$context$endpoi25.port;
          basePath = _yield$context$endpoi25.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            metrics: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context13.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return function se_DeleteBucketMetricsConfigurationCommand(_x25, _x26) {
    return _ref13.apply(this, arguments);
  };
}()));
var se_DeleteBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(input, context) {
    var _yield$context$endpoi27, hostname, _yield$context$endpoi28, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          _context14.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi27 = _context14.sent;
          hostname = _yield$context$endpoi27.hostname;
          _yield$context$endpoi28 = _yield$context$endpoi27.protocol;
          protocol = _yield$context$endpoi28 === void 0 ? "https" : _yield$context$endpoi28;
          port = _yield$context$endpoi27.port;
          basePath = _yield$context$endpoi27.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            ownershipControls: [, ""]
          });
          return _context14.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return function se_DeleteBucketOwnershipControlsCommand(_x27, _x28) {
    return _ref14.apply(this, arguments);
  };
}()));
var se_DeleteBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(input, context) {
    var _yield$context$endpoi29, hostname, _yield$context$endpoi30, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          _context15.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi29 = _context15.sent;
          hostname = _yield$context$endpoi29.hostname;
          _yield$context$endpoi30 = _yield$context$endpoi29.protocol;
          protocol = _yield$context$endpoi30 === void 0 ? "https" : _yield$context$endpoi30;
          port = _yield$context$endpoi29.port;
          basePath = _yield$context$endpoi29.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            policy: [, ""]
          });
          return _context15.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  }));
  return function se_DeleteBucketPolicyCommand(_x29, _x30) {
    return _ref15.apply(this, arguments);
  };
}()));
var se_DeleteBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(input, context) {
    var _yield$context$endpoi31, hostname, _yield$context$endpoi32, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          _context16.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi31 = _context16.sent;
          hostname = _yield$context$endpoi31.hostname;
          _yield$context$endpoi32 = _yield$context$endpoi31.protocol;
          protocol = _yield$context$endpoi32 === void 0 ? "https" : _yield$context$endpoi32;
          port = _yield$context$endpoi31.port;
          basePath = _yield$context$endpoi31.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            replication: [, ""]
          });
          return _context16.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return function se_DeleteBucketReplicationCommand(_x31, _x32) {
    return _ref16.apply(this, arguments);
  };
}()));
var se_DeleteBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(input, context) {
    var _yield$context$endpoi33, hostname, _yield$context$endpoi34, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee17$(_context17) {
      while (1) switch (_context17.prev = _context17.next) {
        case 0:
          _context17.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi33 = _context17.sent;
          hostname = _yield$context$endpoi33.hostname;
          _yield$context$endpoi34 = _yield$context$endpoi33.protocol;
          protocol = _yield$context$endpoi34 === void 0 ? "https" : _yield$context$endpoi34;
          port = _yield$context$endpoi33.port;
          basePath = _yield$context$endpoi33.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            tagging: [, ""]
          });
          return _context17.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context17.stop();
      }
    }, _callee17);
  }));
  return function se_DeleteBucketTaggingCommand(_x33, _x34) {
    return _ref17.apply(this, arguments);
  };
}()));
var se_DeleteBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(input, context) {
    var _yield$context$endpoi35, hostname, _yield$context$endpoi36, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee18$(_context18) {
      while (1) switch (_context18.prev = _context18.next) {
        case 0:
          _context18.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi35 = _context18.sent;
          hostname = _yield$context$endpoi35.hostname;
          _yield$context$endpoi36 = _yield$context$endpoi35.protocol;
          protocol = _yield$context$endpoi36 === void 0 ? "https" : _yield$context$endpoi36;
          port = _yield$context$endpoi35.port;
          basePath = _yield$context$endpoi35.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            website: [, ""]
          });
          return _context18.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context18.stop();
      }
    }, _callee18);
  }));
  return function se_DeleteBucketWebsiteCommand(_x35, _x36) {
    return _ref18.apply(this, arguments);
  };
}()));
var se_DeleteObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(input, context) {
    var _yield$context$endpoi37, hostname, _yield$context$endpoi38, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee19$(_context19) {
      while (1) switch (_context19.prev = _context19.next) {
        case 0:
          _context19.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi37 = _context19.sent;
          hostname = _yield$context$endpoi37.hostname;
          _yield$context$endpoi38 = _yield$context$endpoi37.protocol;
          protocol = _yield$context$endpoi38 === void 0 ? "https" : _yield$context$endpoi38;
          port = _yield$context$endpoi37.port;
          basePath = _yield$context$endpoi37.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-mfa": input.MFA,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-bypass-governance-retention": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BypassGovernanceRetention);
            }, function () {
              return input.BypassGovernanceRetention.toString();
            }],
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "DeleteObject"],
            versionId: [, input.VersionId]
          });
          return _context19.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context19.stop();
      }
    }, _callee19);
  }));
  return function se_DeleteObjectCommand(_x37, _x38) {
    return _ref19.apply(this, arguments);
  };
}()));
var se_DeleteObjectsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(input, context) {
    var _yield$context$endpoi39, hostname, _yield$context$endpoi40, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee20$(_context20) {
      while (1) switch (_context20.prev = _context20.next) {
        case 0:
          _context20.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi39 = _context20.sent;
          hostname = _yield$context$endpoi39.hostname;
          _yield$context$endpoi40 = _yield$context$endpoi39.protocol;
          protocol = _yield$context$endpoi40 === void 0 ? "https" : _yield$context$endpoi40;
          port = _yield$context$endpoi39.port;
          basePath = _yield$context$endpoi39.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-mfa": input.MFA,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-bypass-governance-retention": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BypassGovernanceRetention);
            }, function () {
              return input.BypassGovernanceRetention.toString();
            }],
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "delete": [, ""],
            "x-id": [, "DeleteObjects"]
          });
          if (input.Delete !== undefined) {
            body = se_Delete(input.Delete, context);
          }
          if (input.Delete !== undefined) {
            contents = se_Delete(input.Delete, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context20.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context20.stop();
      }
    }, _callee20);
  }));
  return function se_DeleteObjectsCommand(_x39, _x40) {
    return _ref20.apply(this, arguments);
  };
}()));
var se_DeleteObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(input, context) {
    var _yield$context$endpoi41, hostname, _yield$context$endpoi42, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee21$(_context21) {
      while (1) switch (_context21.prev = _context21.next) {
        case 0:
          _context21.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi41 = _context21.sent;
          hostname = _yield$context$endpoi41.hostname;
          _yield$context$endpoi42 = _yield$context$endpoi41.protocol;
          protocol = _yield$context$endpoi42 === void 0 ? "https" : _yield$context$endpoi42;
          port = _yield$context$endpoi41.port;
          basePath = _yield$context$endpoi41.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            tagging: [, ""],
            versionId: [, input.VersionId]
          });
          return _context21.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context21.stop();
      }
    }, _callee21);
  }));
  return function se_DeleteObjectTaggingCommand(_x41, _x42) {
    return _ref21.apply(this, arguments);
  };
}()));
var se_DeletePublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(input, context) {
    var _yield$context$endpoi43, hostname, _yield$context$endpoi44, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee22$(_context22) {
      while (1) switch (_context22.prev = _context22.next) {
        case 0:
          _context22.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi43 = _context22.sent;
          hostname = _yield$context$endpoi43.hostname;
          _yield$context$endpoi44 = _yield$context$endpoi43.protocol;
          protocol = _yield$context$endpoi44 === void 0 ? "https" : _yield$context$endpoi44;
          port = _yield$context$endpoi43.port;
          basePath = _yield$context$endpoi43.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            publicAccessBlock: [, ""]
          });
          return _context22.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "DELETE",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context22.stop();
      }
    }, _callee22);
  }));
  return function se_DeletePublicAccessBlockCommand(_x43, _x44) {
    return _ref22.apply(this, arguments);
  };
}()));
var se_GetBucketAccelerateConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(input, context) {
    var _yield$context$endpoi45, hostname, _yield$context$endpoi46, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee23$(_context23) {
      while (1) switch (_context23.prev = _context23.next) {
        case 0:
          _context23.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi45 = _context23.sent;
          hostname = _yield$context$endpoi45.hostname;
          _yield$context$endpoi46 = _yield$context$endpoi45.protocol;
          protocol = _yield$context$endpoi46 === void 0 ? "https" : _yield$context$endpoi46;
          port = _yield$context$endpoi45.port;
          basePath = _yield$context$endpoi45.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-request-payer": input.RequestPayer
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            accelerate: [, ""]
          });
          return _context23.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context23.stop();
      }
    }, _callee23);
  }));
  return function se_GetBucketAccelerateConfigurationCommand(_x45, _x46) {
    return _ref23.apply(this, arguments);
  };
}()));
var se_GetBucketAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(input, context) {
    var _yield$context$endpoi47, hostname, _yield$context$endpoi48, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee24$(_context24) {
      while (1) switch (_context24.prev = _context24.next) {
        case 0:
          _context24.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi47 = _context24.sent;
          hostname = _yield$context$endpoi47.hostname;
          _yield$context$endpoi48 = _yield$context$endpoi47.protocol;
          protocol = _yield$context$endpoi48 === void 0 ? "https" : _yield$context$endpoi48;
          port = _yield$context$endpoi47.port;
          basePath = _yield$context$endpoi47.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            acl: [, ""]
          });
          return _context24.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context24.stop();
      }
    }, _callee24);
  }));
  return function se_GetBucketAclCommand(_x47, _x48) {
    return _ref24.apply(this, arguments);
  };
}()));
var se_GetBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(input, context) {
    var _yield$context$endpoi49, hostname, _yield$context$endpoi50, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee25$(_context25) {
      while (1) switch (_context25.prev = _context25.next) {
        case 0:
          _context25.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi49 = _context25.sent;
          hostname = _yield$context$endpoi49.hostname;
          _yield$context$endpoi50 = _yield$context$endpoi49.protocol;
          protocol = _yield$context$endpoi50 === void 0 ? "https" : _yield$context$endpoi50;
          port = _yield$context$endpoi49.port;
          basePath = _yield$context$endpoi49.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            analytics: [, ""],
            "x-id": [, "GetBucketAnalyticsConfiguration"],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context25.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context25.stop();
      }
    }, _callee25);
  }));
  return function se_GetBucketAnalyticsConfigurationCommand(_x49, _x50) {
    return _ref25.apply(this, arguments);
  };
}()));
var se_GetBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(input, context) {
    var _yield$context$endpoi51, hostname, _yield$context$endpoi52, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee26$(_context26) {
      while (1) switch (_context26.prev = _context26.next) {
        case 0:
          _context26.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi51 = _context26.sent;
          hostname = _yield$context$endpoi51.hostname;
          _yield$context$endpoi52 = _yield$context$endpoi51.protocol;
          protocol = _yield$context$endpoi52 === void 0 ? "https" : _yield$context$endpoi52;
          port = _yield$context$endpoi51.port;
          basePath = _yield$context$endpoi51.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            cors: [, ""]
          });
          return _context26.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context26.stop();
      }
    }, _callee26);
  }));
  return function se_GetBucketCorsCommand(_x51, _x52) {
    return _ref26.apply(this, arguments);
  };
}()));
var se_GetBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(input, context) {
    var _yield$context$endpoi53, hostname, _yield$context$endpoi54, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee27$(_context27) {
      while (1) switch (_context27.prev = _context27.next) {
        case 0:
          _context27.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi53 = _context27.sent;
          hostname = _yield$context$endpoi53.hostname;
          _yield$context$endpoi54 = _yield$context$endpoi53.protocol;
          protocol = _yield$context$endpoi54 === void 0 ? "https" : _yield$context$endpoi54;
          port = _yield$context$endpoi53.port;
          basePath = _yield$context$endpoi53.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            encryption: [, ""]
          });
          return _context27.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context27.stop();
      }
    }, _callee27);
  }));
  return function se_GetBucketEncryptionCommand(_x53, _x54) {
    return _ref27.apply(this, arguments);
  };
}()));
var se_GetBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(input, context) {
    var _yield$context$endpoi55, hostname, _yield$context$endpoi56, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee28$(_context28) {
      while (1) switch (_context28.prev = _context28.next) {
        case 0:
          _context28.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi55 = _context28.sent;
          hostname = _yield$context$endpoi55.hostname;
          _yield$context$endpoi56 = _yield$context$endpoi55.protocol;
          protocol = _yield$context$endpoi56 === void 0 ? "https" : _yield$context$endpoi56;
          port = _yield$context$endpoi55.port;
          basePath = _yield$context$endpoi55.path;
          headers = {};
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "intelligent-tiering": [, ""],
            "x-id": [, "GetBucketIntelligentTieringConfiguration"],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context28.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context28.stop();
      }
    }, _callee28);
  }));
  return function se_GetBucketIntelligentTieringConfigurationCommand(_x55, _x56) {
    return _ref28.apply(this, arguments);
  };
}()));
var se_GetBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(input, context) {
    var _yield$context$endpoi57, hostname, _yield$context$endpoi58, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee29$(_context29) {
      while (1) switch (_context29.prev = _context29.next) {
        case 0:
          _context29.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi57 = _context29.sent;
          hostname = _yield$context$endpoi57.hostname;
          _yield$context$endpoi58 = _yield$context$endpoi57.protocol;
          protocol = _yield$context$endpoi58 === void 0 ? "https" : _yield$context$endpoi58;
          port = _yield$context$endpoi57.port;
          basePath = _yield$context$endpoi57.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            inventory: [, ""],
            "x-id": [, "GetBucketInventoryConfiguration"],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context29.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context29.stop();
      }
    }, _callee29);
  }));
  return function se_GetBucketInventoryConfigurationCommand(_x57, _x58) {
    return _ref29.apply(this, arguments);
  };
}()));
var se_GetBucketLifecycleConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(input, context) {
    var _yield$context$endpoi59, hostname, _yield$context$endpoi60, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee30$(_context30) {
      while (1) switch (_context30.prev = _context30.next) {
        case 0:
          _context30.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi59 = _context30.sent;
          hostname = _yield$context$endpoi59.hostname;
          _yield$context$endpoi60 = _yield$context$endpoi59.protocol;
          protocol = _yield$context$endpoi60 === void 0 ? "https" : _yield$context$endpoi60;
          port = _yield$context$endpoi59.port;
          basePath = _yield$context$endpoi59.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            lifecycle: [, ""]
          });
          return _context30.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context30.stop();
      }
    }, _callee30);
  }));
  return function se_GetBucketLifecycleConfigurationCommand(_x59, _x60) {
    return _ref30.apply(this, arguments);
  };
}()));
var se_GetBucketLocationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(input, context) {
    var _yield$context$endpoi61, hostname, _yield$context$endpoi62, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee31$(_context31) {
      while (1) switch (_context31.prev = _context31.next) {
        case 0:
          _context31.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi61 = _context31.sent;
          hostname = _yield$context$endpoi61.hostname;
          _yield$context$endpoi62 = _yield$context$endpoi61.protocol;
          protocol = _yield$context$endpoi62 === void 0 ? "https" : _yield$context$endpoi62;
          port = _yield$context$endpoi61.port;
          basePath = _yield$context$endpoi61.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            location: [, ""]
          });
          return _context31.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context31.stop();
      }
    }, _callee31);
  }));
  return function se_GetBucketLocationCommand(_x61, _x62) {
    return _ref31.apply(this, arguments);
  };
}()));
var se_GetBucketLoggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(input, context) {
    var _yield$context$endpoi63, hostname, _yield$context$endpoi64, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee32$(_context32) {
      while (1) switch (_context32.prev = _context32.next) {
        case 0:
          _context32.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi63 = _context32.sent;
          hostname = _yield$context$endpoi63.hostname;
          _yield$context$endpoi64 = _yield$context$endpoi63.protocol;
          protocol = _yield$context$endpoi64 === void 0 ? "https" : _yield$context$endpoi64;
          port = _yield$context$endpoi63.port;
          basePath = _yield$context$endpoi63.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            logging: [, ""]
          });
          return _context32.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context32.stop();
      }
    }, _callee32);
  }));
  return function se_GetBucketLoggingCommand(_x63, _x64) {
    return _ref32.apply(this, arguments);
  };
}()));
var se_GetBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(input, context) {
    var _yield$context$endpoi65, hostname, _yield$context$endpoi66, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee33$(_context33) {
      while (1) switch (_context33.prev = _context33.next) {
        case 0:
          _context33.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi65 = _context33.sent;
          hostname = _yield$context$endpoi65.hostname;
          _yield$context$endpoi66 = _yield$context$endpoi65.protocol;
          protocol = _yield$context$endpoi66 === void 0 ? "https" : _yield$context$endpoi66;
          port = _yield$context$endpoi65.port;
          basePath = _yield$context$endpoi65.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            metrics: [, ""],
            "x-id": [, "GetBucketMetricsConfiguration"],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          return _context33.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context33.stop();
      }
    }, _callee33);
  }));
  return function se_GetBucketMetricsConfigurationCommand(_x65, _x66) {
    return _ref33.apply(this, arguments);
  };
}()));
var se_GetBucketNotificationConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(input, context) {
    var _yield$context$endpoi67, hostname, _yield$context$endpoi68, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee34$(_context34) {
      while (1) switch (_context34.prev = _context34.next) {
        case 0:
          _context34.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi67 = _context34.sent;
          hostname = _yield$context$endpoi67.hostname;
          _yield$context$endpoi68 = _yield$context$endpoi67.protocol;
          protocol = _yield$context$endpoi68 === void 0 ? "https" : _yield$context$endpoi68;
          port = _yield$context$endpoi67.port;
          basePath = _yield$context$endpoi67.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            notification: [, ""]
          });
          return _context34.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context34.stop();
      }
    }, _callee34);
  }));
  return function se_GetBucketNotificationConfigurationCommand(_x67, _x68) {
    return _ref34.apply(this, arguments);
  };
}()));
var se_GetBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(input, context) {
    var _yield$context$endpoi69, hostname, _yield$context$endpoi70, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee35$(_context35) {
      while (1) switch (_context35.prev = _context35.next) {
        case 0:
          _context35.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi69 = _context35.sent;
          hostname = _yield$context$endpoi69.hostname;
          _yield$context$endpoi70 = _yield$context$endpoi69.protocol;
          protocol = _yield$context$endpoi70 === void 0 ? "https" : _yield$context$endpoi70;
          port = _yield$context$endpoi69.port;
          basePath = _yield$context$endpoi69.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            ownershipControls: [, ""]
          });
          return _context35.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context35.stop();
      }
    }, _callee35);
  }));
  return function se_GetBucketOwnershipControlsCommand(_x69, _x70) {
    return _ref35.apply(this, arguments);
  };
}()));
var se_GetBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(input, context) {
    var _yield$context$endpoi71, hostname, _yield$context$endpoi72, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee36$(_context36) {
      while (1) switch (_context36.prev = _context36.next) {
        case 0:
          _context36.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi71 = _context36.sent;
          hostname = _yield$context$endpoi71.hostname;
          _yield$context$endpoi72 = _yield$context$endpoi71.protocol;
          protocol = _yield$context$endpoi72 === void 0 ? "https" : _yield$context$endpoi72;
          port = _yield$context$endpoi71.port;
          basePath = _yield$context$endpoi71.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            policy: [, ""]
          });
          return _context36.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context36.stop();
      }
    }, _callee36);
  }));
  return function se_GetBucketPolicyCommand(_x71, _x72) {
    return _ref36.apply(this, arguments);
  };
}()));
var se_GetBucketPolicyStatusCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(input, context) {
    var _yield$context$endpoi73, hostname, _yield$context$endpoi74, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee37$(_context37) {
      while (1) switch (_context37.prev = _context37.next) {
        case 0:
          _context37.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi73 = _context37.sent;
          hostname = _yield$context$endpoi73.hostname;
          _yield$context$endpoi74 = _yield$context$endpoi73.protocol;
          protocol = _yield$context$endpoi74 === void 0 ? "https" : _yield$context$endpoi74;
          port = _yield$context$endpoi73.port;
          basePath = _yield$context$endpoi73.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            policyStatus: [, ""]
          });
          return _context37.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context37.stop();
      }
    }, _callee37);
  }));
  return function se_GetBucketPolicyStatusCommand(_x73, _x74) {
    return _ref37.apply(this, arguments);
  };
}()));
var se_GetBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(input, context) {
    var _yield$context$endpoi75, hostname, _yield$context$endpoi76, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee38$(_context38) {
      while (1) switch (_context38.prev = _context38.next) {
        case 0:
          _context38.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi75 = _context38.sent;
          hostname = _yield$context$endpoi75.hostname;
          _yield$context$endpoi76 = _yield$context$endpoi75.protocol;
          protocol = _yield$context$endpoi76 === void 0 ? "https" : _yield$context$endpoi76;
          port = _yield$context$endpoi75.port;
          basePath = _yield$context$endpoi75.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            replication: [, ""]
          });
          return _context38.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context38.stop();
      }
    }, _callee38);
  }));
  return function se_GetBucketReplicationCommand(_x75, _x76) {
    return _ref38.apply(this, arguments);
  };
}()));
var se_GetBucketRequestPaymentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(input, context) {
    var _yield$context$endpoi77, hostname, _yield$context$endpoi78, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee39$(_context39) {
      while (1) switch (_context39.prev = _context39.next) {
        case 0:
          _context39.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi77 = _context39.sent;
          hostname = _yield$context$endpoi77.hostname;
          _yield$context$endpoi78 = _yield$context$endpoi77.protocol;
          protocol = _yield$context$endpoi78 === void 0 ? "https" : _yield$context$endpoi78;
          port = _yield$context$endpoi77.port;
          basePath = _yield$context$endpoi77.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            requestPayment: [, ""]
          });
          return _context39.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context39.stop();
      }
    }, _callee39);
  }));
  return function se_GetBucketRequestPaymentCommand(_x77, _x78) {
    return _ref39.apply(this, arguments);
  };
}()));
var se_GetBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(input, context) {
    var _yield$context$endpoi79, hostname, _yield$context$endpoi80, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee40$(_context40) {
      while (1) switch (_context40.prev = _context40.next) {
        case 0:
          _context40.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi79 = _context40.sent;
          hostname = _yield$context$endpoi79.hostname;
          _yield$context$endpoi80 = _yield$context$endpoi79.protocol;
          protocol = _yield$context$endpoi80 === void 0 ? "https" : _yield$context$endpoi80;
          port = _yield$context$endpoi79.port;
          basePath = _yield$context$endpoi79.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            tagging: [, ""]
          });
          return _context40.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context40.stop();
      }
    }, _callee40);
  }));
  return function se_GetBucketTaggingCommand(_x79, _x80) {
    return _ref40.apply(this, arguments);
  };
}()));
var se_GetBucketVersioningCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(input, context) {
    var _yield$context$endpoi81, hostname, _yield$context$endpoi82, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee41$(_context41) {
      while (1) switch (_context41.prev = _context41.next) {
        case 0:
          _context41.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi81 = _context41.sent;
          hostname = _yield$context$endpoi81.hostname;
          _yield$context$endpoi82 = _yield$context$endpoi81.protocol;
          protocol = _yield$context$endpoi82 === void 0 ? "https" : _yield$context$endpoi82;
          port = _yield$context$endpoi81.port;
          basePath = _yield$context$endpoi81.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            versioning: [, ""]
          });
          return _context41.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context41.stop();
      }
    }, _callee41);
  }));
  return function se_GetBucketVersioningCommand(_x81, _x82) {
    return _ref41.apply(this, arguments);
  };
}()));
var se_GetBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(input, context) {
    var _yield$context$endpoi83, hostname, _yield$context$endpoi84, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee42$(_context42) {
      while (1) switch (_context42.prev = _context42.next) {
        case 0:
          _context42.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi83 = _context42.sent;
          hostname = _yield$context$endpoi83.hostname;
          _yield$context$endpoi84 = _yield$context$endpoi83.protocol;
          protocol = _yield$context$endpoi84 === void 0 ? "https" : _yield$context$endpoi84;
          port = _yield$context$endpoi83.port;
          basePath = _yield$context$endpoi83.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            website: [, ""]
          });
          return _context42.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context42.stop();
      }
    }, _callee42);
  }));
  return function se_GetBucketWebsiteCommand(_x83, _x84) {
    return _ref42.apply(this, arguments);
  };
}()));
var se_GetObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(input, context) {
    var _yield$context$endpoi85, hostname, _yield$context$endpoi86, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee43$(_context43) {
      while (1) switch (_context43.prev = _context43.next) {
        case 0:
          _context43.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi85 = _context43.sent;
          hostname = _yield$context$endpoi85.hostname;
          _yield$context$endpoi86 = _yield$context$endpoi85.protocol;
          protocol = _yield$context$endpoi86 === void 0 ? "https" : _yield$context$endpoi86;
          port = _yield$context$endpoi85.port;
          basePath = _yield$context$endpoi85.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "if-match": input.IfMatch,
            "if-modified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.IfModifiedSince);
            }, function () {
              return __dateToUtcString(input.IfModifiedSince).toString();
            }],
            "if-none-match": input.IfNoneMatch,
            "if-unmodified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.IfUnmodifiedSince);
            }, function () {
              return __dateToUtcString(input.IfUnmodifiedSince).toString();
            }],
            range: input.Range,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-checksum-mode": input.ChecksumMode
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "GetObject"],
            "response-cache-control": [, input.ResponseCacheControl],
            "response-content-disposition": [, input.ResponseContentDisposition],
            "response-content-encoding": [, input.ResponseContentEncoding],
            "response-content-language": [, input.ResponseContentLanguage],
            "response-content-type": [, input.ResponseContentType],
            "response-expires": [function () {
              return input.ResponseExpires !== void 0;
            }, function () {
              return __dateToUtcString(input.ResponseExpires).toString();
            }],
            versionId: [, input.VersionId],
            partNumber: [function () {
              return input.PartNumber !== void 0;
            }, function () {
              return input.PartNumber.toString();
            }]
          });
          return _context43.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context43.stop();
      }
    }, _callee43);
  }));
  return function se_GetObjectCommand(_x85, _x86) {
    return _ref43.apply(this, arguments);
  };
}()));
var se_GetObjectAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref44 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(input, context) {
    var _yield$context$endpoi87, hostname, _yield$context$endpoi88, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee44$(_context44) {
      while (1) switch (_context44.prev = _context44.next) {
        case 0:
          _context44.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi87 = _context44.sent;
          hostname = _yield$context$endpoi87.hostname;
          _yield$context$endpoi88 = _yield$context$endpoi87.protocol;
          protocol = _yield$context$endpoi88 === void 0 ? "https" : _yield$context$endpoi88;
          port = _yield$context$endpoi87.port;
          basePath = _yield$context$endpoi87.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            acl: [, ""],
            versionId: [, input.VersionId]
          });
          return _context44.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context44.stop();
      }
    }, _callee44);
  }));
  return function se_GetObjectAclCommand(_x87, _x88) {
    return _ref44.apply(this, arguments);
  };
}()));
var se_GetObjectAttributesCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref45 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(input, context) {
    var _yield$context$endpoi89, hostname, _yield$context$endpoi90, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee45$(_context45) {
      while (1) switch (_context45.prev = _context45.next) {
        case 0:
          _context45.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi89 = _context45.sent;
          hostname = _yield$context$endpoi89.hostname;
          _yield$context$endpoi90 = _yield$context$endpoi89.protocol;
          protocol = _yield$context$endpoi90 === void 0 ? "https" : _yield$context$endpoi90;
          port = _yield$context$endpoi89.port;
          basePath = _yield$context$endpoi89.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-max-parts": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.MaxParts);
            }, function () {
              return input.MaxParts.toString();
            }],
            "x-amz-part-number-marker": input.PartNumberMarker,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-object-attributes": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectAttributes);
            }, function () {
              return (input.ObjectAttributes || []).map(function (_entry) {
                return _entry;
              }).join(", ");
            }]
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            attributes: [, ""],
            versionId: [, input.VersionId]
          });
          return _context45.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context45.stop();
      }
    }, _callee45);
  }));
  return function se_GetObjectAttributesCommand(_x89, _x90) {
    return _ref45.apply(this, arguments);
  };
}()));
var se_GetObjectLegalHoldCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref46 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(input, context) {
    var _yield$context$endpoi91, hostname, _yield$context$endpoi92, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee46$(_context46) {
      while (1) switch (_context46.prev = _context46.next) {
        case 0:
          _context46.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi91 = _context46.sent;
          hostname = _yield$context$endpoi91.hostname;
          _yield$context$endpoi92 = _yield$context$endpoi91.protocol;
          protocol = _yield$context$endpoi92 === void 0 ? "https" : _yield$context$endpoi92;
          port = _yield$context$endpoi91.port;
          basePath = _yield$context$endpoi91.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "legal-hold": [, ""],
            versionId: [, input.VersionId]
          });
          return _context46.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context46.stop();
      }
    }, _callee46);
  }));
  return function se_GetObjectLegalHoldCommand(_x91, _x92) {
    return _ref46.apply(this, arguments);
  };
}()));
var se_GetObjectLockConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref47 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47(input, context) {
    var _yield$context$endpoi93, hostname, _yield$context$endpoi94, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee47$(_context47) {
      while (1) switch (_context47.prev = _context47.next) {
        case 0:
          _context47.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi93 = _context47.sent;
          hostname = _yield$context$endpoi93.hostname;
          _yield$context$endpoi94 = _yield$context$endpoi93.protocol;
          protocol = _yield$context$endpoi94 === void 0 ? "https" : _yield$context$endpoi94;
          port = _yield$context$endpoi93.port;
          basePath = _yield$context$endpoi93.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "object-lock": [, ""]
          });
          return _context47.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context47.stop();
      }
    }, _callee47);
  }));
  return function se_GetObjectLockConfigurationCommand(_x93, _x94) {
    return _ref47.apply(this, arguments);
  };
}()));
var se_GetObjectRetentionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref48 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(input, context) {
    var _yield$context$endpoi95, hostname, _yield$context$endpoi96, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee48$(_context48) {
      while (1) switch (_context48.prev = _context48.next) {
        case 0:
          _context48.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi95 = _context48.sent;
          hostname = _yield$context$endpoi95.hostname;
          _yield$context$endpoi96 = _yield$context$endpoi95.protocol;
          protocol = _yield$context$endpoi96 === void 0 ? "https" : _yield$context$endpoi96;
          port = _yield$context$endpoi95.port;
          basePath = _yield$context$endpoi95.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            retention: [, ""],
            versionId: [, input.VersionId]
          });
          return _context48.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context48.stop();
      }
    }, _callee48);
  }));
  return function se_GetObjectRetentionCommand(_x95, _x96) {
    return _ref48.apply(this, arguments);
  };
}()));
var se_GetObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref49 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49(input, context) {
    var _yield$context$endpoi97, hostname, _yield$context$endpoi98, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee49$(_context49) {
      while (1) switch (_context49.prev = _context49.next) {
        case 0:
          _context49.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi97 = _context49.sent;
          hostname = _yield$context$endpoi97.hostname;
          _yield$context$endpoi98 = _yield$context$endpoi97.protocol;
          protocol = _yield$context$endpoi98 === void 0 ? "https" : _yield$context$endpoi98;
          port = _yield$context$endpoi97.port;
          basePath = _yield$context$endpoi97.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-request-payer": input.RequestPayer
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            tagging: [, ""],
            versionId: [, input.VersionId]
          });
          return _context49.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context49.stop();
      }
    }, _callee49);
  }));
  return function se_GetObjectTaggingCommand(_x97, _x98) {
    return _ref49.apply(this, arguments);
  };
}()));
var se_GetObjectTorrentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref50 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50(input, context) {
    var _yield$context$endpoi99, hostname, _yield$context$endpoi100, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee50$(_context50) {
      while (1) switch (_context50.prev = _context50.next) {
        case 0:
          _context50.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi99 = _context50.sent;
          hostname = _yield$context$endpoi99.hostname;
          _yield$context$endpoi100 = _yield$context$endpoi99.protocol;
          protocol = _yield$context$endpoi100 === void 0 ? "https" : _yield$context$endpoi100;
          port = _yield$context$endpoi99.port;
          basePath = _yield$context$endpoi99.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            torrent: [, ""]
          });
          return _context50.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context50.stop();
      }
    }, _callee50);
  }));
  return function se_GetObjectTorrentCommand(_x99, _x100) {
    return _ref50.apply(this, arguments);
  };
}()));
var se_GetPublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref51 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(input, context) {
    var _yield$context$endpoi101, hostname, _yield$context$endpoi102, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee51$(_context51) {
      while (1) switch (_context51.prev = _context51.next) {
        case 0:
          _context51.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi101 = _context51.sent;
          hostname = _yield$context$endpoi101.hostname;
          _yield$context$endpoi102 = _yield$context$endpoi101.protocol;
          protocol = _yield$context$endpoi102 === void 0 ? "https" : _yield$context$endpoi102;
          port = _yield$context$endpoi101.port;
          basePath = _yield$context$endpoi101.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            publicAccessBlock: [, ""]
          });
          return _context51.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context51.stop();
      }
    }, _callee51);
  }));
  return function se_GetPublicAccessBlockCommand(_x101, _x102) {
    return _ref51.apply(this, arguments);
  };
}()));
var se_HeadBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref52 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(input, context) {
    var _yield$context$endpoi103, hostname, _yield$context$endpoi104, protocol, port, basePath, headers, resolvedPath, body;
    return _regeneratorRuntime().wrap(function _callee52$(_context52) {
      while (1) switch (_context52.prev = _context52.next) {
        case 0:
          _context52.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi103 = _context52.sent;
          hostname = _yield$context$endpoi103.hostname;
          _yield$context$endpoi104 = _yield$context$endpoi103.protocol;
          protocol = _yield$context$endpoi104 === void 0 ? "https" : _yield$context$endpoi104;
          port = _yield$context$endpoi103.port;
          basePath = _yield$context$endpoi103.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          return _context52.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "HEAD",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context52.stop();
      }
    }, _callee52);
  }));
  return function se_HeadBucketCommand(_x103, _x104) {
    return _ref52.apply(this, arguments);
  };
}()));
var se_HeadObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref53 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(input, context) {
    var _yield$context$endpoi105, hostname, _yield$context$endpoi106, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee53$(_context53) {
      while (1) switch (_context53.prev = _context53.next) {
        case 0:
          _context53.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi105 = _context53.sent;
          hostname = _yield$context$endpoi105.hostname;
          _yield$context$endpoi106 = _yield$context$endpoi105.protocol;
          protocol = _yield$context$endpoi106 === void 0 ? "https" : _yield$context$endpoi106;
          port = _yield$context$endpoi105.port;
          basePath = _yield$context$endpoi105.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "if-match": input.IfMatch,
            "if-modified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.IfModifiedSince);
            }, function () {
              return __dateToUtcString(input.IfModifiedSince).toString();
            }],
            "if-none-match": input.IfNoneMatch,
            "if-unmodified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.IfUnmodifiedSince);
            }, function () {
              return __dateToUtcString(input.IfUnmodifiedSince).toString();
            }],
            range: input.Range,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-checksum-mode": input.ChecksumMode
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            versionId: [, input.VersionId],
            partNumber: [function () {
              return input.PartNumber !== void 0;
            }, function () {
              return input.PartNumber.toString();
            }]
          });
          return _context53.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "HEAD",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context53.stop();
      }
    }, _callee53);
  }));
  return function se_HeadObjectCommand(_x105, _x106) {
    return _ref53.apply(this, arguments);
  };
}()));
var se_ListBucketAnalyticsConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref54 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54(input, context) {
    var _yield$context$endpoi107, hostname, _yield$context$endpoi108, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee54$(_context54) {
      while (1) switch (_context54.prev = _context54.next) {
        case 0:
          _context54.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi107 = _context54.sent;
          hostname = _yield$context$endpoi107.hostname;
          _yield$context$endpoi108 = _yield$context$endpoi107.protocol;
          protocol = _yield$context$endpoi108 === void 0 ? "https" : _yield$context$endpoi108;
          port = _yield$context$endpoi107.port;
          basePath = _yield$context$endpoi107.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            analytics: [, ""],
            "x-id": [, "ListBucketAnalyticsConfigurations"],
            "continuation-token": [, input.ContinuationToken]
          });
          return _context54.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context54.stop();
      }
    }, _callee54);
  }));
  return function se_ListBucketAnalyticsConfigurationsCommand(_x107, _x108) {
    return _ref54.apply(this, arguments);
  };
}()));
var se_ListBucketIntelligentTieringConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref55 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(input, context) {
    var _yield$context$endpoi109, hostname, _yield$context$endpoi110, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee55$(_context55) {
      while (1) switch (_context55.prev = _context55.next) {
        case 0:
          _context55.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi109 = _context55.sent;
          hostname = _yield$context$endpoi109.hostname;
          _yield$context$endpoi110 = _yield$context$endpoi109.protocol;
          protocol = _yield$context$endpoi110 === void 0 ? "https" : _yield$context$endpoi110;
          port = _yield$context$endpoi109.port;
          basePath = _yield$context$endpoi109.path;
          headers = {};
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "intelligent-tiering": [, ""],
            "x-id": [, "ListBucketIntelligentTieringConfigurations"],
            "continuation-token": [, input.ContinuationToken]
          });
          return _context55.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context55.stop();
      }
    }, _callee55);
  }));
  return function se_ListBucketIntelligentTieringConfigurationsCommand(_x109, _x110) {
    return _ref55.apply(this, arguments);
  };
}()));
var se_ListBucketInventoryConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref56 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56(input, context) {
    var _yield$context$endpoi111, hostname, _yield$context$endpoi112, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee56$(_context56) {
      while (1) switch (_context56.prev = _context56.next) {
        case 0:
          _context56.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi111 = _context56.sent;
          hostname = _yield$context$endpoi111.hostname;
          _yield$context$endpoi112 = _yield$context$endpoi111.protocol;
          protocol = _yield$context$endpoi112 === void 0 ? "https" : _yield$context$endpoi112;
          port = _yield$context$endpoi111.port;
          basePath = _yield$context$endpoi111.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            inventory: [, ""],
            "x-id": [, "ListBucketInventoryConfigurations"],
            "continuation-token": [, input.ContinuationToken]
          });
          return _context56.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context56.stop();
      }
    }, _callee56);
  }));
  return function se_ListBucketInventoryConfigurationsCommand(_x111, _x112) {
    return _ref56.apply(this, arguments);
  };
}()));
var se_ListBucketMetricsConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref57 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(input, context) {
    var _yield$context$endpoi113, hostname, _yield$context$endpoi114, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee57$(_context57) {
      while (1) switch (_context57.prev = _context57.next) {
        case 0:
          _context57.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi113 = _context57.sent;
          hostname = _yield$context$endpoi113.hostname;
          _yield$context$endpoi114 = _yield$context$endpoi113.protocol;
          protocol = _yield$context$endpoi114 === void 0 ? "https" : _yield$context$endpoi114;
          port = _yield$context$endpoi113.port;
          basePath = _yield$context$endpoi113.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            metrics: [, ""],
            "x-id": [, "ListBucketMetricsConfigurations"],
            "continuation-token": [, input.ContinuationToken]
          });
          return _context57.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context57.stop();
      }
    }, _callee57);
  }));
  return function se_ListBucketMetricsConfigurationsCommand(_x113, _x114) {
    return _ref57.apply(this, arguments);
  };
}()));
var se_ListBucketsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref58 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58(input, context) {
    var _yield$context$endpoi115, hostname, _yield$context$endpoi116, protocol, port, basePath, headers, resolvedPath, body;
    return _regeneratorRuntime().wrap(function _callee58$(_context58) {
      while (1) switch (_context58.prev = _context58.next) {
        case 0:
          _context58.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi115 = _context58.sent;
          hostname = _yield$context$endpoi115.hostname;
          _yield$context$endpoi116 = _yield$context$endpoi115.protocol;
          protocol = _yield$context$endpoi116 === void 0 ? "https" : _yield$context$endpoi116;
          port = _yield$context$endpoi115.port;
          basePath = _yield$context$endpoi115.path;
          headers = {
            "content-type": "application/xml"
          };
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          body = "";
          return _context58.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            body: body
          }));
        case 12:
        case "end":
          return _context58.stop();
      }
    }, _callee58);
  }));
  return function se_ListBucketsCommand(_x115, _x116) {
    return _ref58.apply(this, arguments);
  };
}()));
var se_ListMultipartUploadsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref59 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(input, context) {
    var _yield$context$endpoi117, hostname, _yield$context$endpoi118, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee59$(_context59) {
      while (1) switch (_context59.prev = _context59.next) {
        case 0:
          _context59.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi117 = _context59.sent;
          hostname = _yield$context$endpoi117.hostname;
          _yield$context$endpoi118 = _yield$context$endpoi117.protocol;
          protocol = _yield$context$endpoi118 === void 0 ? "https" : _yield$context$endpoi118;
          port = _yield$context$endpoi117.port;
          basePath = _yield$context$endpoi117.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-request-payer": input.RequestPayer
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            uploads: [, ""],
            delimiter: [, input.Delimiter],
            "encoding-type": [, input.EncodingType],
            "key-marker": [, input.KeyMarker],
            "max-uploads": [function () {
              return input.MaxUploads !== void 0;
            }, function () {
              return input.MaxUploads.toString();
            }],
            prefix: [, input.Prefix],
            "upload-id-marker": [, input.UploadIdMarker]
          });
          return _context59.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context59.stop();
      }
    }, _callee59);
  }));
  return function se_ListMultipartUploadsCommand(_x117, _x118) {
    return _ref59.apply(this, arguments);
  };
}()));
var se_ListObjectsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref60 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(input, context) {
    var _yield$context$endpoi119, hostname, _yield$context$endpoi120, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee60$(_context60) {
      while (1) switch (_context60.prev = _context60.next) {
        case 0:
          _context60.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi119 = _context60.sent;
          hostname = _yield$context$endpoi119.hostname;
          _yield$context$endpoi120 = _yield$context$endpoi119.protocol;
          protocol = _yield$context$endpoi120 === void 0 ? "https" : _yield$context$endpoi120;
          port = _yield$context$endpoi119.port;
          basePath = _yield$context$endpoi119.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-optional-object-attributes": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.OptionalObjectAttributes);
            }, function () {
              return (input.OptionalObjectAttributes || []).map(function (_entry) {
                return _entry;
              }).join(", ");
            }]
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            delimiter: [, input.Delimiter],
            "encoding-type": [, input.EncodingType],
            marker: [, input.Marker],
            "max-keys": [function () {
              return input.MaxKeys !== void 0;
            }, function () {
              return input.MaxKeys.toString();
            }],
            prefix: [, input.Prefix]
          });
          return _context60.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context60.stop();
      }
    }, _callee60);
  }));
  return function se_ListObjectsCommand(_x119, _x120) {
    return _ref60.apply(this, arguments);
  };
}()));
var se_ListObjectsV2Command = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref61 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61(input, context) {
    var _yield$context$endpoi121, hostname, _yield$context$endpoi122, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee61$(_context61) {
      while (1) switch (_context61.prev = _context61.next) {
        case 0:
          _context61.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi121 = _context61.sent;
          hostname = _yield$context$endpoi121.hostname;
          _yield$context$endpoi122 = _yield$context$endpoi121.protocol;
          protocol = _yield$context$endpoi122 === void 0 ? "https" : _yield$context$endpoi122;
          port = _yield$context$endpoi121.port;
          basePath = _yield$context$endpoi121.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-optional-object-attributes": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.OptionalObjectAttributes);
            }, function () {
              return (input.OptionalObjectAttributes || []).map(function (_entry) {
                return _entry;
              }).join(", ");
            }]
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "list-type": [, "2"],
            delimiter: [, input.Delimiter],
            "encoding-type": [, input.EncodingType],
            "max-keys": [function () {
              return input.MaxKeys !== void 0;
            }, function () {
              return input.MaxKeys.toString();
            }],
            prefix: [, input.Prefix],
            "continuation-token": [, input.ContinuationToken],
            "fetch-owner": [function () {
              return input.FetchOwner !== void 0;
            }, function () {
              return input.FetchOwner.toString();
            }],
            "start-after": [, input.StartAfter]
          });
          return _context61.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context61.stop();
      }
    }, _callee61);
  }));
  return function se_ListObjectsV2Command(_x121, _x122) {
    return _ref61.apply(this, arguments);
  };
}()));
var se_ListObjectVersionsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref62 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(input, context) {
    var _yield$context$endpoi123, hostname, _yield$context$endpoi124, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee62$(_context62) {
      while (1) switch (_context62.prev = _context62.next) {
        case 0:
          _context62.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi123 = _context62.sent;
          hostname = _yield$context$endpoi123.hostname;
          _yield$context$endpoi124 = _yield$context$endpoi123.protocol;
          protocol = _yield$context$endpoi124 === void 0 ? "https" : _yield$context$endpoi124;
          port = _yield$context$endpoi123.port;
          basePath = _yield$context$endpoi123.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-optional-object-attributes": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.OptionalObjectAttributes);
            }, function () {
              return (input.OptionalObjectAttributes || []).map(function (_entry) {
                return _entry;
              }).join(", ");
            }]
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            versions: [, ""],
            delimiter: [, input.Delimiter],
            "encoding-type": [, input.EncodingType],
            "key-marker": [, input.KeyMarker],
            "max-keys": [function () {
              return input.MaxKeys !== void 0;
            }, function () {
              return input.MaxKeys.toString();
            }],
            prefix: [, input.Prefix],
            "version-id-marker": [, input.VersionIdMarker]
          });
          return _context62.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 13:
        case "end":
          return _context62.stop();
      }
    }, _callee62);
  }));
  return function se_ListObjectVersionsCommand(_x123, _x124) {
    return _ref62.apply(this, arguments);
  };
}()));
var se_ListPartsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref63 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63(input, context) {
    var _yield$context$endpoi125, hostname, _yield$context$endpoi126, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee63$(_context63) {
      while (1) switch (_context63.prev = _context63.next) {
        case 0:
          _context63.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi125 = _context63.sent;
          hostname = _yield$context$endpoi125.hostname;
          _yield$context$endpoi126 = _yield$context$endpoi125.protocol;
          protocol = _yield$context$endpoi126 === void 0 ? "https" : _yield$context$endpoi126;
          port = _yield$context$endpoi125.port;
          basePath = _yield$context$endpoi125.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "ListParts"],
            "max-parts": [function () {
              return input.MaxParts !== void 0;
            }, function () {
              return input.MaxParts.toString();
            }],
            "part-number-marker": [, input.PartNumberMarker],
            uploadId: [, __expectNonNull(input.UploadId, "UploadId")]
          });
          return _context63.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "GET",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context63.stop();
      }
    }, _callee63);
  }));
  return function se_ListPartsCommand(_x125, _x126) {
    return _ref63.apply(this, arguments);
  };
}()));
var se_PutBucketAccelerateConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref64 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64(input, context) {
    var _yield$context$endpoi127, hostname, _yield$context$endpoi128, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee64$(_context64) {
      while (1) switch (_context64.prev = _context64.next) {
        case 0:
          _context64.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi127 = _context64.sent;
          hostname = _yield$context$endpoi127.hostname;
          _yield$context$endpoi128 = _yield$context$endpoi127.protocol;
          protocol = _yield$context$endpoi128 === void 0 ? "https" : _yield$context$endpoi128;
          port = _yield$context$endpoi127.port;
          basePath = _yield$context$endpoi127.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            accelerate: [, ""]
          });
          if (input.AccelerateConfiguration !== undefined) {
            body = se_AccelerateConfiguration(input.AccelerateConfiguration, context);
          }
          if (input.AccelerateConfiguration !== undefined) {
            contents = se_AccelerateConfiguration(input.AccelerateConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context64.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context64.stop();
      }
    }, _callee64);
  }));
  return function se_PutBucketAccelerateConfigurationCommand(_x127, _x128) {
    return _ref64.apply(this, arguments);
  };
}()));
var se_PutBucketAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref65 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(input, context) {
    var _yield$context$endpoi129, hostname, _yield$context$endpoi130, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee65$(_context65) {
      while (1) switch (_context65.prev = _context65.next) {
        case 0:
          _context65.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi129 = _context65.sent;
          hostname = _yield$context$endpoi129.hostname;
          _yield$context$endpoi130 = _yield$context$endpoi129.protocol;
          protocol = _yield$context$endpoi130 === void 0 ? "https" : _yield$context$endpoi130;
          port = _yield$context$endpoi129.port;
          basePath = _yield$context$endpoi129.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-acl": input.ACL,
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write": input.GrantWrite,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            acl: [, ""]
          });
          if (input.AccessControlPolicy !== undefined) {
            body = se_AccessControlPolicy(input.AccessControlPolicy, context);
          }
          if (input.AccessControlPolicy !== undefined) {
            contents = se_AccessControlPolicy(input.AccessControlPolicy, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context65.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context65.stop();
      }
    }, _callee65);
  }));
  return function se_PutBucketAclCommand(_x129, _x130) {
    return _ref65.apply(this, arguments);
  };
}()));
var se_PutBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref66 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66(input, context) {
    var _yield$context$endpoi131, hostname, _yield$context$endpoi132, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee66$(_context66) {
      while (1) switch (_context66.prev = _context66.next) {
        case 0:
          _context66.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi131 = _context66.sent;
          hostname = _yield$context$endpoi131.hostname;
          _yield$context$endpoi132 = _yield$context$endpoi131.protocol;
          protocol = _yield$context$endpoi132 === void 0 ? "https" : _yield$context$endpoi132;
          port = _yield$context$endpoi131.port;
          basePath = _yield$context$endpoi131.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            analytics: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          if (input.AnalyticsConfiguration !== undefined) {
            body = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);
          }
          if (input.AnalyticsConfiguration !== undefined) {
            contents = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context66.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context66.stop();
      }
    }, _callee66);
  }));
  return function se_PutBucketAnalyticsConfigurationCommand(_x131, _x132) {
    return _ref66.apply(this, arguments);
  };
}()));
var se_PutBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref67 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67(input, context) {
    var _yield$context$endpoi133, hostname, _yield$context$endpoi134, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee67$(_context67) {
      while (1) switch (_context67.prev = _context67.next) {
        case 0:
          _context67.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi133 = _context67.sent;
          hostname = _yield$context$endpoi133.hostname;
          _yield$context$endpoi134 = _yield$context$endpoi133.protocol;
          protocol = _yield$context$endpoi134 === void 0 ? "https" : _yield$context$endpoi134;
          port = _yield$context$endpoi133.port;
          basePath = _yield$context$endpoi133.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            cors: [, ""]
          });
          if (input.CORSConfiguration !== undefined) {
            body = se_CORSConfiguration(input.CORSConfiguration, context);
          }
          if (input.CORSConfiguration !== undefined) {
            contents = se_CORSConfiguration(input.CORSConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context67.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context67.stop();
      }
    }, _callee67);
  }));
  return function se_PutBucketCorsCommand(_x133, _x134) {
    return _ref67.apply(this, arguments);
  };
}()));
var se_PutBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref68 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68(input, context) {
    var _yield$context$endpoi135, hostname, _yield$context$endpoi136, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee68$(_context68) {
      while (1) switch (_context68.prev = _context68.next) {
        case 0:
          _context68.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi135 = _context68.sent;
          hostname = _yield$context$endpoi135.hostname;
          _yield$context$endpoi136 = _yield$context$endpoi135.protocol;
          protocol = _yield$context$endpoi136 === void 0 ? "https" : _yield$context$endpoi136;
          port = _yield$context$endpoi135.port;
          basePath = _yield$context$endpoi135.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            encryption: [, ""]
          });
          if (input.ServerSideEncryptionConfiguration !== undefined) {
            body = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);
          }
          if (input.ServerSideEncryptionConfiguration !== undefined) {
            contents = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context68.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context68.stop();
      }
    }, _callee68);
  }));
  return function se_PutBucketEncryptionCommand(_x135, _x136) {
    return _ref68.apply(this, arguments);
  };
}()));
var se_PutBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref69 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee69(input, context) {
    var _yield$context$endpoi137, hostname, _yield$context$endpoi138, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee69$(_context69) {
      while (1) switch (_context69.prev = _context69.next) {
        case 0:
          _context69.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi137 = _context69.sent;
          hostname = _yield$context$endpoi137.hostname;
          _yield$context$endpoi138 = _yield$context$endpoi137.protocol;
          protocol = _yield$context$endpoi138 === void 0 ? "https" : _yield$context$endpoi138;
          port = _yield$context$endpoi137.port;
          basePath = _yield$context$endpoi137.path;
          headers = {
            "content-type": "application/xml"
          };
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "intelligent-tiering": [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          if (input.IntelligentTieringConfiguration !== undefined) {
            body = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);
          }
          if (input.IntelligentTieringConfiguration !== undefined) {
            contents = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context69.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context69.stop();
      }
    }, _callee69);
  }));
  return function se_PutBucketIntelligentTieringConfigurationCommand(_x137, _x138) {
    return _ref69.apply(this, arguments);
  };
}()));
var se_PutBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref70 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee70(input, context) {
    var _yield$context$endpoi139, hostname, _yield$context$endpoi140, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee70$(_context70) {
      while (1) switch (_context70.prev = _context70.next) {
        case 0:
          _context70.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi139 = _context70.sent;
          hostname = _yield$context$endpoi139.hostname;
          _yield$context$endpoi140 = _yield$context$endpoi139.protocol;
          protocol = _yield$context$endpoi140 === void 0 ? "https" : _yield$context$endpoi140;
          port = _yield$context$endpoi139.port;
          basePath = _yield$context$endpoi139.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            inventory: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          if (input.InventoryConfiguration !== undefined) {
            body = se_InventoryConfiguration(input.InventoryConfiguration, context);
          }
          if (input.InventoryConfiguration !== undefined) {
            contents = se_InventoryConfiguration(input.InventoryConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context70.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context70.stop();
      }
    }, _callee70);
  }));
  return function se_PutBucketInventoryConfigurationCommand(_x139, _x140) {
    return _ref70.apply(this, arguments);
  };
}()));
var se_PutBucketLifecycleConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref71 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee71(input, context) {
    var _yield$context$endpoi141, hostname, _yield$context$endpoi142, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee71$(_context71) {
      while (1) switch (_context71.prev = _context71.next) {
        case 0:
          _context71.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi141 = _context71.sent;
          hostname = _yield$context$endpoi141.hostname;
          _yield$context$endpoi142 = _yield$context$endpoi141.protocol;
          protocol = _yield$context$endpoi142 === void 0 ? "https" : _yield$context$endpoi142;
          port = _yield$context$endpoi141.port;
          basePath = _yield$context$endpoi141.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            lifecycle: [, ""]
          });
          if (input.LifecycleConfiguration !== undefined) {
            body = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);
          }
          if (input.LifecycleConfiguration !== undefined) {
            contents = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);
            contents = contents.withName("LifecycleConfiguration");
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context71.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context71.stop();
      }
    }, _callee71);
  }));
  return function se_PutBucketLifecycleConfigurationCommand(_x141, _x142) {
    return _ref71.apply(this, arguments);
  };
}()));
var se_PutBucketLoggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref72 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72(input, context) {
    var _yield$context$endpoi143, hostname, _yield$context$endpoi144, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee72$(_context72) {
      while (1) switch (_context72.prev = _context72.next) {
        case 0:
          _context72.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi143 = _context72.sent;
          hostname = _yield$context$endpoi143.hostname;
          _yield$context$endpoi144 = _yield$context$endpoi143.protocol;
          protocol = _yield$context$endpoi144 === void 0 ? "https" : _yield$context$endpoi144;
          port = _yield$context$endpoi143.port;
          basePath = _yield$context$endpoi143.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            logging: [, ""]
          });
          if (input.BucketLoggingStatus !== undefined) {
            body = se_BucketLoggingStatus(input.BucketLoggingStatus, context);
          }
          if (input.BucketLoggingStatus !== undefined) {
            contents = se_BucketLoggingStatus(input.BucketLoggingStatus, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context72.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context72.stop();
      }
    }, _callee72);
  }));
  return function se_PutBucketLoggingCommand(_x143, _x144) {
    return _ref72.apply(this, arguments);
  };
}()));
var se_PutBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref73 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73(input, context) {
    var _yield$context$endpoi145, hostname, _yield$context$endpoi146, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee73$(_context73) {
      while (1) switch (_context73.prev = _context73.next) {
        case 0:
          _context73.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi145 = _context73.sent;
          hostname = _yield$context$endpoi145.hostname;
          _yield$context$endpoi146 = _yield$context$endpoi145.protocol;
          protocol = _yield$context$endpoi146 === void 0 ? "https" : _yield$context$endpoi146;
          port = _yield$context$endpoi145.port;
          basePath = _yield$context$endpoi145.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            metrics: [, ""],
            id: [, __expectNonNull(input.Id, "Id")]
          });
          if (input.MetricsConfiguration !== undefined) {
            body = se_MetricsConfiguration(input.MetricsConfiguration, context);
          }
          if (input.MetricsConfiguration !== undefined) {
            contents = se_MetricsConfiguration(input.MetricsConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context73.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context73.stop();
      }
    }, _callee73);
  }));
  return function se_PutBucketMetricsConfigurationCommand(_x145, _x146) {
    return _ref73.apply(this, arguments);
  };
}()));
var se_PutBucketNotificationConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref74 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee74(input, context) {
    var _yield$context$endpoi147, hostname, _yield$context$endpoi148, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee74$(_context74) {
      while (1) switch (_context74.prev = _context74.next) {
        case 0:
          _context74.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi147 = _context74.sent;
          hostname = _yield$context$endpoi147.hostname;
          _yield$context$endpoi148 = _yield$context$endpoi147.protocol;
          protocol = _yield$context$endpoi148 === void 0 ? "https" : _yield$context$endpoi148;
          port = _yield$context$endpoi147.port;
          basePath = _yield$context$endpoi147.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-skip-destination-validation": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.SkipDestinationValidation);
            }, function () {
              return input.SkipDestinationValidation.toString();
            }]
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            notification: [, ""]
          });
          if (input.NotificationConfiguration !== undefined) {
            body = se_NotificationConfiguration(input.NotificationConfiguration, context);
          }
          if (input.NotificationConfiguration !== undefined) {
            contents = se_NotificationConfiguration(input.NotificationConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context74.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context74.stop();
      }
    }, _callee74);
  }));
  return function se_PutBucketNotificationConfigurationCommand(_x147, _x148) {
    return _ref74.apply(this, arguments);
  };
}()));
var se_PutBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref75 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee75(input, context) {
    var _yield$context$endpoi149, hostname, _yield$context$endpoi150, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee75$(_context75) {
      while (1) switch (_context75.prev = _context75.next) {
        case 0:
          _context75.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi149 = _context75.sent;
          hostname = _yield$context$endpoi149.hostname;
          _yield$context$endpoi150 = _yield$context$endpoi149.protocol;
          protocol = _yield$context$endpoi150 === void 0 ? "https" : _yield$context$endpoi150;
          port = _yield$context$endpoi149.port;
          basePath = _yield$context$endpoi149.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            ownershipControls: [, ""]
          });
          if (input.OwnershipControls !== undefined) {
            body = se_OwnershipControls(input.OwnershipControls, context);
          }
          if (input.OwnershipControls !== undefined) {
            contents = se_OwnershipControls(input.OwnershipControls, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context75.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context75.stop();
      }
    }, _callee75);
  }));
  return function se_PutBucketOwnershipControlsCommand(_x149, _x150) {
    return _ref75.apply(this, arguments);
  };
}()));
var se_PutBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref76 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee76(input, context) {
    var _yield$context$endpoi151, hostname, _yield$context$endpoi152, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee76$(_context76) {
      while (1) switch (_context76.prev = _context76.next) {
        case 0:
          _context76.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi151 = _context76.sent;
          hostname = _yield$context$endpoi151.hostname;
          _yield$context$endpoi152 = _yield$context$endpoi151.protocol;
          protocol = _yield$context$endpoi152 === void 0 ? "https" : _yield$context$endpoi152;
          port = _yield$context$endpoi151.port;
          basePath = _yield$context$endpoi151.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "text/plain",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-confirm-remove-self-bucket-access": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess);
            }, function () {
              return input.ConfirmRemoveSelfBucketAccess.toString();
            }],
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            policy: [, ""]
          });
          if (input.Policy !== undefined) {
            body = input.Policy;
          }
          if (input.Policy !== undefined) {
            contents = input.Policy;
            body = contents;
          }
          return _context76.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context76.stop();
      }
    }, _callee76);
  }));
  return function se_PutBucketPolicyCommand(_x151, _x152) {
    return _ref76.apply(this, arguments);
  };
}()));
var se_PutBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref77 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee77(input, context) {
    var _yield$context$endpoi153, hostname, _yield$context$endpoi154, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee77$(_context77) {
      while (1) switch (_context77.prev = _context77.next) {
        case 0:
          _context77.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi153 = _context77.sent;
          hostname = _yield$context$endpoi153.hostname;
          _yield$context$endpoi154 = _yield$context$endpoi153.protocol;
          protocol = _yield$context$endpoi154 === void 0 ? "https" : _yield$context$endpoi154;
          port = _yield$context$endpoi153.port;
          basePath = _yield$context$endpoi153.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-bucket-object-lock-token": input.Token,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            replication: [, ""]
          });
          if (input.ReplicationConfiguration !== undefined) {
            body = se_ReplicationConfiguration(input.ReplicationConfiguration, context);
          }
          if (input.ReplicationConfiguration !== undefined) {
            contents = se_ReplicationConfiguration(input.ReplicationConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context77.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context77.stop();
      }
    }, _callee77);
  }));
  return function se_PutBucketReplicationCommand(_x153, _x154) {
    return _ref77.apply(this, arguments);
  };
}()));
var se_PutBucketRequestPaymentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref78 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee78(input, context) {
    var _yield$context$endpoi155, hostname, _yield$context$endpoi156, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee78$(_context78) {
      while (1) switch (_context78.prev = _context78.next) {
        case 0:
          _context78.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi155 = _context78.sent;
          hostname = _yield$context$endpoi155.hostname;
          _yield$context$endpoi156 = _yield$context$endpoi155.protocol;
          protocol = _yield$context$endpoi156 === void 0 ? "https" : _yield$context$endpoi156;
          port = _yield$context$endpoi155.port;
          basePath = _yield$context$endpoi155.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            requestPayment: [, ""]
          });
          if (input.RequestPaymentConfiguration !== undefined) {
            body = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);
          }
          if (input.RequestPaymentConfiguration !== undefined) {
            contents = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context78.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context78.stop();
      }
    }, _callee78);
  }));
  return function se_PutBucketRequestPaymentCommand(_x155, _x156) {
    return _ref78.apply(this, arguments);
  };
}()));
var se_PutBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref79 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee79(input, context) {
    var _yield$context$endpoi157, hostname, _yield$context$endpoi158, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee79$(_context79) {
      while (1) switch (_context79.prev = _context79.next) {
        case 0:
          _context79.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi157 = _context79.sent;
          hostname = _yield$context$endpoi157.hostname;
          _yield$context$endpoi158 = _yield$context$endpoi157.protocol;
          protocol = _yield$context$endpoi158 === void 0 ? "https" : _yield$context$endpoi158;
          port = _yield$context$endpoi157.port;
          basePath = _yield$context$endpoi157.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            tagging: [, ""]
          });
          if (input.Tagging !== undefined) {
            body = se_Tagging(input.Tagging, context);
          }
          if (input.Tagging !== undefined) {
            contents = se_Tagging(input.Tagging, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context79.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context79.stop();
      }
    }, _callee79);
  }));
  return function se_PutBucketTaggingCommand(_x157, _x158) {
    return _ref79.apply(this, arguments);
  };
}()));
var se_PutBucketVersioningCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref80 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee80(input, context) {
    var _yield$context$endpoi159, hostname, _yield$context$endpoi160, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee80$(_context80) {
      while (1) switch (_context80.prev = _context80.next) {
        case 0:
          _context80.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi159 = _context80.sent;
          hostname = _yield$context$endpoi159.hostname;
          _yield$context$endpoi160 = _yield$context$endpoi159.protocol;
          protocol = _yield$context$endpoi160 === void 0 ? "https" : _yield$context$endpoi160;
          port = _yield$context$endpoi159.port;
          basePath = _yield$context$endpoi159.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-mfa": input.MFA,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            versioning: [, ""]
          });
          if (input.VersioningConfiguration !== undefined) {
            body = se_VersioningConfiguration(input.VersioningConfiguration, context);
          }
          if (input.VersioningConfiguration !== undefined) {
            contents = se_VersioningConfiguration(input.VersioningConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context80.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context80.stop();
      }
    }, _callee80);
  }));
  return function se_PutBucketVersioningCommand(_x159, _x160) {
    return _ref80.apply(this, arguments);
  };
}()));
var se_PutBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref81 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee81(input, context) {
    var _yield$context$endpoi161, hostname, _yield$context$endpoi162, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee81$(_context81) {
      while (1) switch (_context81.prev = _context81.next) {
        case 0:
          _context81.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi161 = _context81.sent;
          hostname = _yield$context$endpoi161.hostname;
          _yield$context$endpoi162 = _yield$context$endpoi161.protocol;
          protocol = _yield$context$endpoi162 === void 0 ? "https" : _yield$context$endpoi162;
          port = _yield$context$endpoi161.port;
          basePath = _yield$context$endpoi161.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            website: [, ""]
          });
          if (input.WebsiteConfiguration !== undefined) {
            body = se_WebsiteConfiguration(input.WebsiteConfiguration, context);
          }
          if (input.WebsiteConfiguration !== undefined) {
            contents = se_WebsiteConfiguration(input.WebsiteConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context81.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context81.stop();
      }
    }, _callee81);
  }));
  return function se_PutBucketWebsiteCommand(_x161, _x162) {
    return _ref81.apply(this, arguments);
  };
}()));
var se_PutObjectCommand = /*#__PURE__*/function () {
  var _ref82 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee82(input, context) {
    var _yield$context$endpoi163, hostname, _yield$context$endpoi164, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee82$(_context82) {
      while (1) switch (_context82.prev = _context82.next) {
        case 0:
          _context82.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi163 = _context82.sent;
          hostname = _yield$context$endpoi163.hostname;
          _yield$context$endpoi164 = _yield$context$endpoi163.protocol;
          protocol = _yield$context$endpoi164 === void 0 ? "https" : _yield$context$endpoi164;
          port = _yield$context$endpoi163.port;
          basePath = _yield$context$endpoi163.path;
          headers = object_mapping_map({}, Aws_restXml_isSerializableHeaderValue, _objectSpread2({
            "content-type": input.ContentType || "application/octet-stream",
            "x-amz-acl": input.ACL,
            "cache-control": input.CacheControl,
            "content-disposition": input.ContentDisposition,
            "content-encoding": input.ContentEncoding,
            "content-language": input.ContentLanguage,
            "content-length": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ContentLength);
            }, function () {
              return input.ContentLength.toString();
            }],
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-checksum-crc32": input.ChecksumCRC32,
            "x-amz-checksum-crc32c": input.ChecksumCRC32C,
            "x-amz-checksum-sha1": input.ChecksumSHA1,
            "x-amz-checksum-sha256": input.ChecksumSHA256,
            expires: [function () {
              return Aws_restXml_isSerializableHeaderValue(input.Expires);
            }, function () {
              return dateToUtcString(input.Expires).toString();
            }],
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-server-side-encryption": input.ServerSideEncryption,
            "x-amz-storage-class": input.StorageClass,
            "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
            "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
            "x-amz-server-side-encryption-bucket-key-enabled": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BucketKeyEnabled);
            }, function () {
              return input.BucketKeyEnabled.toString();
            }],
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-tagging": input.Tagging,
            "x-amz-object-lock-mode": input.ObjectLockMode,
            "x-amz-object-lock-retain-until-date": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectLockRetainUntilDate);
            }, function () {
              return (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString();
            }],
            "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          }, input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            acc["x-amz-meta-".concat(suffix.toLowerCase())] = input.Metadata[suffix];
            return acc;
          }, {})));
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = resolve_path_resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = resolve_path_resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = object_mapping_map({
            "x-id": [, "PutObject"]
          });
          if (input.Body !== undefined) {
            body = input.Body;
          }
          if (input.Body !== undefined) {
            contents = input.Body;
            body = contents;
          }
          return _context82.abrupt("return", new httpRequest_HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context82.stop();
      }
    }, _callee82);
  }));
  return function se_PutObjectCommand(_x163, _x164) {
    return _ref82.apply(this, arguments);
  };
}();
var se_PutObjectAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref83 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee83(input, context) {
    var _yield$context$endpoi165, hostname, _yield$context$endpoi166, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee83$(_context83) {
      while (1) switch (_context83.prev = _context83.next) {
        case 0:
          _context83.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi165 = _context83.sent;
          hostname = _yield$context$endpoi165.hostname;
          _yield$context$endpoi166 = _yield$context$endpoi165.protocol;
          protocol = _yield$context$endpoi166 === void 0 ? "https" : _yield$context$endpoi166;
          port = _yield$context$endpoi165.port;
          basePath = _yield$context$endpoi165.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-acl": input.ACL,
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-grant-full-control": input.GrantFullControl,
            "x-amz-grant-read": input.GrantRead,
            "x-amz-grant-read-acp": input.GrantReadACP,
            "x-amz-grant-write": input.GrantWrite,
            "x-amz-grant-write-acp": input.GrantWriteACP,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            acl: [, ""],
            versionId: [, input.VersionId]
          });
          if (input.AccessControlPolicy !== undefined) {
            body = se_AccessControlPolicy(input.AccessControlPolicy, context);
          }
          if (input.AccessControlPolicy !== undefined) {
            contents = se_AccessControlPolicy(input.AccessControlPolicy, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context83.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context83.stop();
      }
    }, _callee83);
  }));
  return function se_PutObjectAclCommand(_x165, _x166) {
    return _ref83.apply(this, arguments);
  };
}()));
var se_PutObjectLegalHoldCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref84 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee84(input, context) {
    var _yield$context$endpoi167, hostname, _yield$context$endpoi168, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee84$(_context84) {
      while (1) switch (_context84.prev = _context84.next) {
        case 0:
          _context84.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi167 = _context84.sent;
          hostname = _yield$context$endpoi167.hostname;
          _yield$context$endpoi168 = _yield$context$endpoi167.protocol;
          protocol = _yield$context$endpoi168 === void 0 ? "https" : _yield$context$endpoi168;
          port = _yield$context$endpoi167.port;
          basePath = _yield$context$endpoi167.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-request-payer": input.RequestPayer,
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "legal-hold": [, ""],
            versionId: [, input.VersionId]
          });
          if (input.LegalHold !== undefined) {
            body = se_ObjectLockLegalHold(input.LegalHold, context);
          }
          if (input.LegalHold !== undefined) {
            contents = se_ObjectLockLegalHold(input.LegalHold, context);
            contents = contents.withName("LegalHold");
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context84.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context84.stop();
      }
    }, _callee84);
  }));
  return function se_PutObjectLegalHoldCommand(_x167, _x168) {
    return _ref84.apply(this, arguments);
  };
}()));
var se_PutObjectLockConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref85 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee85(input, context) {
    var _yield$context$endpoi169, hostname, _yield$context$endpoi170, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee85$(_context85) {
      while (1) switch (_context85.prev = _context85.next) {
        case 0:
          _context85.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi169 = _context85.sent;
          hostname = _yield$context$endpoi169.hostname;
          _yield$context$endpoi170 = _yield$context$endpoi169.protocol;
          protocol = _yield$context$endpoi170 === void 0 ? "https" : _yield$context$endpoi170;
          port = _yield$context$endpoi169.port;
          basePath = _yield$context$endpoi169.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-bucket-object-lock-token": input.Token,
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            "object-lock": [, ""]
          });
          if (input.ObjectLockConfiguration !== undefined) {
            body = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);
          }
          if (input.ObjectLockConfiguration !== undefined) {
            contents = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context85.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context85.stop();
      }
    }, _callee85);
  }));
  return function se_PutObjectLockConfigurationCommand(_x169, _x170) {
    return _ref85.apply(this, arguments);
  };
}()));
var se_PutObjectRetentionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref86 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee86(input, context) {
    var _yield$context$endpoi171, hostname, _yield$context$endpoi172, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee86$(_context86) {
      while (1) switch (_context86.prev = _context86.next) {
        case 0:
          _context86.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi171 = _context86.sent;
          hostname = _yield$context$endpoi171.hostname;
          _yield$context$endpoi172 = _yield$context$endpoi171.protocol;
          protocol = _yield$context$endpoi172 === void 0 ? "https" : _yield$context$endpoi172;
          port = _yield$context$endpoi171.port;
          basePath = _yield$context$endpoi171.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-bypass-governance-retention": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BypassGovernanceRetention);
            }, function () {
              return input.BypassGovernanceRetention.toString();
            }],
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            retention: [, ""],
            versionId: [, input.VersionId]
          });
          if (input.Retention !== undefined) {
            body = se_ObjectLockRetention(input.Retention, context);
          }
          if (input.Retention !== undefined) {
            contents = se_ObjectLockRetention(input.Retention, context);
            contents = contents.withName("Retention");
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context86.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context86.stop();
      }
    }, _callee86);
  }));
  return function se_PutObjectRetentionCommand(_x171, _x172) {
    return _ref86.apply(this, arguments);
  };
}()));
var se_PutObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref87 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee87(input, context) {
    var _yield$context$endpoi173, hostname, _yield$context$endpoi174, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee87$(_context87) {
      while (1) switch (_context87.prev = _context87.next) {
        case 0:
          _context87.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi173 = _context87.sent;
          hostname = _yield$context$endpoi173.hostname;
          _yield$context$endpoi174 = _yield$context$endpoi173.protocol;
          protocol = _yield$context$endpoi174 === void 0 ? "https" : _yield$context$endpoi174;
          port = _yield$context$endpoi173.port;
          basePath = _yield$context$endpoi173.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-request-payer": input.RequestPayer
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            tagging: [, ""],
            versionId: [, input.VersionId]
          });
          if (input.Tagging !== undefined) {
            body = se_Tagging(input.Tagging, context);
          }
          if (input.Tagging !== undefined) {
            contents = se_Tagging(input.Tagging, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context87.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context87.stop();
      }
    }, _callee87);
  }));
  return function se_PutObjectTaggingCommand(_x173, _x174) {
    return _ref87.apply(this, arguments);
  };
}()));
var se_PutPublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref88 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee88(input, context) {
    var _yield$context$endpoi175, hostname, _yield$context$endpoi176, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee88$(_context88) {
      while (1) switch (_context88.prev = _context88.next) {
        case 0:
          _context88.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi175 = _context88.sent;
          hostname = _yield$context$endpoi175.hostname;
          _yield$context$endpoi176 = _yield$context$endpoi175.protocol;
          protocol = _yield$context$endpoi176 === void 0 ? "https" : _yield$context$endpoi176;
          port = _yield$context$endpoi175.port;
          basePath = _yield$context$endpoi175.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          query = map({
            publicAccessBlock: [, ""]
          });
          if (input.PublicAccessBlockConfiguration !== undefined) {
            body = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);
          }
          if (input.PublicAccessBlockConfiguration !== undefined) {
            contents = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context88.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 15:
        case "end":
          return _context88.stop();
      }
    }, _callee88);
  }));
  return function se_PutPublicAccessBlockCommand(_x175, _x176) {
    return _ref88.apply(this, arguments);
  };
}()));
var se_RestoreObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref89 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee89(input, context) {
    var _yield$context$endpoi177, hostname, _yield$context$endpoi178, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee89$(_context89) {
      while (1) switch (_context89.prev = _context89.next) {
        case 0:
          _context89.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi177 = _context89.sent;
          hostname = _yield$context$endpoi177.hostname;
          _yield$context$endpoi178 = _yield$context$endpoi177.protocol;
          protocol = _yield$context$endpoi178 === void 0 ? "https" : _yield$context$endpoi178;
          port = _yield$context$endpoi177.port;
          basePath = _yield$context$endpoi177.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            restore: [, ""],
            "x-id": [, "RestoreObject"],
            versionId: [, input.VersionId]
          });
          if (input.RestoreRequest !== undefined) {
            body = se_RestoreRequest(input.RestoreRequest, context);
          }
          if (input.RestoreRequest !== undefined) {
            contents = se_RestoreRequest(input.RestoreRequest, context);
            body = '<?xml version="1.0" encoding="UTF-8"?>';
            contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
            body += contents.toString();
          }
          return _context89.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context89.stop();
      }
    }, _callee89);
  }));
  return function se_RestoreObjectCommand(_x177, _x178) {
    return _ref89.apply(this, arguments);
  };
}()));
var se_SelectObjectContentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref90 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee90(input, context) {
    var _yield$context$endpoi179, hostname, _yield$context$endpoi180, protocol, port, basePath, headers, resolvedPath, query, body, bodyNode, node, _node, _node2, _node3, _node4, _node5;
    return _regeneratorRuntime().wrap(function _callee90$(_context90) {
      while (1) switch (_context90.prev = _context90.next) {
        case 0:
          _context90.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi179 = _context90.sent;
          hostname = _yield$context$endpoi179.hostname;
          _yield$context$endpoi180 = _yield$context$endpoi179.protocol;
          protocol = _yield$context$endpoi180 === void 0 ? "https" : _yield$context$endpoi180;
          port = _yield$context$endpoi179.port;
          basePath = _yield$context$endpoi179.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/xml",
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            select: [, ""],
            "select-type": [, "2"],
            "x-id": [, "SelectObjectContent"]
          });
          body = '<?xml version="1.0" encoding="UTF-8"?>';
          bodyNode = new __XmlNode("SelectObjectContentRequest");
          bodyNode.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
          if (input.Expression !== undefined) {
            node = __XmlNode.of("Expression", input.Expression).withName("Expression");
            bodyNode.addChildNode(node);
          }
          if (input.ExpressionType !== undefined) {
            _node = __XmlNode.of("ExpressionType", input.ExpressionType).withName("ExpressionType");
            bodyNode.addChildNode(_node);
          }
          if (input.InputSerialization !== undefined) {
            _node2 = se_InputSerialization(input.InputSerialization, context).withName("InputSerialization");
            bodyNode.addChildNode(_node2);
          }
          if (input.OutputSerialization !== undefined) {
            _node3 = se_OutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
            bodyNode.addChildNode(_node3);
          }
          if (input.RequestProgress !== undefined) {
            _node4 = se_RequestProgress(input.RequestProgress, context).withName("RequestProgress");
            bodyNode.addChildNode(_node4);
          }
          if (input.ScanRange !== undefined) {
            _node5 = se_ScanRange(input.ScanRange, context).withName("ScanRange");
            bodyNode.addChildNode(_node5);
          }
          body += bodyNode.toString();
          return _context90.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 24:
        case "end":
          return _context90.stop();
      }
    }, _callee90);
  }));
  return function se_SelectObjectContentCommand(_x179, _x180) {
    return _ref90.apply(this, arguments);
  };
}()));
var se_UploadPartCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref91 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee91(input, context) {
    var _yield$context$endpoi181, hostname, _yield$context$endpoi182, protocol, port, basePath, headers, resolvedPath, query, body, contents;
    return _regeneratorRuntime().wrap(function _callee91$(_context91) {
      while (1) switch (_context91.prev = _context91.next) {
        case 0:
          _context91.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi181 = _context91.sent;
          hostname = _yield$context$endpoi181.hostname;
          _yield$context$endpoi182 = _yield$context$endpoi181.protocol;
          protocol = _yield$context$endpoi182 === void 0 ? "https" : _yield$context$endpoi182;
          port = _yield$context$endpoi181.port;
          basePath = _yield$context$endpoi181.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "content-type": "application/octet-stream",
            "content-length": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ContentLength);
            }, function () {
              return input.ContentLength.toString();
            }],
            "content-md5": input.ContentMD5,
            "x-amz-sdk-checksum-algorithm": input.ChecksumAlgorithm,
            "x-amz-checksum-crc32": input.ChecksumCRC32,
            "x-amz-checksum-crc32c": input.ChecksumCRC32C,
            "x-amz-checksum-sha1": input.ChecksumSHA1,
            "x-amz-checksum-sha256": input.ChecksumSHA256,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "UploadPart"],
            partNumber: [__expectNonNull(input.PartNumber, "PartNumber") != null, function () {
              return input.PartNumber.toString();
            }],
            uploadId: [, __expectNonNull(input.UploadId, "UploadId")]
          });
          if (input.Body !== undefined) {
            body = input.Body;
          }
          if (input.Body !== undefined) {
            contents = input.Body;
            body = contents;
          }
          return _context91.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 16:
        case "end":
          return _context91.stop();
      }
    }, _callee91);
  }));
  return function se_UploadPartCommand(_x181, _x182) {
    return _ref91.apply(this, arguments);
  };
}()));
var se_UploadPartCopyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref92 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee92(input, context) {
    var _yield$context$endpoi183, hostname, _yield$context$endpoi184, protocol, port, basePath, headers, resolvedPath, query, body;
    return _regeneratorRuntime().wrap(function _callee92$(_context92) {
      while (1) switch (_context92.prev = _context92.next) {
        case 0:
          _context92.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi183 = _context92.sent;
          hostname = _yield$context$endpoi183.hostname;
          _yield$context$endpoi184 = _yield$context$endpoi183.protocol;
          protocol = _yield$context$endpoi184 === void 0 ? "https" : _yield$context$endpoi184;
          port = _yield$context$endpoi183.port;
          basePath = _yield$context$endpoi183.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, {
            "x-amz-copy-source": input.CopySource,
            "x-amz-copy-source-if-match": input.CopySourceIfMatch,
            "x-amz-copy-source-if-modified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.CopySourceIfModifiedSince);
            }, function () {
              return __dateToUtcString(input.CopySourceIfModifiedSince).toString();
            }],
            "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch,
            "x-amz-copy-source-if-unmodified-since": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince);
            }, function () {
              return __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString();
            }],
            "x-amz-copy-source-range": input.CopySourceRange,
            "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
            "x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm,
            "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey,
            "x-amz-copy-source-server-side-encryption-customer-key-md5": input.CopySourceSSECustomerKeyMD5,
            "x-amz-request-payer": input.RequestPayer,
            "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
            "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner
          });
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/{Key+}";
          resolvedPath = __resolvedPath(resolvedPath, input, "Bucket", function () {
            return input.Bucket;
          }, "{Bucket}", false);
          resolvedPath = __resolvedPath(resolvedPath, input, "Key", function () {
            return input.Key;
          }, "{Key+}", true);
          query = map({
            "x-id": [, "UploadPartCopy"],
            partNumber: [__expectNonNull(input.PartNumber, "PartNumber") != null, function () {
              return input.PartNumber.toString();
            }],
            uploadId: [, __expectNonNull(input.UploadId, "UploadId")]
          });
          return _context92.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: hostname,
            port: port,
            method: "PUT",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 14:
        case "end":
          return _context92.stop();
      }
    }, _callee92);
  }));
  return function se_UploadPartCopyCommand(_x183, _x184) {
    return _ref92.apply(this, arguments);
  };
}()));
var se_WriteGetObjectResponseCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref93 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee93(input, context) {
    var _yield$context$endpoi185, hostname, _yield$context$endpoi186, protocol, port, basePath, headers, resolvedPath, query, body, contents, _yield$context$endpoi187, resolvedHostname;
    return _regeneratorRuntime().wrap(function _callee93$(_context93) {
      while (1) switch (_context93.prev = _context93.next) {
        case 0:
          _context93.next = 2;
          return context.endpoint();
        case 2:
          _yield$context$endpoi185 = _context93.sent;
          hostname = _yield$context$endpoi185.hostname;
          _yield$context$endpoi186 = _yield$context$endpoi185.protocol;
          protocol = _yield$context$endpoi186 === void 0 ? "https" : _yield$context$endpoi186;
          port = _yield$context$endpoi185.port;
          basePath = _yield$context$endpoi185.path;
          headers = map({}, Aws_restXml_isSerializableHeaderValue, _objectSpread({
            "x-amz-content-sha256": "UNSIGNED-PAYLOAD",
            "content-type": "application/octet-stream",
            "x-amz-request-route": input.RequestRoute,
            "x-amz-request-token": input.RequestToken,
            "x-amz-fwd-status": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.StatusCode);
            }, function () {
              return input.StatusCode.toString();
            }],
            "x-amz-fwd-error-code": input.ErrorCode,
            "x-amz-fwd-error-message": input.ErrorMessage,
            "x-amz-fwd-header-accept-ranges": input.AcceptRanges,
            "x-amz-fwd-header-cache-control": input.CacheControl,
            "x-amz-fwd-header-content-disposition": input.ContentDisposition,
            "x-amz-fwd-header-content-encoding": input.ContentEncoding,
            "x-amz-fwd-header-content-language": input.ContentLanguage,
            "content-length": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ContentLength);
            }, function () {
              return input.ContentLength.toString();
            }],
            "x-amz-fwd-header-content-range": input.ContentRange,
            "x-amz-fwd-header-content-type": input.ContentType,
            "x-amz-fwd-header-x-amz-checksum-crc32": input.ChecksumCRC32,
            "x-amz-fwd-header-x-amz-checksum-crc32c": input.ChecksumCRC32C,
            "x-amz-fwd-header-x-amz-checksum-sha1": input.ChecksumSHA1,
            "x-amz-fwd-header-x-amz-checksum-sha256": input.ChecksumSHA256,
            "x-amz-fwd-header-x-amz-delete-marker": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.DeleteMarker);
            }, function () {
              return input.DeleteMarker.toString();
            }],
            "x-amz-fwd-header-etag": input.ETag,
            "x-amz-fwd-header-expires": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.Expires);
            }, function () {
              return __dateToUtcString(input.Expires).toString();
            }],
            "x-amz-fwd-header-x-amz-expiration": input.Expiration,
            "x-amz-fwd-header-last-modified": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.LastModified);
            }, function () {
              return __dateToUtcString(input.LastModified).toString();
            }],
            "x-amz-fwd-header-x-amz-missing-meta": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.MissingMeta);
            }, function () {
              return input.MissingMeta.toString();
            }],
            "x-amz-fwd-header-x-amz-object-lock-mode": input.ObjectLockMode,
            "x-amz-fwd-header-x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
            "x-amz-fwd-header-x-amz-object-lock-retain-until-date": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.ObjectLockRetainUntilDate);
            }, function () {
              return (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString();
            }],
            "x-amz-fwd-header-x-amz-mp-parts-count": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.PartsCount);
            }, function () {
              return input.PartsCount.toString();
            }],
            "x-amz-fwd-header-x-amz-replication-status": input.ReplicationStatus,
            "x-amz-fwd-header-x-amz-request-charged": input.RequestCharged,
            "x-amz-fwd-header-x-amz-restore": input.Restore,
            "x-amz-fwd-header-x-amz-server-side-encryption": input.ServerSideEncryption,
            "x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
            "x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
            "x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5": input.SSECustomerKeyMD5,
            "x-amz-fwd-header-x-amz-storage-class": input.StorageClass,
            "x-amz-fwd-header-x-amz-tagging-count": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.TagCount);
            }, function () {
              return input.TagCount.toString();
            }],
            "x-amz-fwd-header-x-amz-version-id": input.VersionId,
            "x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled": [function () {
              return Aws_restXml_isSerializableHeaderValue(input.BucketKeyEnabled);
            }, function () {
              return input.BucketKeyEnabled.toString();
            }]
          }, input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {
            acc["x-amz-meta-".concat(suffix.toLowerCase())] = input.Metadata[suffix];
            return acc;
          }, {})));
          resolvedPath = "".concat(basePath !== null && basePath !== void 0 && basePath.endsWith("/") ? basePath.slice(0, -1) : basePath || "") + "/WriteGetObjectResponse";
          query = map({
            "x-id": [, "WriteGetObjectResponse"]
          });
          if (input.Body !== undefined) {
            body = input.Body;
          }
          if (input.Body !== undefined) {
            contents = input.Body;
            body = contents;
          }
          _context93.next = 15;
          return context.endpoint();
        case 15:
          _yield$context$endpoi187 = _context93.sent;
          resolvedHostname = _yield$context$endpoi187.hostname;
          if (!(context.disableHostPrefix !== true)) {
            _context93.next = 24;
            break;
          }
          resolvedHostname = "{RequestRoute}." + resolvedHostname;
          if (!(input.RequestRoute === undefined)) {
            _context93.next = 21;
            break;
          }
          throw new Error("Empty value provided for input host prefix: RequestRoute.");
        case 21:
          resolvedHostname = resolvedHostname.replace("{RequestRoute}", input.RequestRoute);
          if (__isValidHostname(resolvedHostname)) {
            _context93.next = 24;
            break;
          }
          throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
        case 24:
          return _context93.abrupt("return", new __HttpRequest({
            protocol: protocol,
            hostname: resolvedHostname,
            port: port,
            method: "POST",
            headers: headers,
            path: resolvedPath,
            query: query,
            body: body
          }));
        case 25:
        case "end":
          return _context93.stop();
      }
    }, _callee93);
  }));
  return function se_WriteGetObjectResponseCommand(_x185, _x186) {
    return _ref93.apply(this, arguments);
  };
}()));
var de_AbortMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref94 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee94(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee94$(_context94) {
      while (1) switch (_context94.prev = _context94.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context94.next = 2;
            break;
          }
          return _context94.abrupt("return", de_AbortMultipartUploadCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context94.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context94.abrupt("return", contents);
        case 6:
        case "end":
          return _context94.stop();
      }
    }, _callee94);
  }));
  return function de_AbortMultipartUploadCommand(_x187, _x188) {
    return _ref94.apply(this, arguments);
  };
}()));
var de_AbortMultipartUploadCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref95 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee95(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee95$(_context95) {
      while (1) switch (_context95.prev = _context95.next) {
        case 0:
          _context95.t0 = _objectSpread;
          _context95.t1 = _objectSpread({}, output);
          _context95.t2 = {};
          _context95.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context95.t3 = _context95.sent;
          _context95.t4 = {
            body: _context95.t3
          };
          parsedOutput = (0, _context95.t0)(_context95.t1, _context95.t2, _context95.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context95.t5 = errorCode;
          _context95.next = _context95.t5 === "NoSuchUpload" ? 12 : _context95.t5 === "com.amazonaws.s3#NoSuchUpload" ? 12 : 15;
          break;
        case 12:
          _context95.next = 14;
          return de_NoSuchUploadRes(parsedOutput, context);
        case 14:
          throw _context95.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context95.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context95.stop();
      }
    }, _callee95);
  }));
  return function de_AbortMultipartUploadCommandError(_x189, _x190) {
    return _ref95.apply(this, arguments);
  };
}()));
var de_CompleteMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref96 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee96(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee96$(_context96) {
      while (1) switch (_context96.prev = _context96.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context96.next = 2;
            break;
          }
          return _context96.abrupt("return", de_CompleteMultipartUploadCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            Expiration: [, output.headers["x-amz-expiration"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            VersionId: [, output.headers["x-amz-version-id"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context96.t0 = __expectNonNull;
          _context96.t1 = __expectObject;
          _context96.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context96.t2 = _context96.sent;
          _context96.t3 = (0, _context96.t1)(_context96.t2);
          data = (0, _context96.t0)(_context96.t3, "body");
          if (data["Bucket"] !== undefined) {
            contents.Bucket = __expectString(data["Bucket"]);
          }
          if (data["ChecksumCRC32"] !== undefined) {
            contents.ChecksumCRC32 = __expectString(data["ChecksumCRC32"]);
          }
          if (data["ChecksumCRC32C"] !== undefined) {
            contents.ChecksumCRC32C = __expectString(data["ChecksumCRC32C"]);
          }
          if (data["ChecksumSHA1"] !== undefined) {
            contents.ChecksumSHA1 = __expectString(data["ChecksumSHA1"]);
          }
          if (data["ChecksumSHA256"] !== undefined) {
            contents.ChecksumSHA256 = __expectString(data["ChecksumSHA256"]);
          }
          if (data["ETag"] !== undefined) {
            contents.ETag = __expectString(data["ETag"]);
          }
          if (data["Key"] !== undefined) {
            contents.Key = __expectString(data["Key"]);
          }
          if (data["Location"] !== undefined) {
            contents.Location = __expectString(data["Location"]);
          }
          return _context96.abrupt("return", contents);
        case 19:
        case "end":
          return _context96.stop();
      }
    }, _callee96);
  }));
  return function de_CompleteMultipartUploadCommand(_x191, _x192) {
    return _ref96.apply(this, arguments);
  };
}()));
var de_CompleteMultipartUploadCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref97 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee97(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee97$(_context97) {
      while (1) switch (_context97.prev = _context97.next) {
        case 0:
          _context97.t0 = _objectSpread;
          _context97.t1 = _objectSpread({}, output);
          _context97.t2 = {};
          _context97.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context97.t3 = _context97.sent;
          _context97.t4 = {
            body: _context97.t3
          };
          parsedOutput = (0, _context97.t0)(_context97.t1, _context97.t2, _context97.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context97.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context97.stop();
      }
    }, _callee97);
  }));
  return function de_CompleteMultipartUploadCommandError(_x193, _x194) {
    return _ref97.apply(this, arguments);
  };
}()));
var de_CopyObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref98 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee98(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee98$(_context98) {
      while (1) switch (_context98.prev = _context98.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context98.next = 2;
            break;
          }
          return _context98.abrupt("return", de_CopyObjectCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            Expiration: [, output.headers["x-amz-expiration"]],
            CopySourceVersionId: [, output.headers["x-amz-copy-source-version-id"]],
            VersionId: [, output.headers["x-amz-version-id"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            SSEKMSEncryptionContext: [, output.headers["x-amz-server-side-encryption-context"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context98.t0 = __expectObject;
          _context98.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context98.t1 = _context98.sent;
          data = (0, _context98.t0)(_context98.t1);
          contents.CopyObjectResult = de_CopyObjectResult(data, context);
          return _context98.abrupt("return", contents);
        case 10:
        case "end":
          return _context98.stop();
      }
    }, _callee98);
  }));
  return function de_CopyObjectCommand(_x195, _x196) {
    return _ref98.apply(this, arguments);
  };
}()));
var de_CopyObjectCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref99 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee99(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee99$(_context99) {
      while (1) switch (_context99.prev = _context99.next) {
        case 0:
          _context99.t0 = _objectSpread;
          _context99.t1 = _objectSpread({}, output);
          _context99.t2 = {};
          _context99.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context99.t3 = _context99.sent;
          _context99.t4 = {
            body: _context99.t3
          };
          parsedOutput = (0, _context99.t0)(_context99.t1, _context99.t2, _context99.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context99.t5 = errorCode;
          _context99.next = _context99.t5 === "ObjectNotInActiveTierError" ? 12 : _context99.t5 === "com.amazonaws.s3#ObjectNotInActiveTierError" ? 12 : 15;
          break;
        case 12:
          _context99.next = 14;
          return de_ObjectNotInActiveTierErrorRes(parsedOutput, context);
        case 14:
          throw _context99.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context99.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context99.stop();
      }
    }, _callee99);
  }));
  return function de_CopyObjectCommandError(_x197, _x198) {
    return _ref99.apply(this, arguments);
  };
}()));
var de_CreateBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref100 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee100(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee100$(_context100) {
      while (1) switch (_context100.prev = _context100.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context100.next = 2;
            break;
          }
          return _context100.abrupt("return", de_CreateBucketCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            Location: [, output.headers["location"]]
          });
          _context100.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context100.abrupt("return", contents);
        case 6:
        case "end":
          return _context100.stop();
      }
    }, _callee100);
  }));
  return function de_CreateBucketCommand(_x199, _x200) {
    return _ref100.apply(this, arguments);
  };
}()));
var de_CreateBucketCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref101 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee101(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee101$(_context101) {
      while (1) switch (_context101.prev = _context101.next) {
        case 0:
          _context101.t0 = _objectSpread;
          _context101.t1 = _objectSpread({}, output);
          _context101.t2 = {};
          _context101.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context101.t3 = _context101.sent;
          _context101.t4 = {
            body: _context101.t3
          };
          parsedOutput = (0, _context101.t0)(_context101.t1, _context101.t2, _context101.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context101.t5 = errorCode;
          _context101.next = _context101.t5 === "BucketAlreadyExists" ? 12 : _context101.t5 === "com.amazonaws.s3#BucketAlreadyExists" ? 12 : _context101.t5 === "BucketAlreadyOwnedByYou" ? 15 : _context101.t5 === "com.amazonaws.s3#BucketAlreadyOwnedByYou" ? 15 : 18;
          break;
        case 12:
          _context101.next = 14;
          return de_BucketAlreadyExistsRes(parsedOutput, context);
        case 14:
          throw _context101.sent;
        case 15:
          _context101.next = 17;
          return de_BucketAlreadyOwnedByYouRes(parsedOutput, context);
        case 17:
          throw _context101.sent;
        case 18:
          parsedBody = parsedOutput.body;
          return _context101.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 20:
        case "end":
          return _context101.stop();
      }
    }, _callee101);
  }));
  return function de_CreateBucketCommandError(_x201, _x202) {
    return _ref101.apply(this, arguments);
  };
}()));
var de_CreateMultipartUploadCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref102 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee102(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee102$(_context102) {
      while (1) switch (_context102.prev = _context102.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context102.next = 2;
            break;
          }
          return _context102.abrupt("return", de_CreateMultipartUploadCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            AbortDate: [function () {
              return void 0 !== output.headers["x-amz-abort-date"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["x-amz-abort-date"]));
            }],
            AbortRuleId: [, output.headers["x-amz-abort-rule-id"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            SSEKMSEncryptionContext: [, output.headers["x-amz-server-side-encryption-context"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]],
            ChecksumAlgorithm: [, output.headers["x-amz-checksum-algorithm"]]
          });
          _context102.t0 = __expectNonNull;
          _context102.t1 = __expectObject;
          _context102.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context102.t2 = _context102.sent;
          _context102.t3 = (0, _context102.t1)(_context102.t2);
          data = (0, _context102.t0)(_context102.t3, "body");
          if (data["Bucket"] !== undefined) {
            contents.Bucket = __expectString(data["Bucket"]);
          }
          if (data["Key"] !== undefined) {
            contents.Key = __expectString(data["Key"]);
          }
          if (data["UploadId"] !== undefined) {
            contents.UploadId = __expectString(data["UploadId"]);
          }
          return _context102.abrupt("return", contents);
        case 14:
        case "end":
          return _context102.stop();
      }
    }, _callee102);
  }));
  return function de_CreateMultipartUploadCommand(_x203, _x204) {
    return _ref102.apply(this, arguments);
  };
}()));
var de_CreateMultipartUploadCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref103 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee103(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee103$(_context103) {
      while (1) switch (_context103.prev = _context103.next) {
        case 0:
          _context103.t0 = _objectSpread;
          _context103.t1 = _objectSpread({}, output);
          _context103.t2 = {};
          _context103.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context103.t3 = _context103.sent;
          _context103.t4 = {
            body: _context103.t3
          };
          parsedOutput = (0, _context103.t0)(_context103.t1, _context103.t2, _context103.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context103.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context103.stop();
      }
    }, _callee103);
  }));
  return function de_CreateMultipartUploadCommandError(_x205, _x206) {
    return _ref103.apply(this, arguments);
  };
}()));
var de_DeleteBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref104 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee104(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee104$(_context104) {
      while (1) switch (_context104.prev = _context104.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context104.next = 2;
            break;
          }
          return _context104.abrupt("return", de_DeleteBucketCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context104.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context104.abrupt("return", contents);
        case 6:
        case "end":
          return _context104.stop();
      }
    }, _callee104);
  }));
  return function de_DeleteBucketCommand(_x207, _x208) {
    return _ref104.apply(this, arguments);
  };
}()));
var de_DeleteBucketCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref105 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee105(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee105$(_context105) {
      while (1) switch (_context105.prev = _context105.next) {
        case 0:
          _context105.t0 = _objectSpread;
          _context105.t1 = _objectSpread({}, output);
          _context105.t2 = {};
          _context105.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context105.t3 = _context105.sent;
          _context105.t4 = {
            body: _context105.t3
          };
          parsedOutput = (0, _context105.t0)(_context105.t1, _context105.t2, _context105.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context105.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context105.stop();
      }
    }, _callee105);
  }));
  return function de_DeleteBucketCommandError(_x209, _x210) {
    return _ref105.apply(this, arguments);
  };
}()));
var de_DeleteBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref106 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee106(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee106$(_context106) {
      while (1) switch (_context106.prev = _context106.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context106.next = 2;
            break;
          }
          return _context106.abrupt("return", de_DeleteBucketAnalyticsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context106.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context106.abrupt("return", contents);
        case 6:
        case "end":
          return _context106.stop();
      }
    }, _callee106);
  }));
  return function de_DeleteBucketAnalyticsConfigurationCommand(_x211, _x212) {
    return _ref106.apply(this, arguments);
  };
}()));
var de_DeleteBucketAnalyticsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref107 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee107(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee107$(_context107) {
      while (1) switch (_context107.prev = _context107.next) {
        case 0:
          _context107.t0 = _objectSpread;
          _context107.t1 = _objectSpread({}, output);
          _context107.t2 = {};
          _context107.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context107.t3 = _context107.sent;
          _context107.t4 = {
            body: _context107.t3
          };
          parsedOutput = (0, _context107.t0)(_context107.t1, _context107.t2, _context107.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context107.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context107.stop();
      }
    }, _callee107);
  }));
  return function de_DeleteBucketAnalyticsConfigurationCommandError(_x213, _x214) {
    return _ref107.apply(this, arguments);
  };
}()));
var de_DeleteBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref108 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee108(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee108$(_context108) {
      while (1) switch (_context108.prev = _context108.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context108.next = 2;
            break;
          }
          return _context108.abrupt("return", de_DeleteBucketCorsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context108.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context108.abrupt("return", contents);
        case 6:
        case "end":
          return _context108.stop();
      }
    }, _callee108);
  }));
  return function de_DeleteBucketCorsCommand(_x215, _x216) {
    return _ref108.apply(this, arguments);
  };
}()));
var de_DeleteBucketCorsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref109 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee109(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee109$(_context109) {
      while (1) switch (_context109.prev = _context109.next) {
        case 0:
          _context109.t0 = _objectSpread;
          _context109.t1 = _objectSpread({}, output);
          _context109.t2 = {};
          _context109.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context109.t3 = _context109.sent;
          _context109.t4 = {
            body: _context109.t3
          };
          parsedOutput = (0, _context109.t0)(_context109.t1, _context109.t2, _context109.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context109.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context109.stop();
      }
    }, _callee109);
  }));
  return function de_DeleteBucketCorsCommandError(_x217, _x218) {
    return _ref109.apply(this, arguments);
  };
}()));
var de_DeleteBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref110 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee110(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee110$(_context110) {
      while (1) switch (_context110.prev = _context110.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context110.next = 2;
            break;
          }
          return _context110.abrupt("return", de_DeleteBucketEncryptionCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context110.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context110.abrupt("return", contents);
        case 6:
        case "end":
          return _context110.stop();
      }
    }, _callee110);
  }));
  return function de_DeleteBucketEncryptionCommand(_x219, _x220) {
    return _ref110.apply(this, arguments);
  };
}()));
var de_DeleteBucketEncryptionCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref111 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee111(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee111$(_context111) {
      while (1) switch (_context111.prev = _context111.next) {
        case 0:
          _context111.t0 = _objectSpread;
          _context111.t1 = _objectSpread({}, output);
          _context111.t2 = {};
          _context111.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context111.t3 = _context111.sent;
          _context111.t4 = {
            body: _context111.t3
          };
          parsedOutput = (0, _context111.t0)(_context111.t1, _context111.t2, _context111.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context111.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context111.stop();
      }
    }, _callee111);
  }));
  return function de_DeleteBucketEncryptionCommandError(_x221, _x222) {
    return _ref111.apply(this, arguments);
  };
}()));
var de_DeleteBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref112 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee112(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee112$(_context112) {
      while (1) switch (_context112.prev = _context112.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context112.next = 2;
            break;
          }
          return _context112.abrupt("return", de_DeleteBucketIntelligentTieringConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context112.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context112.abrupt("return", contents);
        case 6:
        case "end":
          return _context112.stop();
      }
    }, _callee112);
  }));
  return function de_DeleteBucketIntelligentTieringConfigurationCommand(_x223, _x224) {
    return _ref112.apply(this, arguments);
  };
}()));
var de_DeleteBucketIntelligentTieringConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref113 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee113(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee113$(_context113) {
      while (1) switch (_context113.prev = _context113.next) {
        case 0:
          _context113.t0 = _objectSpread;
          _context113.t1 = _objectSpread({}, output);
          _context113.t2 = {};
          _context113.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context113.t3 = _context113.sent;
          _context113.t4 = {
            body: _context113.t3
          };
          parsedOutput = (0, _context113.t0)(_context113.t1, _context113.t2, _context113.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context113.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context113.stop();
      }
    }, _callee113);
  }));
  return function de_DeleteBucketIntelligentTieringConfigurationCommandError(_x225, _x226) {
    return _ref113.apply(this, arguments);
  };
}()));
var de_DeleteBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref114 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee114(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee114$(_context114) {
      while (1) switch (_context114.prev = _context114.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context114.next = 2;
            break;
          }
          return _context114.abrupt("return", de_DeleteBucketInventoryConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context114.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context114.abrupt("return", contents);
        case 6:
        case "end":
          return _context114.stop();
      }
    }, _callee114);
  }));
  return function de_DeleteBucketInventoryConfigurationCommand(_x227, _x228) {
    return _ref114.apply(this, arguments);
  };
}()));
var de_DeleteBucketInventoryConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref115 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee115(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee115$(_context115) {
      while (1) switch (_context115.prev = _context115.next) {
        case 0:
          _context115.t0 = _objectSpread;
          _context115.t1 = _objectSpread({}, output);
          _context115.t2 = {};
          _context115.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context115.t3 = _context115.sent;
          _context115.t4 = {
            body: _context115.t3
          };
          parsedOutput = (0, _context115.t0)(_context115.t1, _context115.t2, _context115.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context115.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context115.stop();
      }
    }, _callee115);
  }));
  return function de_DeleteBucketInventoryConfigurationCommandError(_x229, _x230) {
    return _ref115.apply(this, arguments);
  };
}()));
var de_DeleteBucketLifecycleCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref116 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee116(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee116$(_context116) {
      while (1) switch (_context116.prev = _context116.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context116.next = 2;
            break;
          }
          return _context116.abrupt("return", de_DeleteBucketLifecycleCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context116.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context116.abrupt("return", contents);
        case 6:
        case "end":
          return _context116.stop();
      }
    }, _callee116);
  }));
  return function de_DeleteBucketLifecycleCommand(_x231, _x232) {
    return _ref116.apply(this, arguments);
  };
}()));
var de_DeleteBucketLifecycleCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref117 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee117(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee117$(_context117) {
      while (1) switch (_context117.prev = _context117.next) {
        case 0:
          _context117.t0 = _objectSpread;
          _context117.t1 = _objectSpread({}, output);
          _context117.t2 = {};
          _context117.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context117.t3 = _context117.sent;
          _context117.t4 = {
            body: _context117.t3
          };
          parsedOutput = (0, _context117.t0)(_context117.t1, _context117.t2, _context117.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context117.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context117.stop();
      }
    }, _callee117);
  }));
  return function de_DeleteBucketLifecycleCommandError(_x233, _x234) {
    return _ref117.apply(this, arguments);
  };
}()));
var de_DeleteBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref118 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee118(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee118$(_context118) {
      while (1) switch (_context118.prev = _context118.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context118.next = 2;
            break;
          }
          return _context118.abrupt("return", de_DeleteBucketMetricsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context118.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context118.abrupt("return", contents);
        case 6:
        case "end":
          return _context118.stop();
      }
    }, _callee118);
  }));
  return function de_DeleteBucketMetricsConfigurationCommand(_x235, _x236) {
    return _ref118.apply(this, arguments);
  };
}()));
var de_DeleteBucketMetricsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref119 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee119(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee119$(_context119) {
      while (1) switch (_context119.prev = _context119.next) {
        case 0:
          _context119.t0 = _objectSpread;
          _context119.t1 = _objectSpread({}, output);
          _context119.t2 = {};
          _context119.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context119.t3 = _context119.sent;
          _context119.t4 = {
            body: _context119.t3
          };
          parsedOutput = (0, _context119.t0)(_context119.t1, _context119.t2, _context119.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context119.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context119.stop();
      }
    }, _callee119);
  }));
  return function de_DeleteBucketMetricsConfigurationCommandError(_x237, _x238) {
    return _ref119.apply(this, arguments);
  };
}()));
var de_DeleteBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref120 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee120(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee120$(_context120) {
      while (1) switch (_context120.prev = _context120.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context120.next = 2;
            break;
          }
          return _context120.abrupt("return", de_DeleteBucketOwnershipControlsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context120.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context120.abrupt("return", contents);
        case 6:
        case "end":
          return _context120.stop();
      }
    }, _callee120);
  }));
  return function de_DeleteBucketOwnershipControlsCommand(_x239, _x240) {
    return _ref120.apply(this, arguments);
  };
}()));
var de_DeleteBucketOwnershipControlsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref121 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee121(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee121$(_context121) {
      while (1) switch (_context121.prev = _context121.next) {
        case 0:
          _context121.t0 = _objectSpread;
          _context121.t1 = _objectSpread({}, output);
          _context121.t2 = {};
          _context121.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context121.t3 = _context121.sent;
          _context121.t4 = {
            body: _context121.t3
          };
          parsedOutput = (0, _context121.t0)(_context121.t1, _context121.t2, _context121.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context121.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context121.stop();
      }
    }, _callee121);
  }));
  return function de_DeleteBucketOwnershipControlsCommandError(_x241, _x242) {
    return _ref121.apply(this, arguments);
  };
}()));
var de_DeleteBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref122 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee122(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee122$(_context122) {
      while (1) switch (_context122.prev = _context122.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context122.next = 2;
            break;
          }
          return _context122.abrupt("return", de_DeleteBucketPolicyCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context122.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context122.abrupt("return", contents);
        case 6:
        case "end":
          return _context122.stop();
      }
    }, _callee122);
  }));
  return function de_DeleteBucketPolicyCommand(_x243, _x244) {
    return _ref122.apply(this, arguments);
  };
}()));
var de_DeleteBucketPolicyCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref123 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee123(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee123$(_context123) {
      while (1) switch (_context123.prev = _context123.next) {
        case 0:
          _context123.t0 = _objectSpread;
          _context123.t1 = _objectSpread({}, output);
          _context123.t2 = {};
          _context123.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context123.t3 = _context123.sent;
          _context123.t4 = {
            body: _context123.t3
          };
          parsedOutput = (0, _context123.t0)(_context123.t1, _context123.t2, _context123.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context123.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context123.stop();
      }
    }, _callee123);
  }));
  return function de_DeleteBucketPolicyCommandError(_x245, _x246) {
    return _ref123.apply(this, arguments);
  };
}()));
var de_DeleteBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref124 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee124(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee124$(_context124) {
      while (1) switch (_context124.prev = _context124.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context124.next = 2;
            break;
          }
          return _context124.abrupt("return", de_DeleteBucketReplicationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context124.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context124.abrupt("return", contents);
        case 6:
        case "end":
          return _context124.stop();
      }
    }, _callee124);
  }));
  return function de_DeleteBucketReplicationCommand(_x247, _x248) {
    return _ref124.apply(this, arguments);
  };
}()));
var de_DeleteBucketReplicationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref125 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee125(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee125$(_context125) {
      while (1) switch (_context125.prev = _context125.next) {
        case 0:
          _context125.t0 = _objectSpread;
          _context125.t1 = _objectSpread({}, output);
          _context125.t2 = {};
          _context125.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context125.t3 = _context125.sent;
          _context125.t4 = {
            body: _context125.t3
          };
          parsedOutput = (0, _context125.t0)(_context125.t1, _context125.t2, _context125.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context125.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context125.stop();
      }
    }, _callee125);
  }));
  return function de_DeleteBucketReplicationCommandError(_x249, _x250) {
    return _ref125.apply(this, arguments);
  };
}()));
var de_DeleteBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref126 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee126(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee126$(_context126) {
      while (1) switch (_context126.prev = _context126.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context126.next = 2;
            break;
          }
          return _context126.abrupt("return", de_DeleteBucketTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context126.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context126.abrupt("return", contents);
        case 6:
        case "end":
          return _context126.stop();
      }
    }, _callee126);
  }));
  return function de_DeleteBucketTaggingCommand(_x251, _x252) {
    return _ref126.apply(this, arguments);
  };
}()));
var de_DeleteBucketTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref127 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee127(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee127$(_context127) {
      while (1) switch (_context127.prev = _context127.next) {
        case 0:
          _context127.t0 = _objectSpread;
          _context127.t1 = _objectSpread({}, output);
          _context127.t2 = {};
          _context127.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context127.t3 = _context127.sent;
          _context127.t4 = {
            body: _context127.t3
          };
          parsedOutput = (0, _context127.t0)(_context127.t1, _context127.t2, _context127.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context127.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context127.stop();
      }
    }, _callee127);
  }));
  return function de_DeleteBucketTaggingCommandError(_x253, _x254) {
    return _ref127.apply(this, arguments);
  };
}()));
var de_DeleteBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref128 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee128(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee128$(_context128) {
      while (1) switch (_context128.prev = _context128.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context128.next = 2;
            break;
          }
          return _context128.abrupt("return", de_DeleteBucketWebsiteCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context128.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context128.abrupt("return", contents);
        case 6:
        case "end":
          return _context128.stop();
      }
    }, _callee128);
  }));
  return function de_DeleteBucketWebsiteCommand(_x255, _x256) {
    return _ref128.apply(this, arguments);
  };
}()));
var de_DeleteBucketWebsiteCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref129 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee129(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee129$(_context129) {
      while (1) switch (_context129.prev = _context129.next) {
        case 0:
          _context129.t0 = _objectSpread;
          _context129.t1 = _objectSpread({}, output);
          _context129.t2 = {};
          _context129.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context129.t3 = _context129.sent;
          _context129.t4 = {
            body: _context129.t3
          };
          parsedOutput = (0, _context129.t0)(_context129.t1, _context129.t2, _context129.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context129.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context129.stop();
      }
    }, _callee129);
  }));
  return function de_DeleteBucketWebsiteCommandError(_x257, _x258) {
    return _ref129.apply(this, arguments);
  };
}()));
var de_DeleteObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref130 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee130(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee130$(_context130) {
      while (1) switch (_context130.prev = _context130.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context130.next = 2;
            break;
          }
          return _context130.abrupt("return", de_DeleteObjectCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            DeleteMarker: [function () {
              return void 0 !== output.headers["x-amz-delete-marker"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-delete-marker"]);
            }],
            VersionId: [, output.headers["x-amz-version-id"]],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context130.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context130.abrupt("return", contents);
        case 6:
        case "end":
          return _context130.stop();
      }
    }, _callee130);
  }));
  return function de_DeleteObjectCommand(_x259, _x260) {
    return _ref130.apply(this, arguments);
  };
}()));
var de_DeleteObjectCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref131 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee131(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee131$(_context131) {
      while (1) switch (_context131.prev = _context131.next) {
        case 0:
          _context131.t0 = _objectSpread;
          _context131.t1 = _objectSpread({}, output);
          _context131.t2 = {};
          _context131.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context131.t3 = _context131.sent;
          _context131.t4 = {
            body: _context131.t3
          };
          parsedOutput = (0, _context131.t0)(_context131.t1, _context131.t2, _context131.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context131.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context131.stop();
      }
    }, _callee131);
  }));
  return function de_DeleteObjectCommandError(_x261, _x262) {
    return _ref131.apply(this, arguments);
  };
}()));
var de_DeleteObjectsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref132 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee132(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee132$(_context132) {
      while (1) switch (_context132.prev = _context132.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context132.next = 2;
            break;
          }
          return _context132.abrupt("return", de_DeleteObjectsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context132.t0 = __expectNonNull;
          _context132.t1 = __expectObject;
          _context132.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context132.t2 = _context132.sent;
          _context132.t3 = (0, _context132.t1)(_context132.t2);
          data = (0, _context132.t0)(_context132.t3, "body");
          if (data.Deleted === "") {
            contents.Deleted = [];
          } else if (data["Deleted"] !== undefined) {
            contents.Deleted = de_DeletedObjects(__getArrayIfSingleItem(data["Deleted"]), context);
          }
          if (data.Error === "") {
            contents.Errors = [];
          } else if (data["Error"] !== undefined) {
            contents.Errors = de_Errors(__getArrayIfSingleItem(data["Error"]), context);
          }
          return _context132.abrupt("return", contents);
        case 13:
        case "end":
          return _context132.stop();
      }
    }, _callee132);
  }));
  return function de_DeleteObjectsCommand(_x263, _x264) {
    return _ref132.apply(this, arguments);
  };
}()));
var de_DeleteObjectsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref133 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee133(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee133$(_context133) {
      while (1) switch (_context133.prev = _context133.next) {
        case 0:
          _context133.t0 = _objectSpread;
          _context133.t1 = _objectSpread({}, output);
          _context133.t2 = {};
          _context133.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context133.t3 = _context133.sent;
          _context133.t4 = {
            body: _context133.t3
          };
          parsedOutput = (0, _context133.t0)(_context133.t1, _context133.t2, _context133.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context133.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context133.stop();
      }
    }, _callee133);
  }));
  return function de_DeleteObjectsCommandError(_x265, _x266) {
    return _ref133.apply(this, arguments);
  };
}()));
var de_DeleteObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref134 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee134(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee134$(_context134) {
      while (1) switch (_context134.prev = _context134.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context134.next = 2;
            break;
          }
          return _context134.abrupt("return", de_DeleteObjectTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            VersionId: [, output.headers["x-amz-version-id"]]
          });
          _context134.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context134.abrupt("return", contents);
        case 6:
        case "end":
          return _context134.stop();
      }
    }, _callee134);
  }));
  return function de_DeleteObjectTaggingCommand(_x267, _x268) {
    return _ref134.apply(this, arguments);
  };
}()));
var de_DeleteObjectTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref135 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee135(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee135$(_context135) {
      while (1) switch (_context135.prev = _context135.next) {
        case 0:
          _context135.t0 = _objectSpread;
          _context135.t1 = _objectSpread({}, output);
          _context135.t2 = {};
          _context135.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context135.t3 = _context135.sent;
          _context135.t4 = {
            body: _context135.t3
          };
          parsedOutput = (0, _context135.t0)(_context135.t1, _context135.t2, _context135.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context135.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context135.stop();
      }
    }, _callee135);
  }));
  return function de_DeleteObjectTaggingCommandError(_x269, _x270) {
    return _ref135.apply(this, arguments);
  };
}()));
var de_DeletePublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref136 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee136(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee136$(_context136) {
      while (1) switch (_context136.prev = _context136.next) {
        case 0:
          if (!(output.statusCode !== 204 && output.statusCode >= 300)) {
            _context136.next = 2;
            break;
          }
          return _context136.abrupt("return", de_DeletePublicAccessBlockCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context136.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context136.abrupt("return", contents);
        case 6:
        case "end":
          return _context136.stop();
      }
    }, _callee136);
  }));
  return function de_DeletePublicAccessBlockCommand(_x271, _x272) {
    return _ref136.apply(this, arguments);
  };
}()));
var de_DeletePublicAccessBlockCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref137 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee137(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee137$(_context137) {
      while (1) switch (_context137.prev = _context137.next) {
        case 0:
          _context137.t0 = _objectSpread;
          _context137.t1 = _objectSpread({}, output);
          _context137.t2 = {};
          _context137.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context137.t3 = _context137.sent;
          _context137.t4 = {
            body: _context137.t3
          };
          parsedOutput = (0, _context137.t0)(_context137.t1, _context137.t2, _context137.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context137.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context137.stop();
      }
    }, _callee137);
  }));
  return function de_DeletePublicAccessBlockCommandError(_x273, _x274) {
    return _ref137.apply(this, arguments);
  };
}()));
var de_GetBucketAccelerateConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref138 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee138(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee138$(_context138) {
      while (1) switch (_context138.prev = _context138.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context138.next = 2;
            break;
          }
          return _context138.abrupt("return", de_GetBucketAccelerateConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context138.t0 = __expectNonNull;
          _context138.t1 = __expectObject;
          _context138.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context138.t2 = _context138.sent;
          _context138.t3 = (0, _context138.t1)(_context138.t2);
          data = (0, _context138.t0)(_context138.t3, "body");
          if (data["Status"] !== undefined) {
            contents.Status = __expectString(data["Status"]);
          }
          return _context138.abrupt("return", contents);
        case 12:
        case "end":
          return _context138.stop();
      }
    }, _callee138);
  }));
  return function de_GetBucketAccelerateConfigurationCommand(_x275, _x276) {
    return _ref138.apply(this, arguments);
  };
}()));
var de_GetBucketAccelerateConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref139 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee139(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee139$(_context139) {
      while (1) switch (_context139.prev = _context139.next) {
        case 0:
          _context139.t0 = _objectSpread;
          _context139.t1 = _objectSpread({}, output);
          _context139.t2 = {};
          _context139.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context139.t3 = _context139.sent;
          _context139.t4 = {
            body: _context139.t3
          };
          parsedOutput = (0, _context139.t0)(_context139.t1, _context139.t2, _context139.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context139.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context139.stop();
      }
    }, _callee139);
  }));
  return function de_GetBucketAccelerateConfigurationCommandError(_x277, _x278) {
    return _ref139.apply(this, arguments);
  };
}()));
var de_GetBucketAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref140 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee140(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee140$(_context140) {
      while (1) switch (_context140.prev = _context140.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context140.next = 2;
            break;
          }
          return _context140.abrupt("return", de_GetBucketAclCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context140.t0 = __expectNonNull;
          _context140.t1 = __expectObject;
          _context140.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context140.t2 = _context140.sent;
          _context140.t3 = (0, _context140.t1)(_context140.t2);
          data = (0, _context140.t0)(_context140.t3, "body");
          if (data.AccessControlList === "") {
            contents.Grants = [];
          } else if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
            contents.Grants = de_Grants(__getArrayIfSingleItem(data["AccessControlList"]["Grant"]), context);
          }
          if (data["Owner"] !== undefined) {
            contents.Owner = de_Owner(data["Owner"], context);
          }
          return _context140.abrupt("return", contents);
        case 13:
        case "end":
          return _context140.stop();
      }
    }, _callee140);
  }));
  return function de_GetBucketAclCommand(_x279, _x280) {
    return _ref140.apply(this, arguments);
  };
}()));
var de_GetBucketAclCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref141 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee141(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee141$(_context141) {
      while (1) switch (_context141.prev = _context141.next) {
        case 0:
          _context141.t0 = _objectSpread;
          _context141.t1 = _objectSpread({}, output);
          _context141.t2 = {};
          _context141.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context141.t3 = _context141.sent;
          _context141.t4 = {
            body: _context141.t3
          };
          parsedOutput = (0, _context141.t0)(_context141.t1, _context141.t2, _context141.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context141.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context141.stop();
      }
    }, _callee141);
  }));
  return function de_GetBucketAclCommandError(_x281, _x282) {
    return _ref141.apply(this, arguments);
  };
}()));
var de_GetBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref142 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee142(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee142$(_context142) {
      while (1) switch (_context142.prev = _context142.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context142.next = 2;
            break;
          }
          return _context142.abrupt("return", de_GetBucketAnalyticsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context142.t0 = __expectObject;
          _context142.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context142.t1 = _context142.sent;
          data = (0, _context142.t0)(_context142.t1);
          contents.AnalyticsConfiguration = de_AnalyticsConfiguration(data, context);
          return _context142.abrupt("return", contents);
        case 10:
        case "end":
          return _context142.stop();
      }
    }, _callee142);
  }));
  return function de_GetBucketAnalyticsConfigurationCommand(_x283, _x284) {
    return _ref142.apply(this, arguments);
  };
}()));
var de_GetBucketAnalyticsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref143 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee143(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee143$(_context143) {
      while (1) switch (_context143.prev = _context143.next) {
        case 0:
          _context143.t0 = _objectSpread;
          _context143.t1 = _objectSpread({}, output);
          _context143.t2 = {};
          _context143.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context143.t3 = _context143.sent;
          _context143.t4 = {
            body: _context143.t3
          };
          parsedOutput = (0, _context143.t0)(_context143.t1, _context143.t2, _context143.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context143.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context143.stop();
      }
    }, _callee143);
  }));
  return function de_GetBucketAnalyticsConfigurationCommandError(_x285, _x286) {
    return _ref143.apply(this, arguments);
  };
}()));
var de_GetBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref144 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee144(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee144$(_context144) {
      while (1) switch (_context144.prev = _context144.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context144.next = 2;
            break;
          }
          return _context144.abrupt("return", de_GetBucketCorsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context144.t0 = __expectNonNull;
          _context144.t1 = __expectObject;
          _context144.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context144.t2 = _context144.sent;
          _context144.t3 = (0, _context144.t1)(_context144.t2);
          data = (0, _context144.t0)(_context144.t3, "body");
          if (data.CORSRule === "") {
            contents.CORSRules = [];
          } else if (data["CORSRule"] !== undefined) {
            contents.CORSRules = de_CORSRules(__getArrayIfSingleItem(data["CORSRule"]), context);
          }
          return _context144.abrupt("return", contents);
        case 12:
        case "end":
          return _context144.stop();
      }
    }, _callee144);
  }));
  return function de_GetBucketCorsCommand(_x287, _x288) {
    return _ref144.apply(this, arguments);
  };
}()));
var de_GetBucketCorsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref145 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee145(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee145$(_context145) {
      while (1) switch (_context145.prev = _context145.next) {
        case 0:
          _context145.t0 = _objectSpread;
          _context145.t1 = _objectSpread({}, output);
          _context145.t2 = {};
          _context145.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context145.t3 = _context145.sent;
          _context145.t4 = {
            body: _context145.t3
          };
          parsedOutput = (0, _context145.t0)(_context145.t1, _context145.t2, _context145.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context145.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context145.stop();
      }
    }, _callee145);
  }));
  return function de_GetBucketCorsCommandError(_x289, _x290) {
    return _ref145.apply(this, arguments);
  };
}()));
var de_GetBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref146 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee146(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee146$(_context146) {
      while (1) switch (_context146.prev = _context146.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context146.next = 2;
            break;
          }
          return _context146.abrupt("return", de_GetBucketEncryptionCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context146.t0 = __expectObject;
          _context146.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context146.t1 = _context146.sent;
          data = (0, _context146.t0)(_context146.t1);
          contents.ServerSideEncryptionConfiguration = de_ServerSideEncryptionConfiguration(data, context);
          return _context146.abrupt("return", contents);
        case 10:
        case "end":
          return _context146.stop();
      }
    }, _callee146);
  }));
  return function de_GetBucketEncryptionCommand(_x291, _x292) {
    return _ref146.apply(this, arguments);
  };
}()));
var de_GetBucketEncryptionCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref147 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee147(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee147$(_context147) {
      while (1) switch (_context147.prev = _context147.next) {
        case 0:
          _context147.t0 = _objectSpread;
          _context147.t1 = _objectSpread({}, output);
          _context147.t2 = {};
          _context147.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context147.t3 = _context147.sent;
          _context147.t4 = {
            body: _context147.t3
          };
          parsedOutput = (0, _context147.t0)(_context147.t1, _context147.t2, _context147.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context147.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context147.stop();
      }
    }, _callee147);
  }));
  return function de_GetBucketEncryptionCommandError(_x293, _x294) {
    return _ref147.apply(this, arguments);
  };
}()));
var de_GetBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref148 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee148(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee148$(_context148) {
      while (1) switch (_context148.prev = _context148.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context148.next = 2;
            break;
          }
          return _context148.abrupt("return", de_GetBucketIntelligentTieringConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context148.t0 = __expectObject;
          _context148.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context148.t1 = _context148.sent;
          data = (0, _context148.t0)(_context148.t1);
          contents.IntelligentTieringConfiguration = de_IntelligentTieringConfiguration(data, context);
          return _context148.abrupt("return", contents);
        case 10:
        case "end":
          return _context148.stop();
      }
    }, _callee148);
  }));
  return function de_GetBucketIntelligentTieringConfigurationCommand(_x295, _x296) {
    return _ref148.apply(this, arguments);
  };
}()));
var de_GetBucketIntelligentTieringConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref149 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee149(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee149$(_context149) {
      while (1) switch (_context149.prev = _context149.next) {
        case 0:
          _context149.t0 = _objectSpread;
          _context149.t1 = _objectSpread({}, output);
          _context149.t2 = {};
          _context149.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context149.t3 = _context149.sent;
          _context149.t4 = {
            body: _context149.t3
          };
          parsedOutput = (0, _context149.t0)(_context149.t1, _context149.t2, _context149.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context149.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context149.stop();
      }
    }, _callee149);
  }));
  return function de_GetBucketIntelligentTieringConfigurationCommandError(_x297, _x298) {
    return _ref149.apply(this, arguments);
  };
}()));
var de_GetBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref150 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee150(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee150$(_context150) {
      while (1) switch (_context150.prev = _context150.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context150.next = 2;
            break;
          }
          return _context150.abrupt("return", de_GetBucketInventoryConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context150.t0 = __expectObject;
          _context150.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context150.t1 = _context150.sent;
          data = (0, _context150.t0)(_context150.t1);
          contents.InventoryConfiguration = de_InventoryConfiguration(data, context);
          return _context150.abrupt("return", contents);
        case 10:
        case "end":
          return _context150.stop();
      }
    }, _callee150);
  }));
  return function de_GetBucketInventoryConfigurationCommand(_x299, _x300) {
    return _ref150.apply(this, arguments);
  };
}()));
var de_GetBucketInventoryConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref151 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee151(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee151$(_context151) {
      while (1) switch (_context151.prev = _context151.next) {
        case 0:
          _context151.t0 = _objectSpread;
          _context151.t1 = _objectSpread({}, output);
          _context151.t2 = {};
          _context151.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context151.t3 = _context151.sent;
          _context151.t4 = {
            body: _context151.t3
          };
          parsedOutput = (0, _context151.t0)(_context151.t1, _context151.t2, _context151.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context151.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context151.stop();
      }
    }, _callee151);
  }));
  return function de_GetBucketInventoryConfigurationCommandError(_x301, _x302) {
    return _ref151.apply(this, arguments);
  };
}()));
var de_GetBucketLifecycleConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref152 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee152(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee152$(_context152) {
      while (1) switch (_context152.prev = _context152.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context152.next = 2;
            break;
          }
          return _context152.abrupt("return", de_GetBucketLifecycleConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context152.t0 = __expectNonNull;
          _context152.t1 = __expectObject;
          _context152.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context152.t2 = _context152.sent;
          _context152.t3 = (0, _context152.t1)(_context152.t2);
          data = (0, _context152.t0)(_context152.t3, "body");
          if (data.Rule === "") {
            contents.Rules = [];
          } else if (data["Rule"] !== undefined) {
            contents.Rules = de_LifecycleRules(__getArrayIfSingleItem(data["Rule"]), context);
          }
          return _context152.abrupt("return", contents);
        case 12:
        case "end":
          return _context152.stop();
      }
    }, _callee152);
  }));
  return function de_GetBucketLifecycleConfigurationCommand(_x303, _x304) {
    return _ref152.apply(this, arguments);
  };
}()));
var de_GetBucketLifecycleConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref153 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee153(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee153$(_context153) {
      while (1) switch (_context153.prev = _context153.next) {
        case 0:
          _context153.t0 = _objectSpread;
          _context153.t1 = _objectSpread({}, output);
          _context153.t2 = {};
          _context153.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context153.t3 = _context153.sent;
          _context153.t4 = {
            body: _context153.t3
          };
          parsedOutput = (0, _context153.t0)(_context153.t1, _context153.t2, _context153.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context153.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context153.stop();
      }
    }, _callee153);
  }));
  return function de_GetBucketLifecycleConfigurationCommandError(_x305, _x306) {
    return _ref153.apply(this, arguments);
  };
}()));
var de_GetBucketLocationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref154 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee154(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee154$(_context154) {
      while (1) switch (_context154.prev = _context154.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context154.next = 2;
            break;
          }
          return _context154.abrupt("return", de_GetBucketLocationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context154.t0 = __expectNonNull;
          _context154.t1 = __expectObject;
          _context154.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context154.t2 = _context154.sent;
          _context154.t3 = (0, _context154.t1)(_context154.t2);
          data = (0, _context154.t0)(_context154.t3, "body");
          if (data["LocationConstraint"] !== undefined) {
            contents.LocationConstraint = __expectString(data["LocationConstraint"]);
          }
          return _context154.abrupt("return", contents);
        case 12:
        case "end":
          return _context154.stop();
      }
    }, _callee154);
  }));
  return function de_GetBucketLocationCommand(_x307, _x308) {
    return _ref154.apply(this, arguments);
  };
}()));
var de_GetBucketLocationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref155 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee155(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee155$(_context155) {
      while (1) switch (_context155.prev = _context155.next) {
        case 0:
          _context155.t0 = _objectSpread;
          _context155.t1 = _objectSpread({}, output);
          _context155.t2 = {};
          _context155.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context155.t3 = _context155.sent;
          _context155.t4 = {
            body: _context155.t3
          };
          parsedOutput = (0, _context155.t0)(_context155.t1, _context155.t2, _context155.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context155.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context155.stop();
      }
    }, _callee155);
  }));
  return function de_GetBucketLocationCommandError(_x309, _x310) {
    return _ref155.apply(this, arguments);
  };
}()));
var de_GetBucketLoggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref156 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee156(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee156$(_context156) {
      while (1) switch (_context156.prev = _context156.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context156.next = 2;
            break;
          }
          return _context156.abrupt("return", de_GetBucketLoggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context156.t0 = __expectNonNull;
          _context156.t1 = __expectObject;
          _context156.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context156.t2 = _context156.sent;
          _context156.t3 = (0, _context156.t1)(_context156.t2);
          data = (0, _context156.t0)(_context156.t3, "body");
          if (data["LoggingEnabled"] !== undefined) {
            contents.LoggingEnabled = de_LoggingEnabled(data["LoggingEnabled"], context);
          }
          return _context156.abrupt("return", contents);
        case 12:
        case "end":
          return _context156.stop();
      }
    }, _callee156);
  }));
  return function de_GetBucketLoggingCommand(_x311, _x312) {
    return _ref156.apply(this, arguments);
  };
}()));
var de_GetBucketLoggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref157 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee157(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee157$(_context157) {
      while (1) switch (_context157.prev = _context157.next) {
        case 0:
          _context157.t0 = _objectSpread;
          _context157.t1 = _objectSpread({}, output);
          _context157.t2 = {};
          _context157.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context157.t3 = _context157.sent;
          _context157.t4 = {
            body: _context157.t3
          };
          parsedOutput = (0, _context157.t0)(_context157.t1, _context157.t2, _context157.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context157.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context157.stop();
      }
    }, _callee157);
  }));
  return function de_GetBucketLoggingCommandError(_x313, _x314) {
    return _ref157.apply(this, arguments);
  };
}()));
var de_GetBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref158 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee158(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee158$(_context158) {
      while (1) switch (_context158.prev = _context158.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context158.next = 2;
            break;
          }
          return _context158.abrupt("return", de_GetBucketMetricsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context158.t0 = __expectObject;
          _context158.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context158.t1 = _context158.sent;
          data = (0, _context158.t0)(_context158.t1);
          contents.MetricsConfiguration = de_MetricsConfiguration(data, context);
          return _context158.abrupt("return", contents);
        case 10:
        case "end":
          return _context158.stop();
      }
    }, _callee158);
  }));
  return function de_GetBucketMetricsConfigurationCommand(_x315, _x316) {
    return _ref158.apply(this, arguments);
  };
}()));
var de_GetBucketMetricsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref159 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee159(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee159$(_context159) {
      while (1) switch (_context159.prev = _context159.next) {
        case 0:
          _context159.t0 = _objectSpread;
          _context159.t1 = _objectSpread({}, output);
          _context159.t2 = {};
          _context159.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context159.t3 = _context159.sent;
          _context159.t4 = {
            body: _context159.t3
          };
          parsedOutput = (0, _context159.t0)(_context159.t1, _context159.t2, _context159.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context159.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context159.stop();
      }
    }, _callee159);
  }));
  return function de_GetBucketMetricsConfigurationCommandError(_x317, _x318) {
    return _ref159.apply(this, arguments);
  };
}()));
var de_GetBucketNotificationConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref160 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee160(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee160$(_context160) {
      while (1) switch (_context160.prev = _context160.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context160.next = 2;
            break;
          }
          return _context160.abrupt("return", de_GetBucketNotificationConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context160.t0 = __expectNonNull;
          _context160.t1 = __expectObject;
          _context160.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context160.t2 = _context160.sent;
          _context160.t3 = (0, _context160.t1)(_context160.t2);
          data = (0, _context160.t0)(_context160.t3, "body");
          if (data["EventBridgeConfiguration"] !== undefined) {
            contents.EventBridgeConfiguration = de_EventBridgeConfiguration(data["EventBridgeConfiguration"], context);
          }
          if (data.CloudFunctionConfiguration === "") {
            contents.LambdaFunctionConfigurations = [];
          } else if (data["CloudFunctionConfiguration"] !== undefined) {
            contents.LambdaFunctionConfigurations = de_LambdaFunctionConfigurationList(__getArrayIfSingleItem(data["CloudFunctionConfiguration"]), context);
          }
          if (data.QueueConfiguration === "") {
            contents.QueueConfigurations = [];
          } else if (data["QueueConfiguration"] !== undefined) {
            contents.QueueConfigurations = de_QueueConfigurationList(__getArrayIfSingleItem(data["QueueConfiguration"]), context);
          }
          if (data.TopicConfiguration === "") {
            contents.TopicConfigurations = [];
          } else if (data["TopicConfiguration"] !== undefined) {
            contents.TopicConfigurations = de_TopicConfigurationList(__getArrayIfSingleItem(data["TopicConfiguration"]), context);
          }
          return _context160.abrupt("return", contents);
        case 15:
        case "end":
          return _context160.stop();
      }
    }, _callee160);
  }));
  return function de_GetBucketNotificationConfigurationCommand(_x319, _x320) {
    return _ref160.apply(this, arguments);
  };
}()));
var de_GetBucketNotificationConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref161 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee161(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee161$(_context161) {
      while (1) switch (_context161.prev = _context161.next) {
        case 0:
          _context161.t0 = _objectSpread;
          _context161.t1 = _objectSpread({}, output);
          _context161.t2 = {};
          _context161.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context161.t3 = _context161.sent;
          _context161.t4 = {
            body: _context161.t3
          };
          parsedOutput = (0, _context161.t0)(_context161.t1, _context161.t2, _context161.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context161.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context161.stop();
      }
    }, _callee161);
  }));
  return function de_GetBucketNotificationConfigurationCommandError(_x321, _x322) {
    return _ref161.apply(this, arguments);
  };
}()));
var de_GetBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref162 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee162(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee162$(_context162) {
      while (1) switch (_context162.prev = _context162.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context162.next = 2;
            break;
          }
          return _context162.abrupt("return", de_GetBucketOwnershipControlsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context162.t0 = __expectObject;
          _context162.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context162.t1 = _context162.sent;
          data = (0, _context162.t0)(_context162.t1);
          contents.OwnershipControls = de_OwnershipControls(data, context);
          return _context162.abrupt("return", contents);
        case 10:
        case "end":
          return _context162.stop();
      }
    }, _callee162);
  }));
  return function de_GetBucketOwnershipControlsCommand(_x323, _x324) {
    return _ref162.apply(this, arguments);
  };
}()));
var de_GetBucketOwnershipControlsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref163 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee163(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee163$(_context163) {
      while (1) switch (_context163.prev = _context163.next) {
        case 0:
          _context163.t0 = _objectSpread;
          _context163.t1 = _objectSpread({}, output);
          _context163.t2 = {};
          _context163.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context163.t3 = _context163.sent;
          _context163.t4 = {
            body: _context163.t3
          };
          parsedOutput = (0, _context163.t0)(_context163.t1, _context163.t2, _context163.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context163.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context163.stop();
      }
    }, _callee163);
  }));
  return function de_GetBucketOwnershipControlsCommandError(_x325, _x326) {
    return _ref163.apply(this, arguments);
  };
}()));
var de_GetBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref164 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee164(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee164$(_context164) {
      while (1) switch (_context164.prev = _context164.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context164.next = 2;
            break;
          }
          return _context164.abrupt("return", de_GetBucketPolicyCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context164.next = 5;
          return Aws_restXml_collectBodyString(output.body, context);
        case 5:
          data = _context164.sent;
          contents.Policy = __expectString(data);
          return _context164.abrupt("return", contents);
        case 8:
        case "end":
          return _context164.stop();
      }
    }, _callee164);
  }));
  return function de_GetBucketPolicyCommand(_x327, _x328) {
    return _ref164.apply(this, arguments);
  };
}()));
var de_GetBucketPolicyCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref165 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee165(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee165$(_context165) {
      while (1) switch (_context165.prev = _context165.next) {
        case 0:
          _context165.t0 = _objectSpread;
          _context165.t1 = _objectSpread({}, output);
          _context165.t2 = {};
          _context165.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context165.t3 = _context165.sent;
          _context165.t4 = {
            body: _context165.t3
          };
          parsedOutput = (0, _context165.t0)(_context165.t1, _context165.t2, _context165.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context165.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context165.stop();
      }
    }, _callee165);
  }));
  return function de_GetBucketPolicyCommandError(_x329, _x330) {
    return _ref165.apply(this, arguments);
  };
}()));
var de_GetBucketPolicyStatusCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref166 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee166(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee166$(_context166) {
      while (1) switch (_context166.prev = _context166.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context166.next = 2;
            break;
          }
          return _context166.abrupt("return", de_GetBucketPolicyStatusCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context166.t0 = __expectObject;
          _context166.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context166.t1 = _context166.sent;
          data = (0, _context166.t0)(_context166.t1);
          contents.PolicyStatus = de_PolicyStatus(data, context);
          return _context166.abrupt("return", contents);
        case 10:
        case "end":
          return _context166.stop();
      }
    }, _callee166);
  }));
  return function de_GetBucketPolicyStatusCommand(_x331, _x332) {
    return _ref166.apply(this, arguments);
  };
}()));
var de_GetBucketPolicyStatusCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref167 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee167(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee167$(_context167) {
      while (1) switch (_context167.prev = _context167.next) {
        case 0:
          _context167.t0 = _objectSpread;
          _context167.t1 = _objectSpread({}, output);
          _context167.t2 = {};
          _context167.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context167.t3 = _context167.sent;
          _context167.t4 = {
            body: _context167.t3
          };
          parsedOutput = (0, _context167.t0)(_context167.t1, _context167.t2, _context167.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context167.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context167.stop();
      }
    }, _callee167);
  }));
  return function de_GetBucketPolicyStatusCommandError(_x333, _x334) {
    return _ref167.apply(this, arguments);
  };
}()));
var de_GetBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref168 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee168(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee168$(_context168) {
      while (1) switch (_context168.prev = _context168.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context168.next = 2;
            break;
          }
          return _context168.abrupt("return", de_GetBucketReplicationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context168.t0 = __expectObject;
          _context168.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context168.t1 = _context168.sent;
          data = (0, _context168.t0)(_context168.t1);
          contents.ReplicationConfiguration = de_ReplicationConfiguration(data, context);
          return _context168.abrupt("return", contents);
        case 10:
        case "end":
          return _context168.stop();
      }
    }, _callee168);
  }));
  return function de_GetBucketReplicationCommand(_x335, _x336) {
    return _ref168.apply(this, arguments);
  };
}()));
var de_GetBucketReplicationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref169 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee169(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee169$(_context169) {
      while (1) switch (_context169.prev = _context169.next) {
        case 0:
          _context169.t0 = _objectSpread;
          _context169.t1 = _objectSpread({}, output);
          _context169.t2 = {};
          _context169.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context169.t3 = _context169.sent;
          _context169.t4 = {
            body: _context169.t3
          };
          parsedOutput = (0, _context169.t0)(_context169.t1, _context169.t2, _context169.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context169.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context169.stop();
      }
    }, _callee169);
  }));
  return function de_GetBucketReplicationCommandError(_x337, _x338) {
    return _ref169.apply(this, arguments);
  };
}()));
var de_GetBucketRequestPaymentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref170 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee170(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee170$(_context170) {
      while (1) switch (_context170.prev = _context170.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context170.next = 2;
            break;
          }
          return _context170.abrupt("return", de_GetBucketRequestPaymentCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context170.t0 = __expectNonNull;
          _context170.t1 = __expectObject;
          _context170.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context170.t2 = _context170.sent;
          _context170.t3 = (0, _context170.t1)(_context170.t2);
          data = (0, _context170.t0)(_context170.t3, "body");
          if (data["Payer"] !== undefined) {
            contents.Payer = __expectString(data["Payer"]);
          }
          return _context170.abrupt("return", contents);
        case 12:
        case "end":
          return _context170.stop();
      }
    }, _callee170);
  }));
  return function de_GetBucketRequestPaymentCommand(_x339, _x340) {
    return _ref170.apply(this, arguments);
  };
}()));
var de_GetBucketRequestPaymentCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref171 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee171(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee171$(_context171) {
      while (1) switch (_context171.prev = _context171.next) {
        case 0:
          _context171.t0 = _objectSpread;
          _context171.t1 = _objectSpread({}, output);
          _context171.t2 = {};
          _context171.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context171.t3 = _context171.sent;
          _context171.t4 = {
            body: _context171.t3
          };
          parsedOutput = (0, _context171.t0)(_context171.t1, _context171.t2, _context171.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context171.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context171.stop();
      }
    }, _callee171);
  }));
  return function de_GetBucketRequestPaymentCommandError(_x341, _x342) {
    return _ref171.apply(this, arguments);
  };
}()));
var de_GetBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref172 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee172(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee172$(_context172) {
      while (1) switch (_context172.prev = _context172.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context172.next = 2;
            break;
          }
          return _context172.abrupt("return", de_GetBucketTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context172.t0 = __expectNonNull;
          _context172.t1 = __expectObject;
          _context172.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context172.t2 = _context172.sent;
          _context172.t3 = (0, _context172.t1)(_context172.t2);
          data = (0, _context172.t0)(_context172.t3, "body");
          if (data.TagSet === "") {
            contents.TagSet = [];
          } else if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
            contents.TagSet = de_TagSet(__getArrayIfSingleItem(data["TagSet"]["Tag"]), context);
          }
          return _context172.abrupt("return", contents);
        case 12:
        case "end":
          return _context172.stop();
      }
    }, _callee172);
  }));
  return function de_GetBucketTaggingCommand(_x343, _x344) {
    return _ref172.apply(this, arguments);
  };
}()));
var de_GetBucketTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref173 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee173(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee173$(_context173) {
      while (1) switch (_context173.prev = _context173.next) {
        case 0:
          _context173.t0 = _objectSpread;
          _context173.t1 = _objectSpread({}, output);
          _context173.t2 = {};
          _context173.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context173.t3 = _context173.sent;
          _context173.t4 = {
            body: _context173.t3
          };
          parsedOutput = (0, _context173.t0)(_context173.t1, _context173.t2, _context173.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context173.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context173.stop();
      }
    }, _callee173);
  }));
  return function de_GetBucketTaggingCommandError(_x345, _x346) {
    return _ref173.apply(this, arguments);
  };
}()));
var de_GetBucketVersioningCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref174 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee174(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee174$(_context174) {
      while (1) switch (_context174.prev = _context174.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context174.next = 2;
            break;
          }
          return _context174.abrupt("return", de_GetBucketVersioningCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context174.t0 = __expectNonNull;
          _context174.t1 = __expectObject;
          _context174.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context174.t2 = _context174.sent;
          _context174.t3 = (0, _context174.t1)(_context174.t2);
          data = (0, _context174.t0)(_context174.t3, "body");
          if (data["MfaDelete"] !== undefined) {
            contents.MFADelete = __expectString(data["MfaDelete"]);
          }
          if (data["Status"] !== undefined) {
            contents.Status = __expectString(data["Status"]);
          }
          return _context174.abrupt("return", contents);
        case 13:
        case "end":
          return _context174.stop();
      }
    }, _callee174);
  }));
  return function de_GetBucketVersioningCommand(_x347, _x348) {
    return _ref174.apply(this, arguments);
  };
}()));
var de_GetBucketVersioningCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref175 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee175(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee175$(_context175) {
      while (1) switch (_context175.prev = _context175.next) {
        case 0:
          _context175.t0 = _objectSpread;
          _context175.t1 = _objectSpread({}, output);
          _context175.t2 = {};
          _context175.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context175.t3 = _context175.sent;
          _context175.t4 = {
            body: _context175.t3
          };
          parsedOutput = (0, _context175.t0)(_context175.t1, _context175.t2, _context175.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context175.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context175.stop();
      }
    }, _callee175);
  }));
  return function de_GetBucketVersioningCommandError(_x349, _x350) {
    return _ref175.apply(this, arguments);
  };
}()));
var de_GetBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref176 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee176(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee176$(_context176) {
      while (1) switch (_context176.prev = _context176.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context176.next = 2;
            break;
          }
          return _context176.abrupt("return", de_GetBucketWebsiteCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context176.t0 = __expectNonNull;
          _context176.t1 = __expectObject;
          _context176.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context176.t2 = _context176.sent;
          _context176.t3 = (0, _context176.t1)(_context176.t2);
          data = (0, _context176.t0)(_context176.t3, "body");
          if (data["ErrorDocument"] !== undefined) {
            contents.ErrorDocument = de_ErrorDocument(data["ErrorDocument"], context);
          }
          if (data["IndexDocument"] !== undefined) {
            contents.IndexDocument = de_IndexDocument(data["IndexDocument"], context);
          }
          if (data["RedirectAllRequestsTo"] !== undefined) {
            contents.RedirectAllRequestsTo = de_RedirectAllRequestsTo(data["RedirectAllRequestsTo"], context);
          }
          if (data.RoutingRules === "") {
            contents.RoutingRules = [];
          } else if (data["RoutingRules"] !== undefined && data["RoutingRules"]["RoutingRule"] !== undefined) {
            contents.RoutingRules = de_RoutingRules(__getArrayIfSingleItem(data["RoutingRules"]["RoutingRule"]), context);
          }
          return _context176.abrupt("return", contents);
        case 15:
        case "end":
          return _context176.stop();
      }
    }, _callee176);
  }));
  return function de_GetBucketWebsiteCommand(_x351, _x352) {
    return _ref176.apply(this, arguments);
  };
}()));
var de_GetBucketWebsiteCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref177 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee177(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee177$(_context177) {
      while (1) switch (_context177.prev = _context177.next) {
        case 0:
          _context177.t0 = _objectSpread;
          _context177.t1 = _objectSpread({}, output);
          _context177.t2 = {};
          _context177.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context177.t3 = _context177.sent;
          _context177.t4 = {
            body: _context177.t3
          };
          parsedOutput = (0, _context177.t0)(_context177.t1, _context177.t2, _context177.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context177.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context177.stop();
      }
    }, _callee177);
  }));
  return function de_GetBucketWebsiteCommandError(_x353, _x354) {
    return _ref177.apply(this, arguments);
  };
}()));
var de_GetObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref178 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee178(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee178$(_context178) {
      while (1) switch (_context178.prev = _context178.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context178.next = 2;
            break;
          }
          return _context178.abrupt("return", de_GetObjectCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            DeleteMarker: [function () {
              return void 0 !== output.headers["x-amz-delete-marker"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-delete-marker"]);
            }],
            AcceptRanges: [, output.headers["accept-ranges"]],
            Expiration: [, output.headers["x-amz-expiration"]],
            Restore: [, output.headers["x-amz-restore"]],
            LastModified: [function () {
              return void 0 !== output.headers["last-modified"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["last-modified"]));
            }],
            ContentLength: [function () {
              return void 0 !== output.headers["content-length"];
            }, function () {
              return __strictParseLong(output.headers["content-length"]);
            }],
            ETag: [, output.headers["etag"]],
            ChecksumCRC32: [, output.headers["x-amz-checksum-crc32"]],
            ChecksumCRC32C: [, output.headers["x-amz-checksum-crc32c"]],
            ChecksumSHA1: [, output.headers["x-amz-checksum-sha1"]],
            ChecksumSHA256: [, output.headers["x-amz-checksum-sha256"]],
            MissingMeta: [function () {
              return void 0 !== output.headers["x-amz-missing-meta"];
            }, function () {
              return __strictParseInt32(output.headers["x-amz-missing-meta"]);
            }],
            VersionId: [, output.headers["x-amz-version-id"]],
            CacheControl: [, output.headers["cache-control"]],
            ContentDisposition: [, output.headers["content-disposition"]],
            ContentEncoding: [, output.headers["content-encoding"]],
            ContentLanguage: [, output.headers["content-language"]],
            ContentRange: [, output.headers["content-range"]],
            ContentType: [, output.headers["content-type"]],
            Expires: [function () {
              return void 0 !== output.headers["expires"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["expires"]));
            }],
            WebsiteRedirectLocation: [, output.headers["x-amz-website-redirect-location"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            StorageClass: [, output.headers["x-amz-storage-class"]],
            RequestCharged: [, output.headers["x-amz-request-charged"]],
            ReplicationStatus: [, output.headers["x-amz-replication-status"]],
            PartsCount: [function () {
              return void 0 !== output.headers["x-amz-mp-parts-count"];
            }, function () {
              return __strictParseInt32(output.headers["x-amz-mp-parts-count"]);
            }],
            TagCount: [function () {
              return void 0 !== output.headers["x-amz-tagging-count"];
            }, function () {
              return __strictParseInt32(output.headers["x-amz-tagging-count"]);
            }],
            ObjectLockMode: [, output.headers["x-amz-object-lock-mode"]],
            ObjectLockRetainUntilDate: [function () {
              return void 0 !== output.headers["x-amz-object-lock-retain-until-date"];
            }, function () {
              return __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers["x-amz-object-lock-retain-until-date"]));
            }],
            ObjectLockLegalHoldStatus: [, output.headers["x-amz-object-lock-legal-hold"]],
            Metadata: [, Object.keys(output.headers).filter(function (header) {
              return header.startsWith("x-amz-meta-");
            }).reduce(function (acc, header) {
              acc[header.substring(11)] = output.headers[header];
              return acc;
            }, {})]
          });
          data = output.body;
          context.sdkStreamMixin(data);
          contents.Body = data;
          return _context178.abrupt("return", contents);
        case 7:
        case "end":
          return _context178.stop();
      }
    }, _callee178);
  }));
  return function de_GetObjectCommand(_x355, _x356) {
    return _ref178.apply(this, arguments);
  };
}()));
var de_GetObjectCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref179 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee179(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee179$(_context179) {
      while (1) switch (_context179.prev = _context179.next) {
        case 0:
          _context179.t0 = _objectSpread;
          _context179.t1 = _objectSpread({}, output);
          _context179.t2 = {};
          _context179.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context179.t3 = _context179.sent;
          _context179.t4 = {
            body: _context179.t3
          };
          parsedOutput = (0, _context179.t0)(_context179.t1, _context179.t2, _context179.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context179.t5 = errorCode;
          _context179.next = _context179.t5 === "InvalidObjectState" ? 12 : _context179.t5 === "com.amazonaws.s3#InvalidObjectState" ? 12 : _context179.t5 === "NoSuchKey" ? 15 : _context179.t5 === "com.amazonaws.s3#NoSuchKey" ? 15 : 18;
          break;
        case 12:
          _context179.next = 14;
          return de_InvalidObjectStateRes(parsedOutput, context);
        case 14:
          throw _context179.sent;
        case 15:
          _context179.next = 17;
          return de_NoSuchKeyRes(parsedOutput, context);
        case 17:
          throw _context179.sent;
        case 18:
          parsedBody = parsedOutput.body;
          return _context179.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 20:
        case "end":
          return _context179.stop();
      }
    }, _callee179);
  }));
  return function de_GetObjectCommandError(_x357, _x358) {
    return _ref179.apply(this, arguments);
  };
}()));
var de_GetObjectAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref180 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee180(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee180$(_context180) {
      while (1) switch (_context180.prev = _context180.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context180.next = 2;
            break;
          }
          return _context180.abrupt("return", de_GetObjectAclCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context180.t0 = __expectNonNull;
          _context180.t1 = __expectObject;
          _context180.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context180.t2 = _context180.sent;
          _context180.t3 = (0, _context180.t1)(_context180.t2);
          data = (0, _context180.t0)(_context180.t3, "body");
          if (data.AccessControlList === "") {
            contents.Grants = [];
          } else if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
            contents.Grants = de_Grants(__getArrayIfSingleItem(data["AccessControlList"]["Grant"]), context);
          }
          if (data["Owner"] !== undefined) {
            contents.Owner = de_Owner(data["Owner"], context);
          }
          return _context180.abrupt("return", contents);
        case 13:
        case "end":
          return _context180.stop();
      }
    }, _callee180);
  }));
  return function de_GetObjectAclCommand(_x359, _x360) {
    return _ref180.apply(this, arguments);
  };
}()));
var de_GetObjectAclCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref181 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee181(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee181$(_context181) {
      while (1) switch (_context181.prev = _context181.next) {
        case 0:
          _context181.t0 = _objectSpread;
          _context181.t1 = _objectSpread({}, output);
          _context181.t2 = {};
          _context181.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context181.t3 = _context181.sent;
          _context181.t4 = {
            body: _context181.t3
          };
          parsedOutput = (0, _context181.t0)(_context181.t1, _context181.t2, _context181.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context181.t5 = errorCode;
          _context181.next = _context181.t5 === "NoSuchKey" ? 12 : _context181.t5 === "com.amazonaws.s3#NoSuchKey" ? 12 : 15;
          break;
        case 12:
          _context181.next = 14;
          return de_NoSuchKeyRes(parsedOutput, context);
        case 14:
          throw _context181.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context181.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context181.stop();
      }
    }, _callee181);
  }));
  return function de_GetObjectAclCommandError(_x361, _x362) {
    return _ref181.apply(this, arguments);
  };
}()));
var de_GetObjectAttributesCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref182 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee182(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee182$(_context182) {
      while (1) switch (_context182.prev = _context182.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context182.next = 2;
            break;
          }
          return _context182.abrupt("return", de_GetObjectAttributesCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            DeleteMarker: [function () {
              return void 0 !== output.headers["x-amz-delete-marker"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-delete-marker"]);
            }],
            LastModified: [function () {
              return void 0 !== output.headers["last-modified"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["last-modified"]));
            }],
            VersionId: [, output.headers["x-amz-version-id"]],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context182.t0 = __expectNonNull;
          _context182.t1 = __expectObject;
          _context182.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context182.t2 = _context182.sent;
          _context182.t3 = (0, _context182.t1)(_context182.t2);
          data = (0, _context182.t0)(_context182.t3, "body");
          if (data["Checksum"] !== undefined) {
            contents.Checksum = de_Checksum(data["Checksum"], context);
          }
          if (data["ETag"] !== undefined) {
            contents.ETag = __expectString(data["ETag"]);
          }
          if (data["ObjectParts"] !== undefined) {
            contents.ObjectParts = de_GetObjectAttributesParts(data["ObjectParts"], context);
          }
          if (data["ObjectSize"] !== undefined) {
            contents.ObjectSize = __strictParseLong(data["ObjectSize"]);
          }
          if (data["StorageClass"] !== undefined) {
            contents.StorageClass = __expectString(data["StorageClass"]);
          }
          return _context182.abrupt("return", contents);
        case 16:
        case "end":
          return _context182.stop();
      }
    }, _callee182);
  }));
  return function de_GetObjectAttributesCommand(_x363, _x364) {
    return _ref182.apply(this, arguments);
  };
}()));
var de_GetObjectAttributesCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref183 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee183(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee183$(_context183) {
      while (1) switch (_context183.prev = _context183.next) {
        case 0:
          _context183.t0 = _objectSpread;
          _context183.t1 = _objectSpread({}, output);
          _context183.t2 = {};
          _context183.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context183.t3 = _context183.sent;
          _context183.t4 = {
            body: _context183.t3
          };
          parsedOutput = (0, _context183.t0)(_context183.t1, _context183.t2, _context183.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context183.t5 = errorCode;
          _context183.next = _context183.t5 === "NoSuchKey" ? 12 : _context183.t5 === "com.amazonaws.s3#NoSuchKey" ? 12 : 15;
          break;
        case 12:
          _context183.next = 14;
          return de_NoSuchKeyRes(parsedOutput, context);
        case 14:
          throw _context183.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context183.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context183.stop();
      }
    }, _callee183);
  }));
  return function de_GetObjectAttributesCommandError(_x365, _x366) {
    return _ref183.apply(this, arguments);
  };
}()));
var de_GetObjectLegalHoldCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref184 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee184(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee184$(_context184) {
      while (1) switch (_context184.prev = _context184.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context184.next = 2;
            break;
          }
          return _context184.abrupt("return", de_GetObjectLegalHoldCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context184.t0 = __expectObject;
          _context184.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context184.t1 = _context184.sent;
          data = (0, _context184.t0)(_context184.t1);
          contents.LegalHold = de_ObjectLockLegalHold(data, context);
          return _context184.abrupt("return", contents);
        case 10:
        case "end":
          return _context184.stop();
      }
    }, _callee184);
  }));
  return function de_GetObjectLegalHoldCommand(_x367, _x368) {
    return _ref184.apply(this, arguments);
  };
}()));
var de_GetObjectLegalHoldCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref185 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee185(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee185$(_context185) {
      while (1) switch (_context185.prev = _context185.next) {
        case 0:
          _context185.t0 = _objectSpread;
          _context185.t1 = _objectSpread({}, output);
          _context185.t2 = {};
          _context185.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context185.t3 = _context185.sent;
          _context185.t4 = {
            body: _context185.t3
          };
          parsedOutput = (0, _context185.t0)(_context185.t1, _context185.t2, _context185.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context185.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context185.stop();
      }
    }, _callee185);
  }));
  return function de_GetObjectLegalHoldCommandError(_x369, _x370) {
    return _ref185.apply(this, arguments);
  };
}()));
var de_GetObjectLockConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref186 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee186(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee186$(_context186) {
      while (1) switch (_context186.prev = _context186.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context186.next = 2;
            break;
          }
          return _context186.abrupt("return", de_GetObjectLockConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context186.t0 = __expectObject;
          _context186.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context186.t1 = _context186.sent;
          data = (0, _context186.t0)(_context186.t1);
          contents.ObjectLockConfiguration = de_ObjectLockConfiguration(data, context);
          return _context186.abrupt("return", contents);
        case 10:
        case "end":
          return _context186.stop();
      }
    }, _callee186);
  }));
  return function de_GetObjectLockConfigurationCommand(_x371, _x372) {
    return _ref186.apply(this, arguments);
  };
}()));
var de_GetObjectLockConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref187 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee187(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee187$(_context187) {
      while (1) switch (_context187.prev = _context187.next) {
        case 0:
          _context187.t0 = _objectSpread;
          _context187.t1 = _objectSpread({}, output);
          _context187.t2 = {};
          _context187.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context187.t3 = _context187.sent;
          _context187.t4 = {
            body: _context187.t3
          };
          parsedOutput = (0, _context187.t0)(_context187.t1, _context187.t2, _context187.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context187.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context187.stop();
      }
    }, _callee187);
  }));
  return function de_GetObjectLockConfigurationCommandError(_x373, _x374) {
    return _ref187.apply(this, arguments);
  };
}()));
var de_GetObjectRetentionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref188 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee188(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee188$(_context188) {
      while (1) switch (_context188.prev = _context188.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context188.next = 2;
            break;
          }
          return _context188.abrupt("return", de_GetObjectRetentionCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context188.t0 = __expectObject;
          _context188.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context188.t1 = _context188.sent;
          data = (0, _context188.t0)(_context188.t1);
          contents.Retention = de_ObjectLockRetention(data, context);
          return _context188.abrupt("return", contents);
        case 10:
        case "end":
          return _context188.stop();
      }
    }, _callee188);
  }));
  return function de_GetObjectRetentionCommand(_x375, _x376) {
    return _ref188.apply(this, arguments);
  };
}()));
var de_GetObjectRetentionCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref189 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee189(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee189$(_context189) {
      while (1) switch (_context189.prev = _context189.next) {
        case 0:
          _context189.t0 = _objectSpread;
          _context189.t1 = _objectSpread({}, output);
          _context189.t2 = {};
          _context189.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context189.t3 = _context189.sent;
          _context189.t4 = {
            body: _context189.t3
          };
          parsedOutput = (0, _context189.t0)(_context189.t1, _context189.t2, _context189.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context189.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context189.stop();
      }
    }, _callee189);
  }));
  return function de_GetObjectRetentionCommandError(_x377, _x378) {
    return _ref189.apply(this, arguments);
  };
}()));
var de_GetObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref190 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee190(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee190$(_context190) {
      while (1) switch (_context190.prev = _context190.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context190.next = 2;
            break;
          }
          return _context190.abrupt("return", de_GetObjectTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            VersionId: [, output.headers["x-amz-version-id"]]
          });
          _context190.t0 = __expectNonNull;
          _context190.t1 = __expectObject;
          _context190.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context190.t2 = _context190.sent;
          _context190.t3 = (0, _context190.t1)(_context190.t2);
          data = (0, _context190.t0)(_context190.t3, "body");
          if (data.TagSet === "") {
            contents.TagSet = [];
          } else if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
            contents.TagSet = de_TagSet(__getArrayIfSingleItem(data["TagSet"]["Tag"]), context);
          }
          return _context190.abrupt("return", contents);
        case 12:
        case "end":
          return _context190.stop();
      }
    }, _callee190);
  }));
  return function de_GetObjectTaggingCommand(_x379, _x380) {
    return _ref190.apply(this, arguments);
  };
}()));
var de_GetObjectTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref191 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee191(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee191$(_context191) {
      while (1) switch (_context191.prev = _context191.next) {
        case 0:
          _context191.t0 = _objectSpread;
          _context191.t1 = _objectSpread({}, output);
          _context191.t2 = {};
          _context191.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context191.t3 = _context191.sent;
          _context191.t4 = {
            body: _context191.t3
          };
          parsedOutput = (0, _context191.t0)(_context191.t1, _context191.t2, _context191.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context191.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context191.stop();
      }
    }, _callee191);
  }));
  return function de_GetObjectTaggingCommandError(_x381, _x382) {
    return _ref191.apply(this, arguments);
  };
}()));
var de_GetObjectTorrentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref192 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee192(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee192$(_context192) {
      while (1) switch (_context192.prev = _context192.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context192.next = 2;
            break;
          }
          return _context192.abrupt("return", de_GetObjectTorrentCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          data = output.body;
          context.sdkStreamMixin(data);
          contents.Body = data;
          return _context192.abrupt("return", contents);
        case 7:
        case "end":
          return _context192.stop();
      }
    }, _callee192);
  }));
  return function de_GetObjectTorrentCommand(_x383, _x384) {
    return _ref192.apply(this, arguments);
  };
}()));
var de_GetObjectTorrentCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref193 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee193(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee193$(_context193) {
      while (1) switch (_context193.prev = _context193.next) {
        case 0:
          _context193.t0 = _objectSpread;
          _context193.t1 = _objectSpread({}, output);
          _context193.t2 = {};
          _context193.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context193.t3 = _context193.sent;
          _context193.t4 = {
            body: _context193.t3
          };
          parsedOutput = (0, _context193.t0)(_context193.t1, _context193.t2, _context193.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context193.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context193.stop();
      }
    }, _callee193);
  }));
  return function de_GetObjectTorrentCommandError(_x385, _x386) {
    return _ref193.apply(this, arguments);
  };
}()));
var de_GetPublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref194 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee194(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee194$(_context194) {
      while (1) switch (_context194.prev = _context194.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context194.next = 2;
            break;
          }
          return _context194.abrupt("return", de_GetPublicAccessBlockCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context194.t0 = __expectObject;
          _context194.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context194.t1 = _context194.sent;
          data = (0, _context194.t0)(_context194.t1);
          contents.PublicAccessBlockConfiguration = de_PublicAccessBlockConfiguration(data, context);
          return _context194.abrupt("return", contents);
        case 10:
        case "end":
          return _context194.stop();
      }
    }, _callee194);
  }));
  return function de_GetPublicAccessBlockCommand(_x387, _x388) {
    return _ref194.apply(this, arguments);
  };
}()));
var de_GetPublicAccessBlockCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref195 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee195(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee195$(_context195) {
      while (1) switch (_context195.prev = _context195.next) {
        case 0:
          _context195.t0 = _objectSpread;
          _context195.t1 = _objectSpread({}, output);
          _context195.t2 = {};
          _context195.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context195.t3 = _context195.sent;
          _context195.t4 = {
            body: _context195.t3
          };
          parsedOutput = (0, _context195.t0)(_context195.t1, _context195.t2, _context195.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context195.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context195.stop();
      }
    }, _callee195);
  }));
  return function de_GetPublicAccessBlockCommandError(_x389, _x390) {
    return _ref195.apply(this, arguments);
  };
}()));
var de_HeadBucketCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref196 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee196(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee196$(_context196) {
      while (1) switch (_context196.prev = _context196.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context196.next = 2;
            break;
          }
          return _context196.abrupt("return", de_HeadBucketCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context196.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context196.abrupt("return", contents);
        case 6:
        case "end":
          return _context196.stop();
      }
    }, _callee196);
  }));
  return function de_HeadBucketCommand(_x391, _x392) {
    return _ref196.apply(this, arguments);
  };
}()));
var de_HeadBucketCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref197 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee197(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee197$(_context197) {
      while (1) switch (_context197.prev = _context197.next) {
        case 0:
          _context197.t0 = _objectSpread;
          _context197.t1 = _objectSpread({}, output);
          _context197.t2 = {};
          _context197.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context197.t3 = _context197.sent;
          _context197.t4 = {
            body: _context197.t3
          };
          parsedOutput = (0, _context197.t0)(_context197.t1, _context197.t2, _context197.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context197.t5 = errorCode;
          _context197.next = _context197.t5 === "NotFound" ? 12 : _context197.t5 === "com.amazonaws.s3#NotFound" ? 12 : 15;
          break;
        case 12:
          _context197.next = 14;
          return de_NotFoundRes(parsedOutput, context);
        case 14:
          throw _context197.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context197.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context197.stop();
      }
    }, _callee197);
  }));
  return function de_HeadBucketCommandError(_x393, _x394) {
    return _ref197.apply(this, arguments);
  };
}()));
var de_HeadObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref198 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee198(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee198$(_context198) {
      while (1) switch (_context198.prev = _context198.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context198.next = 2;
            break;
          }
          return _context198.abrupt("return", de_HeadObjectCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            DeleteMarker: [function () {
              return void 0 !== output.headers["x-amz-delete-marker"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-delete-marker"]);
            }],
            AcceptRanges: [, output.headers["accept-ranges"]],
            Expiration: [, output.headers["x-amz-expiration"]],
            Restore: [, output.headers["x-amz-restore"]],
            ArchiveStatus: [, output.headers["x-amz-archive-status"]],
            LastModified: [function () {
              return void 0 !== output.headers["last-modified"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["last-modified"]));
            }],
            ContentLength: [function () {
              return void 0 !== output.headers["content-length"];
            }, function () {
              return __strictParseLong(output.headers["content-length"]);
            }],
            ChecksumCRC32: [, output.headers["x-amz-checksum-crc32"]],
            ChecksumCRC32C: [, output.headers["x-amz-checksum-crc32c"]],
            ChecksumSHA1: [, output.headers["x-amz-checksum-sha1"]],
            ChecksumSHA256: [, output.headers["x-amz-checksum-sha256"]],
            ETag: [, output.headers["etag"]],
            MissingMeta: [function () {
              return void 0 !== output.headers["x-amz-missing-meta"];
            }, function () {
              return __strictParseInt32(output.headers["x-amz-missing-meta"]);
            }],
            VersionId: [, output.headers["x-amz-version-id"]],
            CacheControl: [, output.headers["cache-control"]],
            ContentDisposition: [, output.headers["content-disposition"]],
            ContentEncoding: [, output.headers["content-encoding"]],
            ContentLanguage: [, output.headers["content-language"]],
            ContentType: [, output.headers["content-type"]],
            Expires: [function () {
              return void 0 !== output.headers["expires"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["expires"]));
            }],
            WebsiteRedirectLocation: [, output.headers["x-amz-website-redirect-location"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            StorageClass: [, output.headers["x-amz-storage-class"]],
            RequestCharged: [, output.headers["x-amz-request-charged"]],
            ReplicationStatus: [, output.headers["x-amz-replication-status"]],
            PartsCount: [function () {
              return void 0 !== output.headers["x-amz-mp-parts-count"];
            }, function () {
              return __strictParseInt32(output.headers["x-amz-mp-parts-count"]);
            }],
            ObjectLockMode: [, output.headers["x-amz-object-lock-mode"]],
            ObjectLockRetainUntilDate: [function () {
              return void 0 !== output.headers["x-amz-object-lock-retain-until-date"];
            }, function () {
              return __expectNonNull(__parseRfc3339DateTimeWithOffset(output.headers["x-amz-object-lock-retain-until-date"]));
            }],
            ObjectLockLegalHoldStatus: [, output.headers["x-amz-object-lock-legal-hold"]],
            Metadata: [, Object.keys(output.headers).filter(function (header) {
              return header.startsWith("x-amz-meta-");
            }).reduce(function (acc, header) {
              acc[header.substring(11)] = output.headers[header];
              return acc;
            }, {})]
          });
          _context198.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context198.abrupt("return", contents);
        case 6:
        case "end":
          return _context198.stop();
      }
    }, _callee198);
  }));
  return function de_HeadObjectCommand(_x395, _x396) {
    return _ref198.apply(this, arguments);
  };
}()));
var de_HeadObjectCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref199 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee199(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee199$(_context199) {
      while (1) switch (_context199.prev = _context199.next) {
        case 0:
          _context199.t0 = _objectSpread;
          _context199.t1 = _objectSpread({}, output);
          _context199.t2 = {};
          _context199.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context199.t3 = _context199.sent;
          _context199.t4 = {
            body: _context199.t3
          };
          parsedOutput = (0, _context199.t0)(_context199.t1, _context199.t2, _context199.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context199.t5 = errorCode;
          _context199.next = _context199.t5 === "NotFound" ? 12 : _context199.t5 === "com.amazonaws.s3#NotFound" ? 12 : 15;
          break;
        case 12:
          _context199.next = 14;
          return de_NotFoundRes(parsedOutput, context);
        case 14:
          throw _context199.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context199.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context199.stop();
      }
    }, _callee199);
  }));
  return function de_HeadObjectCommandError(_x397, _x398) {
    return _ref199.apply(this, arguments);
  };
}()));
var de_ListBucketAnalyticsConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref200 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee200(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee200$(_context200) {
      while (1) switch (_context200.prev = _context200.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context200.next = 2;
            break;
          }
          return _context200.abrupt("return", de_ListBucketAnalyticsConfigurationsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context200.t0 = __expectNonNull;
          _context200.t1 = __expectObject;
          _context200.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context200.t2 = _context200.sent;
          _context200.t3 = (0, _context200.t1)(_context200.t2);
          data = (0, _context200.t0)(_context200.t3, "body");
          if (data.AnalyticsConfiguration === "") {
            contents.AnalyticsConfigurationList = [];
          } else if (data["AnalyticsConfiguration"] !== undefined) {
            contents.AnalyticsConfigurationList = de_AnalyticsConfigurationList(__getArrayIfSingleItem(data["AnalyticsConfiguration"]), context);
          }
          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = __expectString(data["ContinuationToken"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = __expectString(data["NextContinuationToken"]);
          }
          return _context200.abrupt("return", contents);
        case 15:
        case "end":
          return _context200.stop();
      }
    }, _callee200);
  }));
  return function de_ListBucketAnalyticsConfigurationsCommand(_x399, _x400) {
    return _ref200.apply(this, arguments);
  };
}()));
var de_ListBucketAnalyticsConfigurationsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref201 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee201(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee201$(_context201) {
      while (1) switch (_context201.prev = _context201.next) {
        case 0:
          _context201.t0 = _objectSpread;
          _context201.t1 = _objectSpread({}, output);
          _context201.t2 = {};
          _context201.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context201.t3 = _context201.sent;
          _context201.t4 = {
            body: _context201.t3
          };
          parsedOutput = (0, _context201.t0)(_context201.t1, _context201.t2, _context201.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context201.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context201.stop();
      }
    }, _callee201);
  }));
  return function de_ListBucketAnalyticsConfigurationsCommandError(_x401, _x402) {
    return _ref201.apply(this, arguments);
  };
}()));
var de_ListBucketIntelligentTieringConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref202 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee202(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee202$(_context202) {
      while (1) switch (_context202.prev = _context202.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context202.next = 2;
            break;
          }
          return _context202.abrupt("return", de_ListBucketIntelligentTieringConfigurationsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context202.t0 = __expectNonNull;
          _context202.t1 = __expectObject;
          _context202.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context202.t2 = _context202.sent;
          _context202.t3 = (0, _context202.t1)(_context202.t2);
          data = (0, _context202.t0)(_context202.t3, "body");
          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = __expectString(data["ContinuationToken"]);
          }
          if (data.IntelligentTieringConfiguration === "") {
            contents.IntelligentTieringConfigurationList = [];
          } else if (data["IntelligentTieringConfiguration"] !== undefined) {
            contents.IntelligentTieringConfigurationList = de_IntelligentTieringConfigurationList(__getArrayIfSingleItem(data["IntelligentTieringConfiguration"]), context);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = __expectString(data["NextContinuationToken"]);
          }
          return _context202.abrupt("return", contents);
        case 15:
        case "end":
          return _context202.stop();
      }
    }, _callee202);
  }));
  return function de_ListBucketIntelligentTieringConfigurationsCommand(_x403, _x404) {
    return _ref202.apply(this, arguments);
  };
}()));
var de_ListBucketIntelligentTieringConfigurationsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref203 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee203(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee203$(_context203) {
      while (1) switch (_context203.prev = _context203.next) {
        case 0:
          _context203.t0 = _objectSpread;
          _context203.t1 = _objectSpread({}, output);
          _context203.t2 = {};
          _context203.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context203.t3 = _context203.sent;
          _context203.t4 = {
            body: _context203.t3
          };
          parsedOutput = (0, _context203.t0)(_context203.t1, _context203.t2, _context203.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context203.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context203.stop();
      }
    }, _callee203);
  }));
  return function de_ListBucketIntelligentTieringConfigurationsCommandError(_x405, _x406) {
    return _ref203.apply(this, arguments);
  };
}()));
var de_ListBucketInventoryConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref204 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee204(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee204$(_context204) {
      while (1) switch (_context204.prev = _context204.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context204.next = 2;
            break;
          }
          return _context204.abrupt("return", de_ListBucketInventoryConfigurationsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context204.t0 = __expectNonNull;
          _context204.t1 = __expectObject;
          _context204.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context204.t2 = _context204.sent;
          _context204.t3 = (0, _context204.t1)(_context204.t2);
          data = (0, _context204.t0)(_context204.t3, "body");
          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = __expectString(data["ContinuationToken"]);
          }
          if (data.InventoryConfiguration === "") {
            contents.InventoryConfigurationList = [];
          } else if (data["InventoryConfiguration"] !== undefined) {
            contents.InventoryConfigurationList = de_InventoryConfigurationList(__getArrayIfSingleItem(data["InventoryConfiguration"]), context);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = __expectString(data["NextContinuationToken"]);
          }
          return _context204.abrupt("return", contents);
        case 15:
        case "end":
          return _context204.stop();
      }
    }, _callee204);
  }));
  return function de_ListBucketInventoryConfigurationsCommand(_x407, _x408) {
    return _ref204.apply(this, arguments);
  };
}()));
var de_ListBucketInventoryConfigurationsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref205 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee205(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee205$(_context205) {
      while (1) switch (_context205.prev = _context205.next) {
        case 0:
          _context205.t0 = _objectSpread;
          _context205.t1 = _objectSpread({}, output);
          _context205.t2 = {};
          _context205.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context205.t3 = _context205.sent;
          _context205.t4 = {
            body: _context205.t3
          };
          parsedOutput = (0, _context205.t0)(_context205.t1, _context205.t2, _context205.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context205.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context205.stop();
      }
    }, _callee205);
  }));
  return function de_ListBucketInventoryConfigurationsCommandError(_x409, _x410) {
    return _ref205.apply(this, arguments);
  };
}()));
var de_ListBucketMetricsConfigurationsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref206 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee206(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee206$(_context206) {
      while (1) switch (_context206.prev = _context206.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context206.next = 2;
            break;
          }
          return _context206.abrupt("return", de_ListBucketMetricsConfigurationsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context206.t0 = __expectNonNull;
          _context206.t1 = __expectObject;
          _context206.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context206.t2 = _context206.sent;
          _context206.t3 = (0, _context206.t1)(_context206.t2);
          data = (0, _context206.t0)(_context206.t3, "body");
          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = __expectString(data["ContinuationToken"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data.MetricsConfiguration === "") {
            contents.MetricsConfigurationList = [];
          } else if (data["MetricsConfiguration"] !== undefined) {
            contents.MetricsConfigurationList = de_MetricsConfigurationList(__getArrayIfSingleItem(data["MetricsConfiguration"]), context);
          }
          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = __expectString(data["NextContinuationToken"]);
          }
          return _context206.abrupt("return", contents);
        case 15:
        case "end":
          return _context206.stop();
      }
    }, _callee206);
  }));
  return function de_ListBucketMetricsConfigurationsCommand(_x411, _x412) {
    return _ref206.apply(this, arguments);
  };
}()));
var de_ListBucketMetricsConfigurationsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref207 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee207(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee207$(_context207) {
      while (1) switch (_context207.prev = _context207.next) {
        case 0:
          _context207.t0 = _objectSpread;
          _context207.t1 = _objectSpread({}, output);
          _context207.t2 = {};
          _context207.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context207.t3 = _context207.sent;
          _context207.t4 = {
            body: _context207.t3
          };
          parsedOutput = (0, _context207.t0)(_context207.t1, _context207.t2, _context207.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context207.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context207.stop();
      }
    }, _callee207);
  }));
  return function de_ListBucketMetricsConfigurationsCommandError(_x413, _x414) {
    return _ref207.apply(this, arguments);
  };
}()));
var de_ListBucketsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref208 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee208(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee208$(_context208) {
      while (1) switch (_context208.prev = _context208.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context208.next = 2;
            break;
          }
          return _context208.abrupt("return", de_ListBucketsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context208.t0 = __expectNonNull;
          _context208.t1 = __expectObject;
          _context208.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context208.t2 = _context208.sent;
          _context208.t3 = (0, _context208.t1)(_context208.t2);
          data = (0, _context208.t0)(_context208.t3, "body");
          if (data.Buckets === "") {
            contents.Buckets = [];
          } else if (data["Buckets"] !== undefined && data["Buckets"]["Bucket"] !== undefined) {
            contents.Buckets = de_Buckets(__getArrayIfSingleItem(data["Buckets"]["Bucket"]), context);
          }
          if (data["Owner"] !== undefined) {
            contents.Owner = de_Owner(data["Owner"], context);
          }
          return _context208.abrupt("return", contents);
        case 13:
        case "end":
          return _context208.stop();
      }
    }, _callee208);
  }));
  return function de_ListBucketsCommand(_x415, _x416) {
    return _ref208.apply(this, arguments);
  };
}()));
var de_ListBucketsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref209 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee209(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee209$(_context209) {
      while (1) switch (_context209.prev = _context209.next) {
        case 0:
          _context209.t0 = _objectSpread;
          _context209.t1 = _objectSpread({}, output);
          _context209.t2 = {};
          _context209.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context209.t3 = _context209.sent;
          _context209.t4 = {
            body: _context209.t3
          };
          parsedOutput = (0, _context209.t0)(_context209.t1, _context209.t2, _context209.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context209.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context209.stop();
      }
    }, _callee209);
  }));
  return function de_ListBucketsCommandError(_x417, _x418) {
    return _ref209.apply(this, arguments);
  };
}()));
var de_ListMultipartUploadsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref210 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee210(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee210$(_context210) {
      while (1) switch (_context210.prev = _context210.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context210.next = 2;
            break;
          }
          return _context210.abrupt("return", de_ListMultipartUploadsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context210.t0 = __expectNonNull;
          _context210.t1 = __expectObject;
          _context210.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context210.t2 = _context210.sent;
          _context210.t3 = (0, _context210.t1)(_context210.t2);
          data = (0, _context210.t0)(_context210.t3, "body");
          if (data["Bucket"] !== undefined) {
            contents.Bucket = __expectString(data["Bucket"]);
          }
          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          } else if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data["CommonPrefixes"]), context);
          }
          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = __expectString(data["Delimiter"]);
          }
          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = __expectString(data["EncodingType"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["KeyMarker"] !== undefined) {
            contents.KeyMarker = __expectString(data["KeyMarker"]);
          }
          if (data["MaxUploads"] !== undefined) {
            contents.MaxUploads = __strictParseInt32(data["MaxUploads"]);
          }
          if (data["NextKeyMarker"] !== undefined) {
            contents.NextKeyMarker = __expectString(data["NextKeyMarker"]);
          }
          if (data["NextUploadIdMarker"] !== undefined) {
            contents.NextUploadIdMarker = __expectString(data["NextUploadIdMarker"]);
          }
          if (data["Prefix"] !== undefined) {
            contents.Prefix = __expectString(data["Prefix"]);
          }
          if (data["UploadIdMarker"] !== undefined) {
            contents.UploadIdMarker = __expectString(data["UploadIdMarker"]);
          }
          if (data.Upload === "") {
            contents.Uploads = [];
          } else if (data["Upload"] !== undefined) {
            contents.Uploads = de_MultipartUploadList(__getArrayIfSingleItem(data["Upload"]), context);
          }
          return _context210.abrupt("return", contents);
        case 23:
        case "end":
          return _context210.stop();
      }
    }, _callee210);
  }));
  return function de_ListMultipartUploadsCommand(_x419, _x420) {
    return _ref210.apply(this, arguments);
  };
}()));
var de_ListMultipartUploadsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref211 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee211(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee211$(_context211) {
      while (1) switch (_context211.prev = _context211.next) {
        case 0:
          _context211.t0 = _objectSpread;
          _context211.t1 = _objectSpread({}, output);
          _context211.t2 = {};
          _context211.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context211.t3 = _context211.sent;
          _context211.t4 = {
            body: _context211.t3
          };
          parsedOutput = (0, _context211.t0)(_context211.t1, _context211.t2, _context211.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context211.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context211.stop();
      }
    }, _callee211);
  }));
  return function de_ListMultipartUploadsCommandError(_x421, _x422) {
    return _ref211.apply(this, arguments);
  };
}()));
var de_ListObjectsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref212 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee212(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee212$(_context212) {
      while (1) switch (_context212.prev = _context212.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context212.next = 2;
            break;
          }
          return _context212.abrupt("return", de_ListObjectsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context212.t0 = __expectNonNull;
          _context212.t1 = __expectObject;
          _context212.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context212.t2 = _context212.sent;
          _context212.t3 = (0, _context212.t1)(_context212.t2);
          data = (0, _context212.t0)(_context212.t3, "body");
          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          } else if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data["CommonPrefixes"]), context);
          }
          if (data.Contents === "") {
            contents.Contents = [];
          } else if (data["Contents"] !== undefined) {
            contents.Contents = de_ObjectList(__getArrayIfSingleItem(data["Contents"]), context);
          }
          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = __expectString(data["Delimiter"]);
          }
          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = __expectString(data["EncodingType"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["Marker"] !== undefined) {
            contents.Marker = __expectString(data["Marker"]);
          }
          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = __strictParseInt32(data["MaxKeys"]);
          }
          if (data["Name"] !== undefined) {
            contents.Name = __expectString(data["Name"]);
          }
          if (data["NextMarker"] !== undefined) {
            contents.NextMarker = __expectString(data["NextMarker"]);
          }
          if (data["Prefix"] !== undefined) {
            contents.Prefix = __expectString(data["Prefix"]);
          }
          return _context212.abrupt("return", contents);
        case 21:
        case "end":
          return _context212.stop();
      }
    }, _callee212);
  }));
  return function de_ListObjectsCommand(_x423, _x424) {
    return _ref212.apply(this, arguments);
  };
}()));
var de_ListObjectsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref213 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee213(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee213$(_context213) {
      while (1) switch (_context213.prev = _context213.next) {
        case 0:
          _context213.t0 = _objectSpread;
          _context213.t1 = _objectSpread({}, output);
          _context213.t2 = {};
          _context213.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context213.t3 = _context213.sent;
          _context213.t4 = {
            body: _context213.t3
          };
          parsedOutput = (0, _context213.t0)(_context213.t1, _context213.t2, _context213.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context213.t5 = errorCode;
          _context213.next = _context213.t5 === "NoSuchBucket" ? 12 : _context213.t5 === "com.amazonaws.s3#NoSuchBucket" ? 12 : 15;
          break;
        case 12:
          _context213.next = 14;
          return de_NoSuchBucketRes(parsedOutput, context);
        case 14:
          throw _context213.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context213.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context213.stop();
      }
    }, _callee213);
  }));
  return function de_ListObjectsCommandError(_x425, _x426) {
    return _ref213.apply(this, arguments);
  };
}()));
var de_ListObjectsV2Command = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref214 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee214(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee214$(_context214) {
      while (1) switch (_context214.prev = _context214.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context214.next = 2;
            break;
          }
          return _context214.abrupt("return", de_ListObjectsV2CommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context214.t0 = __expectNonNull;
          _context214.t1 = __expectObject;
          _context214.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context214.t2 = _context214.sent;
          _context214.t3 = (0, _context214.t1)(_context214.t2);
          data = (0, _context214.t0)(_context214.t3, "body");
          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          } else if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data["CommonPrefixes"]), context);
          }
          if (data.Contents === "") {
            contents.Contents = [];
          } else if (data["Contents"] !== undefined) {
            contents.Contents = de_ObjectList(__getArrayIfSingleItem(data["Contents"]), context);
          }
          if (data["ContinuationToken"] !== undefined) {
            contents.ContinuationToken = __expectString(data["ContinuationToken"]);
          }
          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = __expectString(data["Delimiter"]);
          }
          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = __expectString(data["EncodingType"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["KeyCount"] !== undefined) {
            contents.KeyCount = __strictParseInt32(data["KeyCount"]);
          }
          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = __strictParseInt32(data["MaxKeys"]);
          }
          if (data["Name"] !== undefined) {
            contents.Name = __expectString(data["Name"]);
          }
          if (data["NextContinuationToken"] !== undefined) {
            contents.NextContinuationToken = __expectString(data["NextContinuationToken"]);
          }
          if (data["Prefix"] !== undefined) {
            contents.Prefix = __expectString(data["Prefix"]);
          }
          if (data["StartAfter"] !== undefined) {
            contents.StartAfter = __expectString(data["StartAfter"]);
          }
          return _context214.abrupt("return", contents);
        case 23:
        case "end":
          return _context214.stop();
      }
    }, _callee214);
  }));
  return function de_ListObjectsV2Command(_x427, _x428) {
    return _ref214.apply(this, arguments);
  };
}()));
var de_ListObjectsV2CommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref215 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee215(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee215$(_context215) {
      while (1) switch (_context215.prev = _context215.next) {
        case 0:
          _context215.t0 = _objectSpread;
          _context215.t1 = _objectSpread({}, output);
          _context215.t2 = {};
          _context215.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context215.t3 = _context215.sent;
          _context215.t4 = {
            body: _context215.t3
          };
          parsedOutput = (0, _context215.t0)(_context215.t1, _context215.t2, _context215.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context215.t5 = errorCode;
          _context215.next = _context215.t5 === "NoSuchBucket" ? 12 : _context215.t5 === "com.amazonaws.s3#NoSuchBucket" ? 12 : 15;
          break;
        case 12:
          _context215.next = 14;
          return de_NoSuchBucketRes(parsedOutput, context);
        case 14:
          throw _context215.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context215.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context215.stop();
      }
    }, _callee215);
  }));
  return function de_ListObjectsV2CommandError(_x429, _x430) {
    return _ref215.apply(this, arguments);
  };
}()));
var de_ListObjectVersionsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref216 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee216(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee216$(_context216) {
      while (1) switch (_context216.prev = _context216.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context216.next = 2;
            break;
          }
          return _context216.abrupt("return", de_ListObjectVersionsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context216.t0 = __expectNonNull;
          _context216.t1 = __expectObject;
          _context216.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context216.t2 = _context216.sent;
          _context216.t3 = (0, _context216.t1)(_context216.t2);
          data = (0, _context216.t0)(_context216.t3, "body");
          if (data.CommonPrefixes === "") {
            contents.CommonPrefixes = [];
          } else if (data["CommonPrefixes"] !== undefined) {
            contents.CommonPrefixes = de_CommonPrefixList(__getArrayIfSingleItem(data["CommonPrefixes"]), context);
          }
          if (data.DeleteMarker === "") {
            contents.DeleteMarkers = [];
          } else if (data["DeleteMarker"] !== undefined) {
            contents.DeleteMarkers = de_DeleteMarkers(__getArrayIfSingleItem(data["DeleteMarker"]), context);
          }
          if (data["Delimiter"] !== undefined) {
            contents.Delimiter = __expectString(data["Delimiter"]);
          }
          if (data["EncodingType"] !== undefined) {
            contents.EncodingType = __expectString(data["EncodingType"]);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["KeyMarker"] !== undefined) {
            contents.KeyMarker = __expectString(data["KeyMarker"]);
          }
          if (data["MaxKeys"] !== undefined) {
            contents.MaxKeys = __strictParseInt32(data["MaxKeys"]);
          }
          if (data["Name"] !== undefined) {
            contents.Name = __expectString(data["Name"]);
          }
          if (data["NextKeyMarker"] !== undefined) {
            contents.NextKeyMarker = __expectString(data["NextKeyMarker"]);
          }
          if (data["NextVersionIdMarker"] !== undefined) {
            contents.NextVersionIdMarker = __expectString(data["NextVersionIdMarker"]);
          }
          if (data["Prefix"] !== undefined) {
            contents.Prefix = __expectString(data["Prefix"]);
          }
          if (data["VersionIdMarker"] !== undefined) {
            contents.VersionIdMarker = __expectString(data["VersionIdMarker"]);
          }
          if (data.Version === "") {
            contents.Versions = [];
          } else if (data["Version"] !== undefined) {
            contents.Versions = de_ObjectVersionList(__getArrayIfSingleItem(data["Version"]), context);
          }
          return _context216.abrupt("return", contents);
        case 24:
        case "end":
          return _context216.stop();
      }
    }, _callee216);
  }));
  return function de_ListObjectVersionsCommand(_x431, _x432) {
    return _ref216.apply(this, arguments);
  };
}()));
var de_ListObjectVersionsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref217 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee217(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee217$(_context217) {
      while (1) switch (_context217.prev = _context217.next) {
        case 0:
          _context217.t0 = _objectSpread;
          _context217.t1 = _objectSpread({}, output);
          _context217.t2 = {};
          _context217.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context217.t3 = _context217.sent;
          _context217.t4 = {
            body: _context217.t3
          };
          parsedOutput = (0, _context217.t0)(_context217.t1, _context217.t2, _context217.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context217.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context217.stop();
      }
    }, _callee217);
  }));
  return function de_ListObjectVersionsCommandError(_x433, _x434) {
    return _ref217.apply(this, arguments);
  };
}()));
var de_ListPartsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref218 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee218(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee218$(_context218) {
      while (1) switch (_context218.prev = _context218.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context218.next = 2;
            break;
          }
          return _context218.abrupt("return", de_ListPartsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            AbortDate: [function () {
              return void 0 !== output.headers["x-amz-abort-date"];
            }, function () {
              return __expectNonNull(__parseRfc7231DateTime(output.headers["x-amz-abort-date"]));
            }],
            AbortRuleId: [, output.headers["x-amz-abort-rule-id"]],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context218.t0 = __expectNonNull;
          _context218.t1 = __expectObject;
          _context218.next = 7;
          return Aws_restXml_parseBody(output.body, context);
        case 7:
          _context218.t2 = _context218.sent;
          _context218.t3 = (0, _context218.t1)(_context218.t2);
          data = (0, _context218.t0)(_context218.t3, "body");
          if (data["Bucket"] !== undefined) {
            contents.Bucket = __expectString(data["Bucket"]);
          }
          if (data["ChecksumAlgorithm"] !== undefined) {
            contents.ChecksumAlgorithm = __expectString(data["ChecksumAlgorithm"]);
          }
          if (data["Initiator"] !== undefined) {
            contents.Initiator = de_Initiator(data["Initiator"], context);
          }
          if (data["IsTruncated"] !== undefined) {
            contents.IsTruncated = __parseBoolean(data["IsTruncated"]);
          }
          if (data["Key"] !== undefined) {
            contents.Key = __expectString(data["Key"]);
          }
          if (data["MaxParts"] !== undefined) {
            contents.MaxParts = __strictParseInt32(data["MaxParts"]);
          }
          if (data["NextPartNumberMarker"] !== undefined) {
            contents.NextPartNumberMarker = __expectString(data["NextPartNumberMarker"]);
          }
          if (data["Owner"] !== undefined) {
            contents.Owner = de_Owner(data["Owner"], context);
          }
          if (data["PartNumberMarker"] !== undefined) {
            contents.PartNumberMarker = __expectString(data["PartNumberMarker"]);
          }
          if (data.Part === "") {
            contents.Parts = [];
          } else if (data["Part"] !== undefined) {
            contents.Parts = de_Parts(__getArrayIfSingleItem(data["Part"]), context);
          }
          if (data["StorageClass"] !== undefined) {
            contents.StorageClass = __expectString(data["StorageClass"]);
          }
          if (data["UploadId"] !== undefined) {
            contents.UploadId = __expectString(data["UploadId"]);
          }
          return _context218.abrupt("return", contents);
        case 23:
        case "end":
          return _context218.stop();
      }
    }, _callee218);
  }));
  return function de_ListPartsCommand(_x435, _x436) {
    return _ref218.apply(this, arguments);
  };
}()));
var de_ListPartsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref219 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee219(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee219$(_context219) {
      while (1) switch (_context219.prev = _context219.next) {
        case 0:
          _context219.t0 = _objectSpread;
          _context219.t1 = _objectSpread({}, output);
          _context219.t2 = {};
          _context219.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context219.t3 = _context219.sent;
          _context219.t4 = {
            body: _context219.t3
          };
          parsedOutput = (0, _context219.t0)(_context219.t1, _context219.t2, _context219.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context219.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context219.stop();
      }
    }, _callee219);
  }));
  return function de_ListPartsCommandError(_x437, _x438) {
    return _ref219.apply(this, arguments);
  };
}()));
var de_PutBucketAccelerateConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref220 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee220(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee220$(_context220) {
      while (1) switch (_context220.prev = _context220.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context220.next = 2;
            break;
          }
          return _context220.abrupt("return", de_PutBucketAccelerateConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context220.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context220.abrupt("return", contents);
        case 6:
        case "end":
          return _context220.stop();
      }
    }, _callee220);
  }));
  return function de_PutBucketAccelerateConfigurationCommand(_x439, _x440) {
    return _ref220.apply(this, arguments);
  };
}()));
var de_PutBucketAccelerateConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref221 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee221(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee221$(_context221) {
      while (1) switch (_context221.prev = _context221.next) {
        case 0:
          _context221.t0 = _objectSpread;
          _context221.t1 = _objectSpread({}, output);
          _context221.t2 = {};
          _context221.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context221.t3 = _context221.sent;
          _context221.t4 = {
            body: _context221.t3
          };
          parsedOutput = (0, _context221.t0)(_context221.t1, _context221.t2, _context221.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context221.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context221.stop();
      }
    }, _callee221);
  }));
  return function de_PutBucketAccelerateConfigurationCommandError(_x441, _x442) {
    return _ref221.apply(this, arguments);
  };
}()));
var de_PutBucketAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref222 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee222(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee222$(_context222) {
      while (1) switch (_context222.prev = _context222.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context222.next = 2;
            break;
          }
          return _context222.abrupt("return", de_PutBucketAclCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context222.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context222.abrupt("return", contents);
        case 6:
        case "end":
          return _context222.stop();
      }
    }, _callee222);
  }));
  return function de_PutBucketAclCommand(_x443, _x444) {
    return _ref222.apply(this, arguments);
  };
}()));
var de_PutBucketAclCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref223 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee223(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee223$(_context223) {
      while (1) switch (_context223.prev = _context223.next) {
        case 0:
          _context223.t0 = _objectSpread;
          _context223.t1 = _objectSpread({}, output);
          _context223.t2 = {};
          _context223.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context223.t3 = _context223.sent;
          _context223.t4 = {
            body: _context223.t3
          };
          parsedOutput = (0, _context223.t0)(_context223.t1, _context223.t2, _context223.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context223.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context223.stop();
      }
    }, _callee223);
  }));
  return function de_PutBucketAclCommandError(_x445, _x446) {
    return _ref223.apply(this, arguments);
  };
}()));
var de_PutBucketAnalyticsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref224 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee224(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee224$(_context224) {
      while (1) switch (_context224.prev = _context224.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context224.next = 2;
            break;
          }
          return _context224.abrupt("return", de_PutBucketAnalyticsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context224.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context224.abrupt("return", contents);
        case 6:
        case "end":
          return _context224.stop();
      }
    }, _callee224);
  }));
  return function de_PutBucketAnalyticsConfigurationCommand(_x447, _x448) {
    return _ref224.apply(this, arguments);
  };
}()));
var de_PutBucketAnalyticsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref225 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee225(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee225$(_context225) {
      while (1) switch (_context225.prev = _context225.next) {
        case 0:
          _context225.t0 = _objectSpread;
          _context225.t1 = _objectSpread({}, output);
          _context225.t2 = {};
          _context225.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context225.t3 = _context225.sent;
          _context225.t4 = {
            body: _context225.t3
          };
          parsedOutput = (0, _context225.t0)(_context225.t1, _context225.t2, _context225.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context225.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context225.stop();
      }
    }, _callee225);
  }));
  return function de_PutBucketAnalyticsConfigurationCommandError(_x449, _x450) {
    return _ref225.apply(this, arguments);
  };
}()));
var de_PutBucketCorsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref226 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee226(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee226$(_context226) {
      while (1) switch (_context226.prev = _context226.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context226.next = 2;
            break;
          }
          return _context226.abrupt("return", de_PutBucketCorsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context226.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context226.abrupt("return", contents);
        case 6:
        case "end":
          return _context226.stop();
      }
    }, _callee226);
  }));
  return function de_PutBucketCorsCommand(_x451, _x452) {
    return _ref226.apply(this, arguments);
  };
}()));
var de_PutBucketCorsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref227 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee227(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee227$(_context227) {
      while (1) switch (_context227.prev = _context227.next) {
        case 0:
          _context227.t0 = _objectSpread;
          _context227.t1 = _objectSpread({}, output);
          _context227.t2 = {};
          _context227.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context227.t3 = _context227.sent;
          _context227.t4 = {
            body: _context227.t3
          };
          parsedOutput = (0, _context227.t0)(_context227.t1, _context227.t2, _context227.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context227.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context227.stop();
      }
    }, _callee227);
  }));
  return function de_PutBucketCorsCommandError(_x453, _x454) {
    return _ref227.apply(this, arguments);
  };
}()));
var de_PutBucketEncryptionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref228 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee228(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee228$(_context228) {
      while (1) switch (_context228.prev = _context228.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context228.next = 2;
            break;
          }
          return _context228.abrupt("return", de_PutBucketEncryptionCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context228.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context228.abrupt("return", contents);
        case 6:
        case "end":
          return _context228.stop();
      }
    }, _callee228);
  }));
  return function de_PutBucketEncryptionCommand(_x455, _x456) {
    return _ref228.apply(this, arguments);
  };
}()));
var de_PutBucketEncryptionCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref229 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee229(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee229$(_context229) {
      while (1) switch (_context229.prev = _context229.next) {
        case 0:
          _context229.t0 = _objectSpread;
          _context229.t1 = _objectSpread({}, output);
          _context229.t2 = {};
          _context229.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context229.t3 = _context229.sent;
          _context229.t4 = {
            body: _context229.t3
          };
          parsedOutput = (0, _context229.t0)(_context229.t1, _context229.t2, _context229.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context229.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context229.stop();
      }
    }, _callee229);
  }));
  return function de_PutBucketEncryptionCommandError(_x457, _x458) {
    return _ref229.apply(this, arguments);
  };
}()));
var de_PutBucketIntelligentTieringConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref230 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee230(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee230$(_context230) {
      while (1) switch (_context230.prev = _context230.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context230.next = 2;
            break;
          }
          return _context230.abrupt("return", de_PutBucketIntelligentTieringConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context230.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context230.abrupt("return", contents);
        case 6:
        case "end":
          return _context230.stop();
      }
    }, _callee230);
  }));
  return function de_PutBucketIntelligentTieringConfigurationCommand(_x459, _x460) {
    return _ref230.apply(this, arguments);
  };
}()));
var de_PutBucketIntelligentTieringConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref231 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee231(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee231$(_context231) {
      while (1) switch (_context231.prev = _context231.next) {
        case 0:
          _context231.t0 = _objectSpread;
          _context231.t1 = _objectSpread({}, output);
          _context231.t2 = {};
          _context231.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context231.t3 = _context231.sent;
          _context231.t4 = {
            body: _context231.t3
          };
          parsedOutput = (0, _context231.t0)(_context231.t1, _context231.t2, _context231.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context231.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context231.stop();
      }
    }, _callee231);
  }));
  return function de_PutBucketIntelligentTieringConfigurationCommandError(_x461, _x462) {
    return _ref231.apply(this, arguments);
  };
}()));
var de_PutBucketInventoryConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref232 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee232(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee232$(_context232) {
      while (1) switch (_context232.prev = _context232.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context232.next = 2;
            break;
          }
          return _context232.abrupt("return", de_PutBucketInventoryConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context232.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context232.abrupt("return", contents);
        case 6:
        case "end":
          return _context232.stop();
      }
    }, _callee232);
  }));
  return function de_PutBucketInventoryConfigurationCommand(_x463, _x464) {
    return _ref232.apply(this, arguments);
  };
}()));
var de_PutBucketInventoryConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref233 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee233(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee233$(_context233) {
      while (1) switch (_context233.prev = _context233.next) {
        case 0:
          _context233.t0 = _objectSpread;
          _context233.t1 = _objectSpread({}, output);
          _context233.t2 = {};
          _context233.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context233.t3 = _context233.sent;
          _context233.t4 = {
            body: _context233.t3
          };
          parsedOutput = (0, _context233.t0)(_context233.t1, _context233.t2, _context233.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context233.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context233.stop();
      }
    }, _callee233);
  }));
  return function de_PutBucketInventoryConfigurationCommandError(_x465, _x466) {
    return _ref233.apply(this, arguments);
  };
}()));
var de_PutBucketLifecycleConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref234 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee234(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee234$(_context234) {
      while (1) switch (_context234.prev = _context234.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context234.next = 2;
            break;
          }
          return _context234.abrupt("return", de_PutBucketLifecycleConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context234.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context234.abrupt("return", contents);
        case 6:
        case "end":
          return _context234.stop();
      }
    }, _callee234);
  }));
  return function de_PutBucketLifecycleConfigurationCommand(_x467, _x468) {
    return _ref234.apply(this, arguments);
  };
}()));
var de_PutBucketLifecycleConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref235 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee235(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee235$(_context235) {
      while (1) switch (_context235.prev = _context235.next) {
        case 0:
          _context235.t0 = _objectSpread;
          _context235.t1 = _objectSpread({}, output);
          _context235.t2 = {};
          _context235.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context235.t3 = _context235.sent;
          _context235.t4 = {
            body: _context235.t3
          };
          parsedOutput = (0, _context235.t0)(_context235.t1, _context235.t2, _context235.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context235.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context235.stop();
      }
    }, _callee235);
  }));
  return function de_PutBucketLifecycleConfigurationCommandError(_x469, _x470) {
    return _ref235.apply(this, arguments);
  };
}()));
var de_PutBucketLoggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref236 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee236(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee236$(_context236) {
      while (1) switch (_context236.prev = _context236.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context236.next = 2;
            break;
          }
          return _context236.abrupt("return", de_PutBucketLoggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context236.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context236.abrupt("return", contents);
        case 6:
        case "end":
          return _context236.stop();
      }
    }, _callee236);
  }));
  return function de_PutBucketLoggingCommand(_x471, _x472) {
    return _ref236.apply(this, arguments);
  };
}()));
var de_PutBucketLoggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref237 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee237(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee237$(_context237) {
      while (1) switch (_context237.prev = _context237.next) {
        case 0:
          _context237.t0 = _objectSpread;
          _context237.t1 = _objectSpread({}, output);
          _context237.t2 = {};
          _context237.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context237.t3 = _context237.sent;
          _context237.t4 = {
            body: _context237.t3
          };
          parsedOutput = (0, _context237.t0)(_context237.t1, _context237.t2, _context237.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context237.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context237.stop();
      }
    }, _callee237);
  }));
  return function de_PutBucketLoggingCommandError(_x473, _x474) {
    return _ref237.apply(this, arguments);
  };
}()));
var de_PutBucketMetricsConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref238 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee238(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee238$(_context238) {
      while (1) switch (_context238.prev = _context238.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context238.next = 2;
            break;
          }
          return _context238.abrupt("return", de_PutBucketMetricsConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context238.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context238.abrupt("return", contents);
        case 6:
        case "end":
          return _context238.stop();
      }
    }, _callee238);
  }));
  return function de_PutBucketMetricsConfigurationCommand(_x475, _x476) {
    return _ref238.apply(this, arguments);
  };
}()));
var de_PutBucketMetricsConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref239 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee239(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee239$(_context239) {
      while (1) switch (_context239.prev = _context239.next) {
        case 0:
          _context239.t0 = _objectSpread;
          _context239.t1 = _objectSpread({}, output);
          _context239.t2 = {};
          _context239.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context239.t3 = _context239.sent;
          _context239.t4 = {
            body: _context239.t3
          };
          parsedOutput = (0, _context239.t0)(_context239.t1, _context239.t2, _context239.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context239.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context239.stop();
      }
    }, _callee239);
  }));
  return function de_PutBucketMetricsConfigurationCommandError(_x477, _x478) {
    return _ref239.apply(this, arguments);
  };
}()));
var de_PutBucketNotificationConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref240 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee240(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee240$(_context240) {
      while (1) switch (_context240.prev = _context240.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context240.next = 2;
            break;
          }
          return _context240.abrupt("return", de_PutBucketNotificationConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context240.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context240.abrupt("return", contents);
        case 6:
        case "end":
          return _context240.stop();
      }
    }, _callee240);
  }));
  return function de_PutBucketNotificationConfigurationCommand(_x479, _x480) {
    return _ref240.apply(this, arguments);
  };
}()));
var de_PutBucketNotificationConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref241 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee241(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee241$(_context241) {
      while (1) switch (_context241.prev = _context241.next) {
        case 0:
          _context241.t0 = _objectSpread;
          _context241.t1 = _objectSpread({}, output);
          _context241.t2 = {};
          _context241.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context241.t3 = _context241.sent;
          _context241.t4 = {
            body: _context241.t3
          };
          parsedOutput = (0, _context241.t0)(_context241.t1, _context241.t2, _context241.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context241.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context241.stop();
      }
    }, _callee241);
  }));
  return function de_PutBucketNotificationConfigurationCommandError(_x481, _x482) {
    return _ref241.apply(this, arguments);
  };
}()));
var de_PutBucketOwnershipControlsCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref242 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee242(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee242$(_context242) {
      while (1) switch (_context242.prev = _context242.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context242.next = 2;
            break;
          }
          return _context242.abrupt("return", de_PutBucketOwnershipControlsCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context242.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context242.abrupt("return", contents);
        case 6:
        case "end":
          return _context242.stop();
      }
    }, _callee242);
  }));
  return function de_PutBucketOwnershipControlsCommand(_x483, _x484) {
    return _ref242.apply(this, arguments);
  };
}()));
var de_PutBucketOwnershipControlsCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref243 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee243(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee243$(_context243) {
      while (1) switch (_context243.prev = _context243.next) {
        case 0:
          _context243.t0 = _objectSpread;
          _context243.t1 = _objectSpread({}, output);
          _context243.t2 = {};
          _context243.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context243.t3 = _context243.sent;
          _context243.t4 = {
            body: _context243.t3
          };
          parsedOutput = (0, _context243.t0)(_context243.t1, _context243.t2, _context243.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context243.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context243.stop();
      }
    }, _callee243);
  }));
  return function de_PutBucketOwnershipControlsCommandError(_x485, _x486) {
    return _ref243.apply(this, arguments);
  };
}()));
var de_PutBucketPolicyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref244 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee244(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee244$(_context244) {
      while (1) switch (_context244.prev = _context244.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context244.next = 2;
            break;
          }
          return _context244.abrupt("return", de_PutBucketPolicyCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context244.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context244.abrupt("return", contents);
        case 6:
        case "end":
          return _context244.stop();
      }
    }, _callee244);
  }));
  return function de_PutBucketPolicyCommand(_x487, _x488) {
    return _ref244.apply(this, arguments);
  };
}()));
var de_PutBucketPolicyCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref245 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee245(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee245$(_context245) {
      while (1) switch (_context245.prev = _context245.next) {
        case 0:
          _context245.t0 = _objectSpread;
          _context245.t1 = _objectSpread({}, output);
          _context245.t2 = {};
          _context245.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context245.t3 = _context245.sent;
          _context245.t4 = {
            body: _context245.t3
          };
          parsedOutput = (0, _context245.t0)(_context245.t1, _context245.t2, _context245.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context245.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context245.stop();
      }
    }, _callee245);
  }));
  return function de_PutBucketPolicyCommandError(_x489, _x490) {
    return _ref245.apply(this, arguments);
  };
}()));
var de_PutBucketReplicationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref246 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee246(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee246$(_context246) {
      while (1) switch (_context246.prev = _context246.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context246.next = 2;
            break;
          }
          return _context246.abrupt("return", de_PutBucketReplicationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context246.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context246.abrupt("return", contents);
        case 6:
        case "end":
          return _context246.stop();
      }
    }, _callee246);
  }));
  return function de_PutBucketReplicationCommand(_x491, _x492) {
    return _ref246.apply(this, arguments);
  };
}()));
var de_PutBucketReplicationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref247 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee247(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee247$(_context247) {
      while (1) switch (_context247.prev = _context247.next) {
        case 0:
          _context247.t0 = _objectSpread;
          _context247.t1 = _objectSpread({}, output);
          _context247.t2 = {};
          _context247.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context247.t3 = _context247.sent;
          _context247.t4 = {
            body: _context247.t3
          };
          parsedOutput = (0, _context247.t0)(_context247.t1, _context247.t2, _context247.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context247.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context247.stop();
      }
    }, _callee247);
  }));
  return function de_PutBucketReplicationCommandError(_x493, _x494) {
    return _ref247.apply(this, arguments);
  };
}()));
var de_PutBucketRequestPaymentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref248 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee248(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee248$(_context248) {
      while (1) switch (_context248.prev = _context248.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context248.next = 2;
            break;
          }
          return _context248.abrupt("return", de_PutBucketRequestPaymentCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context248.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context248.abrupt("return", contents);
        case 6:
        case "end":
          return _context248.stop();
      }
    }, _callee248);
  }));
  return function de_PutBucketRequestPaymentCommand(_x495, _x496) {
    return _ref248.apply(this, arguments);
  };
}()));
var de_PutBucketRequestPaymentCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref249 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee249(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee249$(_context249) {
      while (1) switch (_context249.prev = _context249.next) {
        case 0:
          _context249.t0 = _objectSpread;
          _context249.t1 = _objectSpread({}, output);
          _context249.t2 = {};
          _context249.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context249.t3 = _context249.sent;
          _context249.t4 = {
            body: _context249.t3
          };
          parsedOutput = (0, _context249.t0)(_context249.t1, _context249.t2, _context249.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context249.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context249.stop();
      }
    }, _callee249);
  }));
  return function de_PutBucketRequestPaymentCommandError(_x497, _x498) {
    return _ref249.apply(this, arguments);
  };
}()));
var de_PutBucketTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref250 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee250(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee250$(_context250) {
      while (1) switch (_context250.prev = _context250.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context250.next = 2;
            break;
          }
          return _context250.abrupt("return", de_PutBucketTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context250.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context250.abrupt("return", contents);
        case 6:
        case "end":
          return _context250.stop();
      }
    }, _callee250);
  }));
  return function de_PutBucketTaggingCommand(_x499, _x500) {
    return _ref250.apply(this, arguments);
  };
}()));
var de_PutBucketTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref251 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee251(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee251$(_context251) {
      while (1) switch (_context251.prev = _context251.next) {
        case 0:
          _context251.t0 = _objectSpread;
          _context251.t1 = _objectSpread({}, output);
          _context251.t2 = {};
          _context251.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context251.t3 = _context251.sent;
          _context251.t4 = {
            body: _context251.t3
          };
          parsedOutput = (0, _context251.t0)(_context251.t1, _context251.t2, _context251.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context251.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context251.stop();
      }
    }, _callee251);
  }));
  return function de_PutBucketTaggingCommandError(_x501, _x502) {
    return _ref251.apply(this, arguments);
  };
}()));
var de_PutBucketVersioningCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref252 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee252(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee252$(_context252) {
      while (1) switch (_context252.prev = _context252.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context252.next = 2;
            break;
          }
          return _context252.abrupt("return", de_PutBucketVersioningCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context252.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context252.abrupt("return", contents);
        case 6:
        case "end":
          return _context252.stop();
      }
    }, _callee252);
  }));
  return function de_PutBucketVersioningCommand(_x503, _x504) {
    return _ref252.apply(this, arguments);
  };
}()));
var de_PutBucketVersioningCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref253 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee253(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee253$(_context253) {
      while (1) switch (_context253.prev = _context253.next) {
        case 0:
          _context253.t0 = _objectSpread;
          _context253.t1 = _objectSpread({}, output);
          _context253.t2 = {};
          _context253.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context253.t3 = _context253.sent;
          _context253.t4 = {
            body: _context253.t3
          };
          parsedOutput = (0, _context253.t0)(_context253.t1, _context253.t2, _context253.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context253.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context253.stop();
      }
    }, _callee253);
  }));
  return function de_PutBucketVersioningCommandError(_x505, _x506) {
    return _ref253.apply(this, arguments);
  };
}()));
var de_PutBucketWebsiteCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref254 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee254(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee254$(_context254) {
      while (1) switch (_context254.prev = _context254.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context254.next = 2;
            break;
          }
          return _context254.abrupt("return", de_PutBucketWebsiteCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context254.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context254.abrupt("return", contents);
        case 6:
        case "end":
          return _context254.stop();
      }
    }, _callee254);
  }));
  return function de_PutBucketWebsiteCommand(_x507, _x508) {
    return _ref254.apply(this, arguments);
  };
}()));
var de_PutBucketWebsiteCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref255 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee255(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee255$(_context255) {
      while (1) switch (_context255.prev = _context255.next) {
        case 0:
          _context255.t0 = _objectSpread;
          _context255.t1 = _objectSpread({}, output);
          _context255.t2 = {};
          _context255.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context255.t3 = _context255.sent;
          _context255.t4 = {
            body: _context255.t3
          };
          parsedOutput = (0, _context255.t0)(_context255.t1, _context255.t2, _context255.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context255.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context255.stop();
      }
    }, _callee255);
  }));
  return function de_PutBucketWebsiteCommandError(_x509, _x510) {
    return _ref255.apply(this, arguments);
  };
}()));
var de_PutObjectCommand = /*#__PURE__*/function () {
  var _ref256 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee256(output, context) {
    var contents;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee256$(_context256) {
      while (1) switch (_context256.prev = _context256.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context256.next = 2;
            break;
          }
          return _context256.abrupt("return", de_PutObjectCommandError(output, context));
        case 2:
          contents = object_mapping_map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            Expiration: [, output.headers["x-amz-expiration"]],
            ETag: [, output.headers["etag"]],
            ChecksumCRC32: [, output.headers["x-amz-checksum-crc32"]],
            ChecksumCRC32C: [, output.headers["x-amz-checksum-crc32c"]],
            ChecksumSHA1: [, output.headers["x-amz-checksum-sha1"]],
            ChecksumSHA256: [, output.headers["x-amz-checksum-sha256"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            VersionId: [, output.headers["x-amz-version-id"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            SSEKMSEncryptionContext: [, output.headers["x-amz-server-side-encryption-context"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context256.next = 5;
          return collect_stream_body_collectBody(output.body, context);
        case 5:
          return _context256.abrupt("return", contents);
        case 6:
        case "end":
          return _context256.stop();
      }
    }, _callee256);
  }));
  return function de_PutObjectCommand(_x511, _x512) {
    return _ref256.apply(this, arguments);
  };
}();
var de_PutObjectCommandError = /*#__PURE__*/function () {
  var _ref257 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee257(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee257$(_context257) {
      while (1) switch (_context257.prev = _context257.next) {
        case 0:
          _context257.t0 = _objectSpread2;
          _context257.t1 = _objectSpread2({}, output);
          _context257.t2 = {};
          _context257.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context257.t3 = _context257.sent;
          _context257.t4 = {
            body: _context257.t3
          };
          parsedOutput = (0, _context257.t0)(_context257.t1, _context257.t2, _context257.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context257.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context257.stop();
      }
    }, _callee257);
  }));
  return function de_PutObjectCommandError(_x513, _x514) {
    return _ref257.apply(this, arguments);
  };
}();
var de_PutObjectAclCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref258 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee258(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee258$(_context258) {
      while (1) switch (_context258.prev = _context258.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context258.next = 2;
            break;
          }
          return _context258.abrupt("return", de_PutObjectAclCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context258.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context258.abrupt("return", contents);
        case 6:
        case "end":
          return _context258.stop();
      }
    }, _callee258);
  }));
  return function de_PutObjectAclCommand(_x515, _x516) {
    return _ref258.apply(this, arguments);
  };
}()));
var de_PutObjectAclCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref259 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee259(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee259$(_context259) {
      while (1) switch (_context259.prev = _context259.next) {
        case 0:
          _context259.t0 = _objectSpread;
          _context259.t1 = _objectSpread({}, output);
          _context259.t2 = {};
          _context259.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context259.t3 = _context259.sent;
          _context259.t4 = {
            body: _context259.t3
          };
          parsedOutput = (0, _context259.t0)(_context259.t1, _context259.t2, _context259.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context259.t5 = errorCode;
          _context259.next = _context259.t5 === "NoSuchKey" ? 12 : _context259.t5 === "com.amazonaws.s3#NoSuchKey" ? 12 : 15;
          break;
        case 12:
          _context259.next = 14;
          return de_NoSuchKeyRes(parsedOutput, context);
        case 14:
          throw _context259.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context259.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context259.stop();
      }
    }, _callee259);
  }));
  return function de_PutObjectAclCommandError(_x517, _x518) {
    return _ref259.apply(this, arguments);
  };
}()));
var de_PutObjectLegalHoldCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref260 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee260(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee260$(_context260) {
      while (1) switch (_context260.prev = _context260.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context260.next = 2;
            break;
          }
          return _context260.abrupt("return", de_PutObjectLegalHoldCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context260.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context260.abrupt("return", contents);
        case 6:
        case "end":
          return _context260.stop();
      }
    }, _callee260);
  }));
  return function de_PutObjectLegalHoldCommand(_x519, _x520) {
    return _ref260.apply(this, arguments);
  };
}()));
var de_PutObjectLegalHoldCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref261 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee261(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee261$(_context261) {
      while (1) switch (_context261.prev = _context261.next) {
        case 0:
          _context261.t0 = _objectSpread;
          _context261.t1 = _objectSpread({}, output);
          _context261.t2 = {};
          _context261.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context261.t3 = _context261.sent;
          _context261.t4 = {
            body: _context261.t3
          };
          parsedOutput = (0, _context261.t0)(_context261.t1, _context261.t2, _context261.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context261.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context261.stop();
      }
    }, _callee261);
  }));
  return function de_PutObjectLegalHoldCommandError(_x521, _x522) {
    return _ref261.apply(this, arguments);
  };
}()));
var de_PutObjectLockConfigurationCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref262 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee262(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee262$(_context262) {
      while (1) switch (_context262.prev = _context262.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context262.next = 2;
            break;
          }
          return _context262.abrupt("return", de_PutObjectLockConfigurationCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context262.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context262.abrupt("return", contents);
        case 6:
        case "end":
          return _context262.stop();
      }
    }, _callee262);
  }));
  return function de_PutObjectLockConfigurationCommand(_x523, _x524) {
    return _ref262.apply(this, arguments);
  };
}()));
var de_PutObjectLockConfigurationCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref263 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee263(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee263$(_context263) {
      while (1) switch (_context263.prev = _context263.next) {
        case 0:
          _context263.t0 = _objectSpread;
          _context263.t1 = _objectSpread({}, output);
          _context263.t2 = {};
          _context263.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context263.t3 = _context263.sent;
          _context263.t4 = {
            body: _context263.t3
          };
          parsedOutput = (0, _context263.t0)(_context263.t1, _context263.t2, _context263.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context263.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context263.stop();
      }
    }, _callee263);
  }));
  return function de_PutObjectLockConfigurationCommandError(_x525, _x526) {
    return _ref263.apply(this, arguments);
  };
}()));
var de_PutObjectRetentionCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref264 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee264(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee264$(_context264) {
      while (1) switch (_context264.prev = _context264.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context264.next = 2;
            break;
          }
          return _context264.abrupt("return", de_PutObjectRetentionCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context264.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context264.abrupt("return", contents);
        case 6:
        case "end":
          return _context264.stop();
      }
    }, _callee264);
  }));
  return function de_PutObjectRetentionCommand(_x527, _x528) {
    return _ref264.apply(this, arguments);
  };
}()));
var de_PutObjectRetentionCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref265 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee265(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee265$(_context265) {
      while (1) switch (_context265.prev = _context265.next) {
        case 0:
          _context265.t0 = _objectSpread;
          _context265.t1 = _objectSpread({}, output);
          _context265.t2 = {};
          _context265.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context265.t3 = _context265.sent;
          _context265.t4 = {
            body: _context265.t3
          };
          parsedOutput = (0, _context265.t0)(_context265.t1, _context265.t2, _context265.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context265.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context265.stop();
      }
    }, _callee265);
  }));
  return function de_PutObjectRetentionCommandError(_x529, _x530) {
    return _ref265.apply(this, arguments);
  };
}()));
var de_PutObjectTaggingCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref266 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee266(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee266$(_context266) {
      while (1) switch (_context266.prev = _context266.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context266.next = 2;
            break;
          }
          return _context266.abrupt("return", de_PutObjectTaggingCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            VersionId: [, output.headers["x-amz-version-id"]]
          });
          _context266.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context266.abrupt("return", contents);
        case 6:
        case "end":
          return _context266.stop();
      }
    }, _callee266);
  }));
  return function de_PutObjectTaggingCommand(_x531, _x532) {
    return _ref266.apply(this, arguments);
  };
}()));
var de_PutObjectTaggingCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref267 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee267(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee267$(_context267) {
      while (1) switch (_context267.prev = _context267.next) {
        case 0:
          _context267.t0 = _objectSpread;
          _context267.t1 = _objectSpread({}, output);
          _context267.t2 = {};
          _context267.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context267.t3 = _context267.sent;
          _context267.t4 = {
            body: _context267.t3
          };
          parsedOutput = (0, _context267.t0)(_context267.t1, _context267.t2, _context267.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context267.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context267.stop();
      }
    }, _callee267);
  }));
  return function de_PutObjectTaggingCommandError(_x533, _x534) {
    return _ref267.apply(this, arguments);
  };
}()));
var de_PutPublicAccessBlockCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref268 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee268(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee268$(_context268) {
      while (1) switch (_context268.prev = _context268.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context268.next = 2;
            break;
          }
          return _context268.abrupt("return", de_PutPublicAccessBlockCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context268.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context268.abrupt("return", contents);
        case 6:
        case "end":
          return _context268.stop();
      }
    }, _callee268);
  }));
  return function de_PutPublicAccessBlockCommand(_x535, _x536) {
    return _ref268.apply(this, arguments);
  };
}()));
var de_PutPublicAccessBlockCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref269 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee269(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee269$(_context269) {
      while (1) switch (_context269.prev = _context269.next) {
        case 0:
          _context269.t0 = _objectSpread;
          _context269.t1 = _objectSpread({}, output);
          _context269.t2 = {};
          _context269.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context269.t3 = _context269.sent;
          _context269.t4 = {
            body: _context269.t3
          };
          parsedOutput = (0, _context269.t0)(_context269.t1, _context269.t2, _context269.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context269.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context269.stop();
      }
    }, _callee269);
  }));
  return function de_PutPublicAccessBlockCommandError(_x537, _x538) {
    return _ref269.apply(this, arguments);
  };
}()));
var de_RestoreObjectCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref270 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee270(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee270$(_context270) {
      while (1) switch (_context270.prev = _context270.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context270.next = 2;
            break;
          }
          return _context270.abrupt("return", de_RestoreObjectCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            RequestCharged: [, output.headers["x-amz-request-charged"]],
            RestoreOutputPath: [, output.headers["x-amz-restore-output-path"]]
          });
          _context270.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context270.abrupt("return", contents);
        case 6:
        case "end":
          return _context270.stop();
      }
    }, _callee270);
  }));
  return function de_RestoreObjectCommand(_x539, _x540) {
    return _ref270.apply(this, arguments);
  };
}()));
var de_RestoreObjectCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref271 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee271(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee271$(_context271) {
      while (1) switch (_context271.prev = _context271.next) {
        case 0:
          _context271.t0 = _objectSpread;
          _context271.t1 = _objectSpread({}, output);
          _context271.t2 = {};
          _context271.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context271.t3 = _context271.sent;
          _context271.t4 = {
            body: _context271.t3
          };
          parsedOutput = (0, _context271.t0)(_context271.t1, _context271.t2, _context271.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          _context271.t5 = errorCode;
          _context271.next = _context271.t5 === "ObjectAlreadyInActiveTierError" ? 12 : _context271.t5 === "com.amazonaws.s3#ObjectAlreadyInActiveTierError" ? 12 : 15;
          break;
        case 12:
          _context271.next = 14;
          return de_ObjectAlreadyInActiveTierErrorRes(parsedOutput, context);
        case 14:
          throw _context271.sent;
        case 15:
          parsedBody = parsedOutput.body;
          return _context271.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 17:
        case "end":
          return _context271.stop();
      }
    }, _callee271);
  }));
  return function de_RestoreObjectCommandError(_x541, _x542) {
    return _ref271.apply(this, arguments);
  };
}()));
var de_SelectObjectContentCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref272 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee272(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee272$(_context272) {
      while (1) switch (_context272.prev = _context272.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context272.next = 2;
            break;
          }
          return _context272.abrupt("return", de_SelectObjectContentCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          data = output.body;
          contents.Payload = de_SelectObjectContentEventStream(data, context);
          return _context272.abrupt("return", contents);
        case 6:
        case "end":
          return _context272.stop();
      }
    }, _callee272);
  }));
  return function de_SelectObjectContentCommand(_x543, _x544) {
    return _ref272.apply(this, arguments);
  };
}()));
var de_SelectObjectContentCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref273 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee273(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee273$(_context273) {
      while (1) switch (_context273.prev = _context273.next) {
        case 0:
          _context273.t0 = _objectSpread;
          _context273.t1 = _objectSpread({}, output);
          _context273.t2 = {};
          _context273.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context273.t3 = _context273.sent;
          _context273.t4 = {
            body: _context273.t3
          };
          parsedOutput = (0, _context273.t0)(_context273.t1, _context273.t2, _context273.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context273.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context273.stop();
      }
    }, _callee273);
  }));
  return function de_SelectObjectContentCommandError(_x545, _x546) {
    return _ref273.apply(this, arguments);
  };
}()));
var de_UploadPartCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref274 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee274(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee274$(_context274) {
      while (1) switch (_context274.prev = _context274.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context274.next = 2;
            break;
          }
          return _context274.abrupt("return", de_UploadPartCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            ETag: [, output.headers["etag"]],
            ChecksumCRC32: [, output.headers["x-amz-checksum-crc32"]],
            ChecksumCRC32C: [, output.headers["x-amz-checksum-crc32c"]],
            ChecksumSHA1: [, output.headers["x-amz-checksum-sha1"]],
            ChecksumSHA256: [, output.headers["x-amz-checksum-sha256"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context274.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context274.abrupt("return", contents);
        case 6:
        case "end":
          return _context274.stop();
      }
    }, _callee274);
  }));
  return function de_UploadPartCommand(_x547, _x548) {
    return _ref274.apply(this, arguments);
  };
}()));
var de_UploadPartCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref275 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee275(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee275$(_context275) {
      while (1) switch (_context275.prev = _context275.next) {
        case 0:
          _context275.t0 = _objectSpread;
          _context275.t1 = _objectSpread({}, output);
          _context275.t2 = {};
          _context275.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context275.t3 = _context275.sent;
          _context275.t4 = {
            body: _context275.t3
          };
          parsedOutput = (0, _context275.t0)(_context275.t1, _context275.t2, _context275.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context275.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context275.stop();
      }
    }, _callee275);
  }));
  return function de_UploadPartCommandError(_x549, _x550) {
    return _ref275.apply(this, arguments);
  };
}()));
var de_UploadPartCopyCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref276 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee276(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee276$(_context276) {
      while (1) switch (_context276.prev = _context276.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context276.next = 2;
            break;
          }
          return _context276.abrupt("return", de_UploadPartCopyCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output),
            CopySourceVersionId: [, output.headers["x-amz-copy-source-version-id"]],
            ServerSideEncryption: [, output.headers["x-amz-server-side-encryption"]],
            SSECustomerAlgorithm: [, output.headers["x-amz-server-side-encryption-customer-algorithm"]],
            SSECustomerKeyMD5: [, output.headers["x-amz-server-side-encryption-customer-key-md5"]],
            SSEKMSKeyId: [, output.headers["x-amz-server-side-encryption-aws-kms-key-id"]],
            BucketKeyEnabled: [function () {
              return void 0 !== output.headers["x-amz-server-side-encryption-bucket-key-enabled"];
            }, function () {
              return __parseBoolean(output.headers["x-amz-server-side-encryption-bucket-key-enabled"]);
            }],
            RequestCharged: [, output.headers["x-amz-request-charged"]]
          });
          _context276.t0 = __expectObject;
          _context276.next = 6;
          return Aws_restXml_parseBody(output.body, context);
        case 6:
          _context276.t1 = _context276.sent;
          data = (0, _context276.t0)(_context276.t1);
          contents.CopyPartResult = de_CopyPartResult(data, context);
          return _context276.abrupt("return", contents);
        case 10:
        case "end":
          return _context276.stop();
      }
    }, _callee276);
  }));
  return function de_UploadPartCopyCommand(_x551, _x552) {
    return _ref276.apply(this, arguments);
  };
}()));
var de_UploadPartCopyCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref277 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee277(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee277$(_context277) {
      while (1) switch (_context277.prev = _context277.next) {
        case 0:
          _context277.t0 = _objectSpread;
          _context277.t1 = _objectSpread({}, output);
          _context277.t2 = {};
          _context277.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context277.t3 = _context277.sent;
          _context277.t4 = {
            body: _context277.t3
          };
          parsedOutput = (0, _context277.t0)(_context277.t1, _context277.t2, _context277.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context277.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context277.stop();
      }
    }, _callee277);
  }));
  return function de_UploadPartCopyCommandError(_x553, _x554) {
    return _ref277.apply(this, arguments);
  };
}()));
var de_WriteGetObjectResponseCommand = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref278 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee278(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee278$(_context278) {
      while (1) switch (_context278.prev = _context278.next) {
        case 0:
          if (!(output.statusCode !== 200 && output.statusCode >= 300)) {
            _context278.next = 2;
            break;
          }
          return _context278.abrupt("return", de_WriteGetObjectResponseCommandError(output, context));
        case 2:
          contents = map({
            $metadata: Aws_restXml_deserializeMetadata(output)
          });
          _context278.next = 5;
          return collectBody(output.body, context);
        case 5:
          return _context278.abrupt("return", contents);
        case 6:
        case "end":
          return _context278.stop();
      }
    }, _callee278);
  }));
  return function de_WriteGetObjectResponseCommand(_x555, _x556) {
    return _ref278.apply(this, arguments);
  };
}()));
var de_WriteGetObjectResponseCommandError = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref279 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee279(output, context) {
    var parsedOutput, errorCode, parsedBody;
    return _regeneratorRuntime().wrap(function _callee279$(_context279) {
      while (1) switch (_context279.prev = _context279.next) {
        case 0:
          _context279.t0 = _objectSpread;
          _context279.t1 = _objectSpread({}, output);
          _context279.t2 = {};
          _context279.next = 5;
          return Aws_restXml_parseErrorBody(output.body, context);
        case 5:
          _context279.t3 = _context279.sent;
          _context279.t4 = {
            body: _context279.t3
          };
          parsedOutput = (0, _context279.t0)(_context279.t1, _context279.t2, _context279.t4);
          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
          parsedBody = parsedOutput.body;
          return _context279.abrupt("return", Aws_restXml_throwDefaultError({
            output: output,
            parsedBody: parsedBody,
            errorCode: errorCode
          }));
        case 11:
        case "end":
          return _context279.stop();
      }
    }, _callee279);
  }));
  return function de_WriteGetObjectResponseCommandError(_x557, _x558) {
    return _ref279.apply(this, arguments);
  };
}()));
var Aws_restXml_throwDefaultError = withBaseException(S3ServiceException);
var de_BucketAlreadyExistsRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref280 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee280(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee280$(_context280) {
      while (1) switch (_context280.prev = _context280.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new BucketAlreadyExists(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context280.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context280.stop();
      }
    }, _callee280);
  }));
  return function de_BucketAlreadyExistsRes(_x559, _x560) {
    return _ref280.apply(this, arguments);
  };
}()));
var de_BucketAlreadyOwnedByYouRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref281 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee281(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee281$(_context281) {
      while (1) switch (_context281.prev = _context281.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new BucketAlreadyOwnedByYou(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context281.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context281.stop();
      }
    }, _callee281);
  }));
  return function de_BucketAlreadyOwnedByYouRes(_x561, _x562) {
    return _ref281.apply(this, arguments);
  };
}()));
var de_InvalidObjectStateRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref282 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee282(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee282$(_context282) {
      while (1) switch (_context282.prev = _context282.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          if (data["AccessTier"] !== undefined) {
            contents.AccessTier = __expectString(data["AccessTier"]);
          }
          if (data["StorageClass"] !== undefined) {
            contents.StorageClass = __expectString(data["StorageClass"]);
          }
          exception = new InvalidObjectState(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context282.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 6:
        case "end":
          return _context282.stop();
      }
    }, _callee282);
  }));
  return function de_InvalidObjectStateRes(_x563, _x564) {
    return _ref282.apply(this, arguments);
  };
}()));
var de_NoSuchBucketRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref283 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee283(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee283$(_context283) {
      while (1) switch (_context283.prev = _context283.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new NoSuchBucket(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context283.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context283.stop();
      }
    }, _callee283);
  }));
  return function de_NoSuchBucketRes(_x565, _x566) {
    return _ref283.apply(this, arguments);
  };
}()));
var de_NoSuchKeyRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref284 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee284(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee284$(_context284) {
      while (1) switch (_context284.prev = _context284.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new NoSuchKey(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context284.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context284.stop();
      }
    }, _callee284);
  }));
  return function de_NoSuchKeyRes(_x567, _x568) {
    return _ref284.apply(this, arguments);
  };
}()));
var de_NoSuchUploadRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref285 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee285(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee285$(_context285) {
      while (1) switch (_context285.prev = _context285.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new NoSuchUpload(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context285.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context285.stop();
      }
    }, _callee285);
  }));
  return function de_NoSuchUploadRes(_x569, _x570) {
    return _ref285.apply(this, arguments);
  };
}()));
var de_NotFoundRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref286 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee286(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee286$(_context286) {
      while (1) switch (_context286.prev = _context286.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new NotFound(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context286.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context286.stop();
      }
    }, _callee286);
  }));
  return function de_NotFoundRes(_x571, _x572) {
    return _ref286.apply(this, arguments);
  };
}()));
var de_ObjectAlreadyInActiveTierErrorRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref287 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee287(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee287$(_context287) {
      while (1) switch (_context287.prev = _context287.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new ObjectAlreadyInActiveTierError(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context287.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context287.stop();
      }
    }, _callee287);
  }));
  return function de_ObjectAlreadyInActiveTierErrorRes(_x573, _x574) {
    return _ref287.apply(this, arguments);
  };
}()));
var de_ObjectNotInActiveTierErrorRes = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref288 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee288(parsedOutput, context) {
    var contents, data, exception;
    return _regeneratorRuntime().wrap(function _callee288$(_context288) {
      while (1) switch (_context288.prev = _context288.next) {
        case 0:
          contents = map({});
          data = parsedOutput.body;
          exception = new ObjectNotInActiveTierError(_objectSpread({
            $metadata: Aws_restXml_deserializeMetadata(parsedOutput)
          }, contents));
          return _context288.abrupt("return", __decorateServiceException(exception, parsedOutput.body));
        case 4:
        case "end":
          return _context288.stop();
      }
    }, _callee288);
  }));
  return function de_ObjectNotInActiveTierErrorRes(_x575, _x576) {
    return _ref288.apply(this, arguments);
  };
}()));
var de_SelectObjectContentEventStream = function de_SelectObjectContentEventStream(output, context) {
  return context.eventStreamMarshaller.deserialize(output, /*#__PURE__*/function () {
    var _ref289 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee289(event) {
      return _regeneratorRuntime().wrap(function _callee289$(_context289) {
        while (1) switch (_context289.prev = _context289.next) {
          case 0:
            if (!(event["Records"] != null)) {
              _context289.next = 5;
              break;
            }
            _context289.next = 3;
            return de_RecordsEvent_event(event["Records"], context);
          case 3:
            _context289.t0 = _context289.sent;
            return _context289.abrupt("return", {
              Records: _context289.t0
            });
          case 5:
            if (!(event["Stats"] != null)) {
              _context289.next = 10;
              break;
            }
            _context289.next = 8;
            return de_StatsEvent_event(event["Stats"], context);
          case 8:
            _context289.t1 = _context289.sent;
            return _context289.abrupt("return", {
              Stats: _context289.t1
            });
          case 10:
            if (!(event["Progress"] != null)) {
              _context289.next = 15;
              break;
            }
            _context289.next = 13;
            return de_ProgressEvent_event(event["Progress"], context);
          case 13:
            _context289.t2 = _context289.sent;
            return _context289.abrupt("return", {
              Progress: _context289.t2
            });
          case 15:
            if (!(event["Cont"] != null)) {
              _context289.next = 20;
              break;
            }
            _context289.next = 18;
            return de_ContinuationEvent_event(event["Cont"], context);
          case 18:
            _context289.t3 = _context289.sent;
            return _context289.abrupt("return", {
              Cont: _context289.t3
            });
          case 20:
            if (!(event["End"] != null)) {
              _context289.next = 25;
              break;
            }
            _context289.next = 23;
            return de_EndEvent_event(event["End"], context);
          case 23:
            _context289.t4 = _context289.sent;
            return _context289.abrupt("return", {
              End: _context289.t4
            });
          case 25:
            return _context289.abrupt("return", {
              $unknown: output
            });
          case 26:
          case "end":
            return _context289.stop();
        }
      }, _callee289);
    }));
    return function (_x577) {
      return _ref289.apply(this, arguments);
    };
  }());
};
var de_ContinuationEvent_event = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref290 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee290(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee290$(_context290) {
      while (1) switch (_context290.prev = _context290.next) {
        case 0:
          contents = {};
          _context290.next = 3;
          return Aws_restXml_parseBody(output.body, context);
        case 3:
          data = _context290.sent;
          Object.assign(contents, de_ContinuationEvent(data, context));
          return _context290.abrupt("return", contents);
        case 6:
        case "end":
          return _context290.stop();
      }
    }, _callee290);
  }));
  return function de_ContinuationEvent_event(_x578, _x579) {
    return _ref290.apply(this, arguments);
  };
}()));
var de_EndEvent_event = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref291 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee291(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee291$(_context291) {
      while (1) switch (_context291.prev = _context291.next) {
        case 0:
          contents = {};
          _context291.next = 3;
          return Aws_restXml_parseBody(output.body, context);
        case 3:
          data = _context291.sent;
          Object.assign(contents, de_EndEvent(data, context));
          return _context291.abrupt("return", contents);
        case 6:
        case "end":
          return _context291.stop();
      }
    }, _callee291);
  }));
  return function de_EndEvent_event(_x580, _x581) {
    return _ref291.apply(this, arguments);
  };
}()));
var de_ProgressEvent_event = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref292 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee292(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee292$(_context292) {
      while (1) switch (_context292.prev = _context292.next) {
        case 0:
          contents = {};
          _context292.next = 3;
          return Aws_restXml_parseBody(output.body, context);
        case 3:
          data = _context292.sent;
          contents.Details = de_Progress(data, context);
          return _context292.abrupt("return", contents);
        case 6:
        case "end":
          return _context292.stop();
      }
    }, _callee292);
  }));
  return function de_ProgressEvent_event(_x582, _x583) {
    return _ref292.apply(this, arguments);
  };
}()));
var de_RecordsEvent_event = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref293 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee293(output, context) {
    var contents;
    return _regeneratorRuntime().wrap(function _callee293$(_context293) {
      while (1) switch (_context293.prev = _context293.next) {
        case 0:
          contents = {};
          contents.Payload = output.body;
          return _context293.abrupt("return", contents);
        case 3:
        case "end":
          return _context293.stop();
      }
    }, _callee293);
  }));
  return function de_RecordsEvent_event(_x584, _x585) {
    return _ref293.apply(this, arguments);
  };
}()));
var de_StatsEvent_event = /*#__PURE__*/(/* unused pure expression or super */ null && (function () {
  var _ref294 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee294(output, context) {
    var contents, data;
    return _regeneratorRuntime().wrap(function _callee294$(_context294) {
      while (1) switch (_context294.prev = _context294.next) {
        case 0:
          contents = {};
          _context294.next = 3;
          return Aws_restXml_parseBody(output.body, context);
        case 3:
          data = _context294.sent;
          contents.Details = de_Stats(data, context);
          return _context294.abrupt("return", contents);
        case 6:
        case "end":
          return _context294.stop();
      }
    }, _callee294);
  }));
  return function de_StatsEvent_event(_x586, _x587) {
    return _ref294.apply(this, arguments);
  };
}()));
var se_AbortIncompleteMultipartUpload = function se_AbortIncompleteMultipartUpload(input, context) {
  var bodyNode = new __XmlNode("AbortIncompleteMultipartUpload");
  if (input.DaysAfterInitiation != null) {
    var node = __XmlNode.of("DaysAfterInitiation", String(input.DaysAfterInitiation)).withName("DaysAfterInitiation");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_AccelerateConfiguration = function se_AccelerateConfiguration(input, context) {
  var bodyNode = new __XmlNode("AccelerateConfiguration");
  if (input.Status != null) {
    var node = __XmlNode.of("BucketAccelerateStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_AccessControlPolicy = function se_AccessControlPolicy(input, context) {
  var bodyNode = new __XmlNode("AccessControlPolicy");
  if (input.Grants != null) {
    var nodes = se_Grants(input.Grants, context);
    var containerNode = new __XmlNode("AccessControlList");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  if (input.Owner != null) {
    var node = se_Owner(input.Owner, context).withName("Owner");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_AccessControlTranslation = function se_AccessControlTranslation(input, context) {
  var bodyNode = new __XmlNode("AccessControlTranslation");
  if (input.Owner != null) {
    var node = __XmlNode.of("OwnerOverride", input.Owner).withName("Owner");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_AllowedHeaders = function se_AllowedHeaders(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("AllowedHeader", entry);
    return node.withName("member");
  });
};
var se_AllowedMethods = function se_AllowedMethods(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("AllowedMethod", entry);
    return node.withName("member");
  });
};
var se_AllowedOrigins = function se_AllowedOrigins(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("AllowedOrigin", entry);
    return node.withName("member");
  });
};
var se_AnalyticsAndOperator = function se_AnalyticsAndOperator(input, context) {
  var bodyNode = new __XmlNode("AnalyticsAndOperator");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tags != null) {
    var nodes = se_TagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_AnalyticsConfiguration = function se_AnalyticsConfiguration(input, context) {
  var bodyNode = new __XmlNode("AnalyticsConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("AnalyticsId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.Filter != null) {
    var _node6 = se_AnalyticsFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node6);
  }
  if (input.StorageClassAnalysis != null) {
    var _node7 = se_StorageClassAnalysis(input.StorageClassAnalysis, context).withName("StorageClassAnalysis");
    bodyNode.addChildNode(_node7);
  }
  return bodyNode;
};
var se_AnalyticsExportDestination = function se_AnalyticsExportDestination(input, context) {
  var bodyNode = new __XmlNode("AnalyticsExportDestination");
  if (input.S3BucketDestination != null) {
    var node = se_AnalyticsS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_AnalyticsFilter = function se_AnalyticsFilter(input, context) {
  var bodyNode = new __XmlNode("AnalyticsFilter");
  AnalyticsFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = __XmlNode.of("Prefix", value).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = Aws_restXml_se_Tag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = se_AnalyticsAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }
      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};
var se_AnalyticsS3BucketDestination = function se_AnalyticsS3BucketDestination(input, context) {
  var bodyNode = new __XmlNode("AnalyticsS3BucketDestination");
  if (input.Format != null) {
    var node = __XmlNode.of("AnalyticsS3ExportFileFormat", input.Format).withName("Format");
    bodyNode.addChildNode(node);
  }
  if (input.BucketAccountId != null) {
    var _node8 = __XmlNode.of("AccountId", input.BucketAccountId).withName("BucketAccountId");
    bodyNode.addChildNode(_node8);
  }
  if (input.Bucket != null) {
    var _node9 = __XmlNode.of("BucketName", input.Bucket).withName("Bucket");
    bodyNode.addChildNode(_node9);
  }
  if (input.Prefix != null) {
    var _node10 = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(_node10);
  }
  return bodyNode;
};
var se_BucketLifecycleConfiguration = function se_BucketLifecycleConfiguration(input, context) {
  var bodyNode = new __XmlNode("BucketLifecycleConfiguration");
  if (input.Rules != null) {
    var nodes = se_LifecycleRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_BucketLoggingStatus = function se_BucketLoggingStatus(input, context) {
  var bodyNode = new __XmlNode("BucketLoggingStatus");
  if (input.LoggingEnabled != null) {
    var node = se_LoggingEnabled(input.LoggingEnabled, context).withName("LoggingEnabled");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_CompletedMultipartUpload = function se_CompletedMultipartUpload(input, context) {
  var bodyNode = new __XmlNode("CompletedMultipartUpload");
  if (input.Parts != null) {
    var nodes = se_CompletedPartList(input.Parts, context);
    nodes.map(function (node) {
      node = node.withName("Part");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_CompletedPart = function se_CompletedPart(input, context) {
  var bodyNode = new __XmlNode("CompletedPart");
  if (input.ETag != null) {
    var node = __XmlNode.of("ETag", input.ETag).withName("ETag");
    bodyNode.addChildNode(node);
  }
  if (input.ChecksumCRC32 != null) {
    var _node11 = __XmlNode.of("ChecksumCRC32", input.ChecksumCRC32).withName("ChecksumCRC32");
    bodyNode.addChildNode(_node11);
  }
  if (input.ChecksumCRC32C != null) {
    var _node12 = __XmlNode.of("ChecksumCRC32C", input.ChecksumCRC32C).withName("ChecksumCRC32C");
    bodyNode.addChildNode(_node12);
  }
  if (input.ChecksumSHA1 != null) {
    var _node13 = __XmlNode.of("ChecksumSHA1", input.ChecksumSHA1).withName("ChecksumSHA1");
    bodyNode.addChildNode(_node13);
  }
  if (input.ChecksumSHA256 != null) {
    var _node14 = __XmlNode.of("ChecksumSHA256", input.ChecksumSHA256).withName("ChecksumSHA256");
    bodyNode.addChildNode(_node14);
  }
  if (input.PartNumber != null) {
    var _node15 = __XmlNode.of("PartNumber", String(input.PartNumber)).withName("PartNumber");
    bodyNode.addChildNode(_node15);
  }
  return bodyNode;
};
var se_CompletedPartList = function se_CompletedPartList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_CompletedPart(entry, context);
    return node.withName("member");
  });
};
var se_Condition = function se_Condition(input, context) {
  var bodyNode = new __XmlNode("Condition");
  if (input.HttpErrorCodeReturnedEquals != null) {
    var node = __XmlNode.of("HttpErrorCodeReturnedEquals", input.HttpErrorCodeReturnedEquals).withName("HttpErrorCodeReturnedEquals");
    bodyNode.addChildNode(node);
  }
  if (input.KeyPrefixEquals != null) {
    var _node16 = __XmlNode.of("KeyPrefixEquals", input.KeyPrefixEquals).withName("KeyPrefixEquals");
    bodyNode.addChildNode(_node16);
  }
  return bodyNode;
};
var se_CORSConfiguration = function se_CORSConfiguration(input, context) {
  var bodyNode = new __XmlNode("CORSConfiguration");
  if (input.CORSRules != null) {
    var nodes = se_CORSRules(input.CORSRules, context);
    nodes.map(function (node) {
      node = node.withName("CORSRule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_CORSRule = function se_CORSRule(input, context) {
  var bodyNode = new __XmlNode("CORSRule");
  if (input.ID != null) {
    var node = __XmlNode.of("ID", input.ID).withName("ID");
    bodyNode.addChildNode(node);
  }
  if (input.AllowedHeaders != null) {
    var nodes = se_AllowedHeaders(input.AllowedHeaders, context);
    nodes.map(function (node) {
      node = node.withName("AllowedHeader");
      bodyNode.addChildNode(node);
    });
  }
  if (input.AllowedMethods != null) {
    var _nodes = se_AllowedMethods(input.AllowedMethods, context);
    _nodes.map(function (node) {
      node = node.withName("AllowedMethod");
      bodyNode.addChildNode(node);
    });
  }
  if (input.AllowedOrigins != null) {
    var _nodes2 = se_AllowedOrigins(input.AllowedOrigins, context);
    _nodes2.map(function (node) {
      node = node.withName("AllowedOrigin");
      bodyNode.addChildNode(node);
    });
  }
  if (input.ExposeHeaders != null) {
    var _nodes3 = se_ExposeHeaders(input.ExposeHeaders, context);
    _nodes3.map(function (node) {
      node = node.withName("ExposeHeader");
      bodyNode.addChildNode(node);
    });
  }
  if (input.MaxAgeSeconds != null) {
    var _node17 = __XmlNode.of("MaxAgeSeconds", String(input.MaxAgeSeconds)).withName("MaxAgeSeconds");
    bodyNode.addChildNode(_node17);
  }
  return bodyNode;
};
var se_CORSRules = function se_CORSRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_CORSRule(entry, context);
    return node.withName("member");
  });
};
var se_CreateBucketConfiguration = function se_CreateBucketConfiguration(input, context) {
  var bodyNode = new __XmlNode("CreateBucketConfiguration");
  if (input.LocationConstraint != null) {
    var node = __XmlNode.of("BucketLocationConstraint", input.LocationConstraint).withName("LocationConstraint");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_CSVInput = function se_CSVInput(input, context) {
  var bodyNode = new __XmlNode("CSVInput");
  if (input.FileHeaderInfo != null) {
    var node = __XmlNode.of("FileHeaderInfo", input.FileHeaderInfo).withName("FileHeaderInfo");
    bodyNode.addChildNode(node);
  }
  if (input.Comments != null) {
    var _node18 = __XmlNode.of("Comments", input.Comments).withName("Comments");
    bodyNode.addChildNode(_node18);
  }
  if (input.QuoteEscapeCharacter != null) {
    var _node19 = __XmlNode.of("QuoteEscapeCharacter", input.QuoteEscapeCharacter).withName("QuoteEscapeCharacter");
    bodyNode.addChildNode(_node19);
  }
  if (input.RecordDelimiter != null) {
    var _node20 = __XmlNode.of("RecordDelimiter", input.RecordDelimiter).withName("RecordDelimiter");
    bodyNode.addChildNode(_node20);
  }
  if (input.FieldDelimiter != null) {
    var _node21 = __XmlNode.of("FieldDelimiter", input.FieldDelimiter).withName("FieldDelimiter");
    bodyNode.addChildNode(_node21);
  }
  if (input.QuoteCharacter != null) {
    var _node22 = __XmlNode.of("QuoteCharacter", input.QuoteCharacter).withName("QuoteCharacter");
    bodyNode.addChildNode(_node22);
  }
  if (input.AllowQuotedRecordDelimiter != null) {
    var _node23 = __XmlNode.of("AllowQuotedRecordDelimiter", String(input.AllowQuotedRecordDelimiter)).withName("AllowQuotedRecordDelimiter");
    bodyNode.addChildNode(_node23);
  }
  return bodyNode;
};
var se_CSVOutput = function se_CSVOutput(input, context) {
  var bodyNode = new __XmlNode("CSVOutput");
  if (input.QuoteFields != null) {
    var node = __XmlNode.of("QuoteFields", input.QuoteFields).withName("QuoteFields");
    bodyNode.addChildNode(node);
  }
  if (input.QuoteEscapeCharacter != null) {
    var _node24 = __XmlNode.of("QuoteEscapeCharacter", input.QuoteEscapeCharacter).withName("QuoteEscapeCharacter");
    bodyNode.addChildNode(_node24);
  }
  if (input.RecordDelimiter != null) {
    var _node25 = __XmlNode.of("RecordDelimiter", input.RecordDelimiter).withName("RecordDelimiter");
    bodyNode.addChildNode(_node25);
  }
  if (input.FieldDelimiter != null) {
    var _node26 = __XmlNode.of("FieldDelimiter", input.FieldDelimiter).withName("FieldDelimiter");
    bodyNode.addChildNode(_node26);
  }
  if (input.QuoteCharacter != null) {
    var _node27 = __XmlNode.of("QuoteCharacter", input.QuoteCharacter).withName("QuoteCharacter");
    bodyNode.addChildNode(_node27);
  }
  return bodyNode;
};
var se_DefaultRetention = function se_DefaultRetention(input, context) {
  var bodyNode = new __XmlNode("DefaultRetention");
  if (input.Mode != null) {
    var node = __XmlNode.of("ObjectLockRetentionMode", input.Mode).withName("Mode");
    bodyNode.addChildNode(node);
  }
  if (input.Days != null) {
    var _node28 = __XmlNode.of("Days", String(input.Days)).withName("Days");
    bodyNode.addChildNode(_node28);
  }
  if (input.Years != null) {
    var _node29 = __XmlNode.of("Years", String(input.Years)).withName("Years");
    bodyNode.addChildNode(_node29);
  }
  return bodyNode;
};
var se_Delete = function se_Delete(input, context) {
  var bodyNode = new __XmlNode("Delete");
  if (input.Objects != null) {
    var nodes = se_ObjectIdentifierList(input.Objects, context);
    nodes.map(function (node) {
      node = node.withName("Object");
      bodyNode.addChildNode(node);
    });
  }
  if (input.Quiet != null) {
    var node = __XmlNode.of("Quiet", String(input.Quiet)).withName("Quiet");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_DeleteMarkerReplication = function se_DeleteMarkerReplication(input, context) {
  var bodyNode = new __XmlNode("DeleteMarkerReplication");
  if (input.Status != null) {
    var node = __XmlNode.of("DeleteMarkerReplicationStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_Destination = function se_Destination(input, context) {
  var bodyNode = new __XmlNode("Destination");
  if (input.Bucket != null) {
    var node = __XmlNode.of("BucketName", input.Bucket).withName("Bucket");
    bodyNode.addChildNode(node);
  }
  if (input.Account != null) {
    var _node30 = __XmlNode.of("AccountId", input.Account).withName("Account");
    bodyNode.addChildNode(_node30);
  }
  if (input.StorageClass != null) {
    var _node31 = __XmlNode.of("StorageClass", input.StorageClass).withName("StorageClass");
    bodyNode.addChildNode(_node31);
  }
  if (input.AccessControlTranslation != null) {
    var _node32 = se_AccessControlTranslation(input.AccessControlTranslation, context).withName("AccessControlTranslation");
    bodyNode.addChildNode(_node32);
  }
  if (input.EncryptionConfiguration != null) {
    var _node33 = se_EncryptionConfiguration(input.EncryptionConfiguration, context).withName("EncryptionConfiguration");
    bodyNode.addChildNode(_node33);
  }
  if (input.ReplicationTime != null) {
    var _node34 = se_ReplicationTime(input.ReplicationTime, context).withName("ReplicationTime");
    bodyNode.addChildNode(_node34);
  }
  if (input.Metrics != null) {
    var _node35 = se_Metrics(input.Metrics, context).withName("Metrics");
    bodyNode.addChildNode(_node35);
  }
  return bodyNode;
};
var se_Encryption = function se_Encryption(input, context) {
  var bodyNode = new __XmlNode("Encryption");
  if (input.EncryptionType != null) {
    var node = __XmlNode.of("ServerSideEncryption", input.EncryptionType).withName("EncryptionType");
    bodyNode.addChildNode(node);
  }
  if (input.KMSKeyId != null) {
    var _node36 = __XmlNode.of("SSEKMSKeyId", input.KMSKeyId).withName("KMSKeyId");
    bodyNode.addChildNode(_node36);
  }
  if (input.KMSContext != null) {
    var _node37 = __XmlNode.of("KMSContext", input.KMSContext).withName("KMSContext");
    bodyNode.addChildNode(_node37);
  }
  return bodyNode;
};
var se_EncryptionConfiguration = function se_EncryptionConfiguration(input, context) {
  var bodyNode = new __XmlNode("EncryptionConfiguration");
  if (input.ReplicaKmsKeyID != null) {
    var node = __XmlNode.of("ReplicaKmsKeyID", input.ReplicaKmsKeyID).withName("ReplicaKmsKeyID");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_ErrorDocument = function se_ErrorDocument(input, context) {
  var bodyNode = new __XmlNode("ErrorDocument");
  if (input.Key != null) {
    var node = __XmlNode.of("ObjectKey", input.Key).withName("Key");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_EventBridgeConfiguration = function se_EventBridgeConfiguration(input, context) {
  var bodyNode = new __XmlNode("EventBridgeConfiguration");
  return bodyNode;
};
var se_EventList = function se_EventList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("Event", entry);
    return node.withName("member");
  });
};
var se_ExistingObjectReplication = function se_ExistingObjectReplication(input, context) {
  var bodyNode = new __XmlNode("ExistingObjectReplication");
  if (input.Status != null) {
    var node = __XmlNode.of("ExistingObjectReplicationStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_ExposeHeaders = function se_ExposeHeaders(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("ExposeHeader", entry);
    return node.withName("member");
  });
};
var se_FilterRule = function se_FilterRule(input, context) {
  var bodyNode = new __XmlNode("FilterRule");
  if (input.Name != null) {
    var node = __XmlNode.of("FilterRuleName", input.Name).withName("Name");
    bodyNode.addChildNode(node);
  }
  if (input.Value != null) {
    var _node38 = __XmlNode.of("FilterRuleValue", input.Value).withName("Value");
    bodyNode.addChildNode(_node38);
  }
  return bodyNode;
};
var se_FilterRuleList = function se_FilterRuleList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_FilterRule(entry, context);
    return node.withName("member");
  });
};
var se_GlacierJobParameters = function se_GlacierJobParameters(input, context) {
  var bodyNode = new __XmlNode("GlacierJobParameters");
  if (input.Tier != null) {
    var node = __XmlNode.of("Tier", input.Tier).withName("Tier");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_Grant = function se_Grant(input, context) {
  var bodyNode = new __XmlNode("Grant");
  if (input.Grantee != null) {
    var node = se_Grantee(input.Grantee, context).withName("Grantee");
    node.addAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
    bodyNode.addChildNode(node);
  }
  if (input.Permission != null) {
    var _node39 = __XmlNode.of("Permission", input.Permission).withName("Permission");
    bodyNode.addChildNode(_node39);
  }
  return bodyNode;
};
var se_Grantee = function se_Grantee(input, context) {
  var bodyNode = new __XmlNode("Grantee");
  if (input.DisplayName != null) {
    var node = __XmlNode.of("DisplayName", input.DisplayName).withName("DisplayName");
    bodyNode.addChildNode(node);
  }
  if (input.EmailAddress != null) {
    var _node40 = __XmlNode.of("EmailAddress", input.EmailAddress).withName("EmailAddress");
    bodyNode.addChildNode(_node40);
  }
  if (input.ID != null) {
    var _node41 = __XmlNode.of("ID", input.ID).withName("ID");
    bodyNode.addChildNode(_node41);
  }
  if (input.URI != null) {
    var _node42 = __XmlNode.of("URI", input.URI).withName("URI");
    bodyNode.addChildNode(_node42);
  }
  if (input.Type != null) {
    bodyNode.addAttribute("xsi:type", input.Type);
  }
  return bodyNode;
};
var se_Grants = function se_Grants(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_Grant(entry, context);
    return node.withName("Grant");
  });
};
var se_IndexDocument = function se_IndexDocument(input, context) {
  var bodyNode = new __XmlNode("IndexDocument");
  if (input.Suffix != null) {
    var node = __XmlNode.of("Suffix", input.Suffix).withName("Suffix");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_InputSerialization = function se_InputSerialization(input, context) {
  var bodyNode = new __XmlNode("InputSerialization");
  if (input.CSV != null) {
    var node = se_CSVInput(input.CSV, context).withName("CSV");
    bodyNode.addChildNode(node);
  }
  if (input.CompressionType != null) {
    var _node43 = __XmlNode.of("CompressionType", input.CompressionType).withName("CompressionType");
    bodyNode.addChildNode(_node43);
  }
  if (input.JSON != null) {
    var _node44 = se_JSONInput(input.JSON, context).withName("JSON");
    bodyNode.addChildNode(_node44);
  }
  if (input.Parquet != null) {
    var _node45 = se_ParquetInput(input.Parquet, context).withName("Parquet");
    bodyNode.addChildNode(_node45);
  }
  return bodyNode;
};
var se_IntelligentTieringAndOperator = function se_IntelligentTieringAndOperator(input, context) {
  var bodyNode = new __XmlNode("IntelligentTieringAndOperator");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tags != null) {
    var nodes = se_TagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_IntelligentTieringConfiguration = function se_IntelligentTieringConfiguration(input, context) {
  var bodyNode = new __XmlNode("IntelligentTieringConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("IntelligentTieringId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.Filter != null) {
    var _node46 = se_IntelligentTieringFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node46);
  }
  if (input.Status != null) {
    var _node47 = __XmlNode.of("IntelligentTieringStatus", input.Status).withName("Status");
    bodyNode.addChildNode(_node47);
  }
  if (input.Tierings != null) {
    var nodes = se_TieringList(input.Tierings, context);
    nodes.map(function (node) {
      node = node.withName("Tiering");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_IntelligentTieringFilter = function se_IntelligentTieringFilter(input, context) {
  var bodyNode = new __XmlNode("IntelligentTieringFilter");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tag != null) {
    var _node48 = Aws_restXml_se_Tag(input.Tag, context).withName("Tag");
    bodyNode.addChildNode(_node48);
  }
  if (input.And != null) {
    var _node49 = se_IntelligentTieringAndOperator(input.And, context).withName("And");
    bodyNode.addChildNode(_node49);
  }
  return bodyNode;
};
var se_InventoryConfiguration = function se_InventoryConfiguration(input, context) {
  var bodyNode = new __XmlNode("InventoryConfiguration");
  if (input.Destination != null) {
    var node = se_InventoryDestination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(node);
  }
  if (input.IsEnabled != null) {
    var _node50 = __XmlNode.of("IsEnabled", String(input.IsEnabled)).withName("IsEnabled");
    bodyNode.addChildNode(_node50);
  }
  if (input.Filter != null) {
    var _node51 = se_InventoryFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node51);
  }
  if (input.Id != null) {
    var _node52 = __XmlNode.of("InventoryId", input.Id).withName("Id");
    bodyNode.addChildNode(_node52);
  }
  if (input.IncludedObjectVersions != null) {
    var _node53 = __XmlNode.of("InventoryIncludedObjectVersions", input.IncludedObjectVersions).withName("IncludedObjectVersions");
    bodyNode.addChildNode(_node53);
  }
  if (input.OptionalFields != null) {
    var nodes = se_InventoryOptionalFields(input.OptionalFields, context);
    var containerNode = new __XmlNode("OptionalFields");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  if (input.Schedule != null) {
    var _node54 = se_InventorySchedule(input.Schedule, context).withName("Schedule");
    bodyNode.addChildNode(_node54);
  }
  return bodyNode;
};
var se_InventoryDestination = function se_InventoryDestination(input, context) {
  var bodyNode = new __XmlNode("InventoryDestination");
  if (input.S3BucketDestination != null) {
    var node = se_InventoryS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_InventoryEncryption = function se_InventoryEncryption(input, context) {
  var bodyNode = new __XmlNode("InventoryEncryption");
  if (input.SSES3 != null) {
    var node = se_SSES3(input.SSES3, context).withName("SSE-S3");
    bodyNode.addChildNode(node);
  }
  if (input.SSEKMS != null) {
    var _node55 = se_SSEKMS(input.SSEKMS, context).withName("SSE-KMS");
    bodyNode.addChildNode(_node55);
  }
  return bodyNode;
};
var se_InventoryFilter = function se_InventoryFilter(input, context) {
  var bodyNode = new __XmlNode("InventoryFilter");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_InventoryOptionalFields = function se_InventoryOptionalFields(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = __XmlNode.of("InventoryOptionalField", entry);
    return node.withName("Field");
  });
};
var se_InventoryS3BucketDestination = function se_InventoryS3BucketDestination(input, context) {
  var bodyNode = new __XmlNode("InventoryS3BucketDestination");
  if (input.AccountId != null) {
    var node = __XmlNode.of("AccountId", input.AccountId).withName("AccountId");
    bodyNode.addChildNode(node);
  }
  if (input.Bucket != null) {
    var _node56 = __XmlNode.of("BucketName", input.Bucket).withName("Bucket");
    bodyNode.addChildNode(_node56);
  }
  if (input.Format != null) {
    var _node57 = __XmlNode.of("InventoryFormat", input.Format).withName("Format");
    bodyNode.addChildNode(_node57);
  }
  if (input.Prefix != null) {
    var _node58 = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(_node58);
  }
  if (input.Encryption != null) {
    var _node59 = se_InventoryEncryption(input.Encryption, context).withName("Encryption");
    bodyNode.addChildNode(_node59);
  }
  return bodyNode;
};
var se_InventorySchedule = function se_InventorySchedule(input, context) {
  var bodyNode = new __XmlNode("InventorySchedule");
  if (input.Frequency != null) {
    var node = __XmlNode.of("InventoryFrequency", input.Frequency).withName("Frequency");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_JSONInput = function se_JSONInput(input, context) {
  var bodyNode = new __XmlNode("JSONInput");
  if (input.Type != null) {
    var node = __XmlNode.of("JSONType", input.Type).withName("Type");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_JSONOutput = function se_JSONOutput(input, context) {
  var bodyNode = new __XmlNode("JSONOutput");
  if (input.RecordDelimiter != null) {
    var node = __XmlNode.of("RecordDelimiter", input.RecordDelimiter).withName("RecordDelimiter");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_LambdaFunctionConfiguration = function se_LambdaFunctionConfiguration(input, context) {
  var bodyNode = new __XmlNode("LambdaFunctionConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("NotificationId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.LambdaFunctionArn != null) {
    var _node60 = __XmlNode.of("LambdaFunctionArn", input.LambdaFunctionArn).withName("CloudFunction");
    bodyNode.addChildNode(_node60);
  }
  if (input.Events != null) {
    var nodes = se_EventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }
  if (input.Filter != null) {
    var _node61 = se_NotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node61);
  }
  return bodyNode;
};
var se_LambdaFunctionConfigurationList = function se_LambdaFunctionConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_LambdaFunctionConfiguration(entry, context);
    return node.withName("member");
  });
};
var se_LifecycleExpiration = function se_LifecycleExpiration(input, context) {
  var bodyNode = new __XmlNode("LifecycleExpiration");
  if (input.Date != null) {
    var node = __XmlNode.of("Date", (input.Date.toISOString().split(".")[0] + "Z").toString()).withName("Date");
    bodyNode.addChildNode(node);
  }
  if (input.Days != null) {
    var _node62 = __XmlNode.of("Days", String(input.Days)).withName("Days");
    bodyNode.addChildNode(_node62);
  }
  if (input.ExpiredObjectDeleteMarker != null) {
    var _node63 = __XmlNode.of("ExpiredObjectDeleteMarker", String(input.ExpiredObjectDeleteMarker)).withName("ExpiredObjectDeleteMarker");
    bodyNode.addChildNode(_node63);
  }
  return bodyNode;
};
var se_LifecycleRule = function se_LifecycleRule(input, context) {
  var bodyNode = new __XmlNode("LifecycleRule");
  if (input.Expiration != null) {
    var node = se_LifecycleExpiration(input.Expiration, context).withName("Expiration");
    bodyNode.addChildNode(node);
  }
  if (input.ID != null) {
    var _node64 = __XmlNode.of("ID", input.ID).withName("ID");
    bodyNode.addChildNode(_node64);
  }
  if (input.Prefix != null) {
    var _node65 = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(_node65);
  }
  if (input.Filter != null) {
    var _node66 = se_LifecycleRuleFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node66);
  }
  if (input.Status != null) {
    var _node67 = __XmlNode.of("ExpirationStatus", input.Status).withName("Status");
    bodyNode.addChildNode(_node67);
  }
  if (input.Transitions != null) {
    var nodes = se_TransitionList(input.Transitions, context);
    nodes.map(function (node) {
      node = node.withName("Transition");
      bodyNode.addChildNode(node);
    });
  }
  if (input.NoncurrentVersionTransitions != null) {
    var _nodes4 = se_NoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);
    _nodes4.map(function (node) {
      node = node.withName("NoncurrentVersionTransition");
      bodyNode.addChildNode(node);
    });
  }
  if (input.NoncurrentVersionExpiration != null) {
    var _node68 = se_NoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName("NoncurrentVersionExpiration");
    bodyNode.addChildNode(_node68);
  }
  if (input.AbortIncompleteMultipartUpload != null) {
    var _node69 = se_AbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName("AbortIncompleteMultipartUpload");
    bodyNode.addChildNode(_node69);
  }
  return bodyNode;
};
var se_LifecycleRuleAndOperator = function se_LifecycleRuleAndOperator(input, context) {
  var bodyNode = new __XmlNode("LifecycleRuleAndOperator");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tags != null) {
    var nodes = se_TagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }
  if (input.ObjectSizeGreaterThan != null) {
    var _node70 = __XmlNode.of("ObjectSizeGreaterThanBytes", String(input.ObjectSizeGreaterThan)).withName("ObjectSizeGreaterThan");
    bodyNode.addChildNode(_node70);
  }
  if (input.ObjectSizeLessThan != null) {
    var _node71 = __XmlNode.of("ObjectSizeLessThanBytes", String(input.ObjectSizeLessThan)).withName("ObjectSizeLessThan");
    bodyNode.addChildNode(_node71);
  }
  return bodyNode;
};
var se_LifecycleRuleFilter = function se_LifecycleRuleFilter(input, context) {
  var bodyNode = new __XmlNode("LifecycleRuleFilter");
  LifecycleRuleFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = __XmlNode.of("Prefix", value).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = Aws_restXml_se_Tag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    ObjectSizeGreaterThan: function ObjectSizeGreaterThan(value) {
      var node = __XmlNode.of("ObjectSizeGreaterThanBytes", String(value)).withName("ObjectSizeGreaterThan");
      bodyNode.addChildNode(node);
    },
    ObjectSizeLessThan: function ObjectSizeLessThan(value) {
      var node = __XmlNode.of("ObjectSizeLessThanBytes", String(value)).withName("ObjectSizeLessThan");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = se_LifecycleRuleAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }
      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};
var se_LifecycleRules = function se_LifecycleRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_LifecycleRule(entry, context);
    return node.withName("member");
  });
};
var se_LoggingEnabled = function se_LoggingEnabled(input, context) {
  var bodyNode = new __XmlNode("LoggingEnabled");
  if (input.TargetBucket != null) {
    var node = __XmlNode.of("TargetBucket", input.TargetBucket).withName("TargetBucket");
    bodyNode.addChildNode(node);
  }
  if (input.TargetGrants != null) {
    var nodes = se_TargetGrants(input.TargetGrants, context);
    var containerNode = new __XmlNode("TargetGrants");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  if (input.TargetPrefix != null) {
    var _node72 = __XmlNode.of("TargetPrefix", input.TargetPrefix).withName("TargetPrefix");
    bodyNode.addChildNode(_node72);
  }
  return bodyNode;
};
var se_MetadataEntry = function se_MetadataEntry(input, context) {
  var bodyNode = new __XmlNode("MetadataEntry");
  if (input.Name != null) {
    var node = __XmlNode.of("MetadataKey", input.Name).withName("Name");
    bodyNode.addChildNode(node);
  }
  if (input.Value != null) {
    var _node73 = __XmlNode.of("MetadataValue", input.Value).withName("Value");
    bodyNode.addChildNode(_node73);
  }
  return bodyNode;
};
var se_Metrics = function se_Metrics(input, context) {
  var bodyNode = new __XmlNode("Metrics");
  if (input.Status != null) {
    var node = __XmlNode.of("MetricsStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  if (input.EventThreshold != null) {
    var _node74 = se_ReplicationTimeValue(input.EventThreshold, context).withName("EventThreshold");
    bodyNode.addChildNode(_node74);
  }
  return bodyNode;
};
var se_MetricsAndOperator = function se_MetricsAndOperator(input, context) {
  var bodyNode = new __XmlNode("MetricsAndOperator");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tags != null) {
    var nodes = se_TagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }
  if (input.AccessPointArn != null) {
    var _node75 = __XmlNode.of("AccessPointArn", input.AccessPointArn).withName("AccessPointArn");
    bodyNode.addChildNode(_node75);
  }
  return bodyNode;
};
var se_MetricsConfiguration = function se_MetricsConfiguration(input, context) {
  var bodyNode = new __XmlNode("MetricsConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("MetricsId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.Filter != null) {
    var _node76 = se_MetricsFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node76);
  }
  return bodyNode;
};
var se_MetricsFilter = function se_MetricsFilter(input, context) {
  var bodyNode = new __XmlNode("MetricsFilter");
  MetricsFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = __XmlNode.of("Prefix", value).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = Aws_restXml_se_Tag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    AccessPointArn: function AccessPointArn(value) {
      var node = __XmlNode.of("AccessPointArn", value).withName("AccessPointArn");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = se_MetricsAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }
      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};
var se_NoncurrentVersionExpiration = function se_NoncurrentVersionExpiration(input, context) {
  var bodyNode = new __XmlNode("NoncurrentVersionExpiration");
  if (input.NoncurrentDays != null) {
    var node = __XmlNode.of("Days", String(input.NoncurrentDays)).withName("NoncurrentDays");
    bodyNode.addChildNode(node);
  }
  if (input.NewerNoncurrentVersions != null) {
    var _node77 = __XmlNode.of("VersionCount", String(input.NewerNoncurrentVersions)).withName("NewerNoncurrentVersions");
    bodyNode.addChildNode(_node77);
  }
  return bodyNode;
};
var se_NoncurrentVersionTransition = function se_NoncurrentVersionTransition(input, context) {
  var bodyNode = new __XmlNode("NoncurrentVersionTransition");
  if (input.NoncurrentDays != null) {
    var node = __XmlNode.of("Days", String(input.NoncurrentDays)).withName("NoncurrentDays");
    bodyNode.addChildNode(node);
  }
  if (input.StorageClass != null) {
    var _node78 = __XmlNode.of("TransitionStorageClass", input.StorageClass).withName("StorageClass");
    bodyNode.addChildNode(_node78);
  }
  if (input.NewerNoncurrentVersions != null) {
    var _node79 = __XmlNode.of("VersionCount", String(input.NewerNoncurrentVersions)).withName("NewerNoncurrentVersions");
    bodyNode.addChildNode(_node79);
  }
  return bodyNode;
};
var se_NoncurrentVersionTransitionList = function se_NoncurrentVersionTransitionList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_NoncurrentVersionTransition(entry, context);
    return node.withName("member");
  });
};
var se_NotificationConfiguration = function se_NotificationConfiguration(input, context) {
  var bodyNode = new __XmlNode("NotificationConfiguration");
  if (input.TopicConfigurations != null) {
    var nodes = se_TopicConfigurationList(input.TopicConfigurations, context);
    nodes.map(function (node) {
      node = node.withName("TopicConfiguration");
      bodyNode.addChildNode(node);
    });
  }
  if (input.QueueConfigurations != null) {
    var _nodes5 = se_QueueConfigurationList(input.QueueConfigurations, context);
    _nodes5.map(function (node) {
      node = node.withName("QueueConfiguration");
      bodyNode.addChildNode(node);
    });
  }
  if (input.LambdaFunctionConfigurations != null) {
    var _nodes6 = se_LambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);
    _nodes6.map(function (node) {
      node = node.withName("CloudFunctionConfiguration");
      bodyNode.addChildNode(node);
    });
  }
  if (input.EventBridgeConfiguration != null) {
    var node = se_EventBridgeConfiguration(input.EventBridgeConfiguration, context).withName("EventBridgeConfiguration");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_NotificationConfigurationFilter = function se_NotificationConfigurationFilter(input, context) {
  var bodyNode = new __XmlNode("NotificationConfigurationFilter");
  if (input.Key != null) {
    var node = se_S3KeyFilter(input.Key, context).withName("S3Key");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_ObjectIdentifier = function se_ObjectIdentifier(input, context) {
  var bodyNode = new __XmlNode("ObjectIdentifier");
  if (input.Key != null) {
    var node = __XmlNode.of("ObjectKey", input.Key).withName("Key");
    bodyNode.addChildNode(node);
  }
  if (input.VersionId != null) {
    var _node80 = __XmlNode.of("ObjectVersionId", input.VersionId).withName("VersionId");
    bodyNode.addChildNode(_node80);
  }
  return bodyNode;
};
var se_ObjectIdentifierList = function se_ObjectIdentifierList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_ObjectIdentifier(entry, context);
    return node.withName("member");
  });
};
var se_ObjectLockConfiguration = function se_ObjectLockConfiguration(input, context) {
  var bodyNode = new __XmlNode("ObjectLockConfiguration");
  if (input.ObjectLockEnabled != null) {
    var node = __XmlNode.of("ObjectLockEnabled", input.ObjectLockEnabled).withName("ObjectLockEnabled");
    bodyNode.addChildNode(node);
  }
  if (input.Rule != null) {
    var _node81 = se_ObjectLockRule(input.Rule, context).withName("Rule");
    bodyNode.addChildNode(_node81);
  }
  return bodyNode;
};
var se_ObjectLockLegalHold = function se_ObjectLockLegalHold(input, context) {
  var bodyNode = new __XmlNode("ObjectLockLegalHold");
  if (input.Status != null) {
    var node = __XmlNode.of("ObjectLockLegalHoldStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_ObjectLockRetention = function se_ObjectLockRetention(input, context) {
  var bodyNode = new __XmlNode("ObjectLockRetention");
  if (input.Mode != null) {
    var node = __XmlNode.of("ObjectLockRetentionMode", input.Mode).withName("Mode");
    bodyNode.addChildNode(node);
  }
  if (input.RetainUntilDate != null) {
    var _node82 = __XmlNode.of("Date", (input.RetainUntilDate.toISOString().split(".")[0] + "Z").toString()).withName("RetainUntilDate");
    bodyNode.addChildNode(_node82);
  }
  return bodyNode;
};
var se_ObjectLockRule = function se_ObjectLockRule(input, context) {
  var bodyNode = new __XmlNode("ObjectLockRule");
  if (input.DefaultRetention != null) {
    var node = se_DefaultRetention(input.DefaultRetention, context).withName("DefaultRetention");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_OutputLocation = function se_OutputLocation(input, context) {
  var bodyNode = new __XmlNode("OutputLocation");
  if (input.S3 != null) {
    var node = se_S3Location(input.S3, context).withName("S3");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_OutputSerialization = function se_OutputSerialization(input, context) {
  var bodyNode = new __XmlNode("OutputSerialization");
  if (input.CSV != null) {
    var node = se_CSVOutput(input.CSV, context).withName("CSV");
    bodyNode.addChildNode(node);
  }
  if (input.JSON != null) {
    var _node83 = se_JSONOutput(input.JSON, context).withName("JSON");
    bodyNode.addChildNode(_node83);
  }
  return bodyNode;
};
var se_Owner = function se_Owner(input, context) {
  var bodyNode = new __XmlNode("Owner");
  if (input.DisplayName != null) {
    var node = __XmlNode.of("DisplayName", input.DisplayName).withName("DisplayName");
    bodyNode.addChildNode(node);
  }
  if (input.ID != null) {
    var _node84 = __XmlNode.of("ID", input.ID).withName("ID");
    bodyNode.addChildNode(_node84);
  }
  return bodyNode;
};
var se_OwnershipControls = function se_OwnershipControls(input, context) {
  var bodyNode = new __XmlNode("OwnershipControls");
  if (input.Rules != null) {
    var nodes = se_OwnershipControlsRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_OwnershipControlsRule = function se_OwnershipControlsRule(input, context) {
  var bodyNode = new __XmlNode("OwnershipControlsRule");
  if (input.ObjectOwnership != null) {
    var node = __XmlNode.of("ObjectOwnership", input.ObjectOwnership).withName("ObjectOwnership");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_OwnershipControlsRules = function se_OwnershipControlsRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_OwnershipControlsRule(entry, context);
    return node.withName("member");
  });
};
var se_ParquetInput = function se_ParquetInput(input, context) {
  var bodyNode = new __XmlNode("ParquetInput");
  return bodyNode;
};
var se_PublicAccessBlockConfiguration = function se_PublicAccessBlockConfiguration(input, context) {
  var bodyNode = new __XmlNode("PublicAccessBlockConfiguration");
  if (input.BlockPublicAcls != null) {
    var node = __XmlNode.of("Setting", String(input.BlockPublicAcls)).withName("BlockPublicAcls");
    bodyNode.addChildNode(node);
  }
  if (input.IgnorePublicAcls != null) {
    var _node85 = __XmlNode.of("Setting", String(input.IgnorePublicAcls)).withName("IgnorePublicAcls");
    bodyNode.addChildNode(_node85);
  }
  if (input.BlockPublicPolicy != null) {
    var _node86 = __XmlNode.of("Setting", String(input.BlockPublicPolicy)).withName("BlockPublicPolicy");
    bodyNode.addChildNode(_node86);
  }
  if (input.RestrictPublicBuckets != null) {
    var _node87 = __XmlNode.of("Setting", String(input.RestrictPublicBuckets)).withName("RestrictPublicBuckets");
    bodyNode.addChildNode(_node87);
  }
  return bodyNode;
};
var se_QueueConfiguration = function se_QueueConfiguration(input, context) {
  var bodyNode = new __XmlNode("QueueConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("NotificationId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.QueueArn != null) {
    var _node88 = __XmlNode.of("QueueArn", input.QueueArn).withName("Queue");
    bodyNode.addChildNode(_node88);
  }
  if (input.Events != null) {
    var nodes = se_EventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }
  if (input.Filter != null) {
    var _node89 = se_NotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node89);
  }
  return bodyNode;
};
var se_QueueConfigurationList = function se_QueueConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_QueueConfiguration(entry, context);
    return node.withName("member");
  });
};
var se_Redirect = function se_Redirect(input, context) {
  var bodyNode = new __XmlNode("Redirect");
  if (input.HostName != null) {
    var node = __XmlNode.of("HostName", input.HostName).withName("HostName");
    bodyNode.addChildNode(node);
  }
  if (input.HttpRedirectCode != null) {
    var _node90 = __XmlNode.of("HttpRedirectCode", input.HttpRedirectCode).withName("HttpRedirectCode");
    bodyNode.addChildNode(_node90);
  }
  if (input.Protocol != null) {
    var _node91 = __XmlNode.of("Protocol", input.Protocol).withName("Protocol");
    bodyNode.addChildNode(_node91);
  }
  if (input.ReplaceKeyPrefixWith != null) {
    var _node92 = __XmlNode.of("ReplaceKeyPrefixWith", input.ReplaceKeyPrefixWith).withName("ReplaceKeyPrefixWith");
    bodyNode.addChildNode(_node92);
  }
  if (input.ReplaceKeyWith != null) {
    var _node93 = __XmlNode.of("ReplaceKeyWith", input.ReplaceKeyWith).withName("ReplaceKeyWith");
    bodyNode.addChildNode(_node93);
  }
  return bodyNode;
};
var se_RedirectAllRequestsTo = function se_RedirectAllRequestsTo(input, context) {
  var bodyNode = new __XmlNode("RedirectAllRequestsTo");
  if (input.HostName != null) {
    var node = __XmlNode.of("HostName", input.HostName).withName("HostName");
    bodyNode.addChildNode(node);
  }
  if (input.Protocol != null) {
    var _node94 = __XmlNode.of("Protocol", input.Protocol).withName("Protocol");
    bodyNode.addChildNode(_node94);
  }
  return bodyNode;
};
var se_ReplicaModifications = function se_ReplicaModifications(input, context) {
  var bodyNode = new __XmlNode("ReplicaModifications");
  if (input.Status != null) {
    var node = __XmlNode.of("ReplicaModificationsStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_ReplicationConfiguration = function se_ReplicationConfiguration(input, context) {
  var bodyNode = new __XmlNode("ReplicationConfiguration");
  if (input.Role != null) {
    var node = __XmlNode.of("Role", input.Role).withName("Role");
    bodyNode.addChildNode(node);
  }
  if (input.Rules != null) {
    var nodes = se_ReplicationRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_ReplicationRule = function se_ReplicationRule(input, context) {
  var bodyNode = new __XmlNode("ReplicationRule");
  if (input.ID != null) {
    var node = __XmlNode.of("ID", input.ID).withName("ID");
    bodyNode.addChildNode(node);
  }
  if (input.Priority != null) {
    var _node95 = __XmlNode.of("Priority", String(input.Priority)).withName("Priority");
    bodyNode.addChildNode(_node95);
  }
  if (input.Prefix != null) {
    var _node96 = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(_node96);
  }
  if (input.Filter != null) {
    var _node97 = se_ReplicationRuleFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node97);
  }
  if (input.Status != null) {
    var _node98 = __XmlNode.of("ReplicationRuleStatus", input.Status).withName("Status");
    bodyNode.addChildNode(_node98);
  }
  if (input.SourceSelectionCriteria != null) {
    var _node99 = se_SourceSelectionCriteria(input.SourceSelectionCriteria, context).withName("SourceSelectionCriteria");
    bodyNode.addChildNode(_node99);
  }
  if (input.ExistingObjectReplication != null) {
    var _node100 = se_ExistingObjectReplication(input.ExistingObjectReplication, context).withName("ExistingObjectReplication");
    bodyNode.addChildNode(_node100);
  }
  if (input.Destination != null) {
    var _node101 = se_Destination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(_node101);
  }
  if (input.DeleteMarkerReplication != null) {
    var _node102 = se_DeleteMarkerReplication(input.DeleteMarkerReplication, context).withName("DeleteMarkerReplication");
    bodyNode.addChildNode(_node102);
  }
  return bodyNode;
};
var se_ReplicationRuleAndOperator = function se_ReplicationRuleAndOperator(input, context) {
  var bodyNode = new __XmlNode("ReplicationRuleAndOperator");
  if (input.Prefix != null) {
    var node = __XmlNode.of("Prefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(node);
  }
  if (input.Tags != null) {
    var nodes = se_TagSet(input.Tags, context);
    nodes.map(function (node) {
      node = node.withName("Tag");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_ReplicationRuleFilter = function se_ReplicationRuleFilter(input, context) {
  var bodyNode = new __XmlNode("ReplicationRuleFilter");
  ReplicationRuleFilter.visit(input, {
    Prefix: function Prefix(value) {
      var node = __XmlNode.of("Prefix", value).withName("Prefix");
      bodyNode.addChildNode(node);
    },
    Tag: function Tag(value) {
      var node = Aws_restXml_se_Tag(value, context).withName("Tag");
      bodyNode.addChildNode(node);
    },
    And: function And(value) {
      var node = se_ReplicationRuleAndOperator(value, context).withName("And");
      bodyNode.addChildNode(node);
    },
    _: function _(name, value) {
      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {
        throw new Error("Unable to serialize unknown union members in XML.");
      }
      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));
    }
  });
  return bodyNode;
};
var se_ReplicationRules = function se_ReplicationRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_ReplicationRule(entry, context);
    return node.withName("member");
  });
};
var se_ReplicationTime = function se_ReplicationTime(input, context) {
  var bodyNode = new __XmlNode("ReplicationTime");
  if (input.Status != null) {
    var node = __XmlNode.of("ReplicationTimeStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  if (input.Time != null) {
    var _node103 = se_ReplicationTimeValue(input.Time, context).withName("Time");
    bodyNode.addChildNode(_node103);
  }
  return bodyNode;
};
var se_ReplicationTimeValue = function se_ReplicationTimeValue(input, context) {
  var bodyNode = new __XmlNode("ReplicationTimeValue");
  if (input.Minutes != null) {
    var node = __XmlNode.of("Minutes", String(input.Minutes)).withName("Minutes");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_RequestPaymentConfiguration = function se_RequestPaymentConfiguration(input, context) {
  var bodyNode = new __XmlNode("RequestPaymentConfiguration");
  if (input.Payer != null) {
    var node = __XmlNode.of("Payer", input.Payer).withName("Payer");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_RequestProgress = function se_RequestProgress(input, context) {
  var bodyNode = new __XmlNode("RequestProgress");
  if (input.Enabled != null) {
    var node = __XmlNode.of("EnableRequestProgress", String(input.Enabled)).withName("Enabled");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_RestoreRequest = function se_RestoreRequest(input, context) {
  var bodyNode = new __XmlNode("RestoreRequest");
  if (input.Days != null) {
    var node = __XmlNode.of("Days", String(input.Days)).withName("Days");
    bodyNode.addChildNode(node);
  }
  if (input.GlacierJobParameters != null) {
    var _node104 = se_GlacierJobParameters(input.GlacierJobParameters, context).withName("GlacierJobParameters");
    bodyNode.addChildNode(_node104);
  }
  if (input.Type != null) {
    var _node105 = __XmlNode.of("RestoreRequestType", input.Type).withName("Type");
    bodyNode.addChildNode(_node105);
  }
  if (input.Tier != null) {
    var _node106 = __XmlNode.of("Tier", input.Tier).withName("Tier");
    bodyNode.addChildNode(_node106);
  }
  if (input.Description != null) {
    var _node107 = __XmlNode.of("Description", input.Description).withName("Description");
    bodyNode.addChildNode(_node107);
  }
  if (input.SelectParameters != null) {
    var _node108 = se_SelectParameters(input.SelectParameters, context).withName("SelectParameters");
    bodyNode.addChildNode(_node108);
  }
  if (input.OutputLocation != null) {
    var _node109 = se_OutputLocation(input.OutputLocation, context).withName("OutputLocation");
    bodyNode.addChildNode(_node109);
  }
  return bodyNode;
};
var se_RoutingRule = function se_RoutingRule(input, context) {
  var bodyNode = new __XmlNode("RoutingRule");
  if (input.Condition != null) {
    var node = se_Condition(input.Condition, context).withName("Condition");
    bodyNode.addChildNode(node);
  }
  if (input.Redirect != null) {
    var _node110 = se_Redirect(input.Redirect, context).withName("Redirect");
    bodyNode.addChildNode(_node110);
  }
  return bodyNode;
};
var se_RoutingRules = function se_RoutingRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_RoutingRule(entry, context);
    return node.withName("RoutingRule");
  });
};
var se_S3KeyFilter = function se_S3KeyFilter(input, context) {
  var bodyNode = new __XmlNode("S3KeyFilter");
  if (input.FilterRules != null) {
    var nodes = se_FilterRuleList(input.FilterRules, context);
    nodes.map(function (node) {
      node = node.withName("FilterRule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_S3Location = function se_S3Location(input, context) {
  var bodyNode = new __XmlNode("S3Location");
  if (input.BucketName != null) {
    var node = __XmlNode.of("BucketName", input.BucketName).withName("BucketName");
    bodyNode.addChildNode(node);
  }
  if (input.Prefix != null) {
    var _node111 = __XmlNode.of("LocationPrefix", input.Prefix).withName("Prefix");
    bodyNode.addChildNode(_node111);
  }
  if (input.Encryption != null) {
    var _node112 = se_Encryption(input.Encryption, context).withName("Encryption");
    bodyNode.addChildNode(_node112);
  }
  if (input.CannedACL != null) {
    var _node113 = __XmlNode.of("ObjectCannedACL", input.CannedACL).withName("CannedACL");
    bodyNode.addChildNode(_node113);
  }
  if (input.AccessControlList != null) {
    var nodes = se_Grants(input.AccessControlList, context);
    var containerNode = new __XmlNode("AccessControlList");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  if (input.Tagging != null) {
    var _node114 = se_Tagging(input.Tagging, context).withName("Tagging");
    bodyNode.addChildNode(_node114);
  }
  if (input.UserMetadata != null) {
    var _nodes7 = se_UserMetadata(input.UserMetadata, context);
    var _containerNode = new __XmlNode("UserMetadata");
    _nodes7.map(function (node) {
      _containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(_containerNode);
  }
  if (input.StorageClass != null) {
    var _node115 = __XmlNode.of("StorageClass", input.StorageClass).withName("StorageClass");
    bodyNode.addChildNode(_node115);
  }
  return bodyNode;
};
var se_ScanRange = function se_ScanRange(input, context) {
  var bodyNode = new __XmlNode("ScanRange");
  if (input.Start != null) {
    var node = __XmlNode.of("Start", String(input.Start)).withName("Start");
    bodyNode.addChildNode(node);
  }
  if (input.End != null) {
    var _node116 = __XmlNode.of("End", String(input.End)).withName("End");
    bodyNode.addChildNode(_node116);
  }
  return bodyNode;
};
var se_SelectParameters = function se_SelectParameters(input, context) {
  var bodyNode = new __XmlNode("SelectParameters");
  if (input.InputSerialization != null) {
    var node = se_InputSerialization(input.InputSerialization, context).withName("InputSerialization");
    bodyNode.addChildNode(node);
  }
  if (input.ExpressionType != null) {
    var _node117 = __XmlNode.of("ExpressionType", input.ExpressionType).withName("ExpressionType");
    bodyNode.addChildNode(_node117);
  }
  if (input.Expression != null) {
    var _node118 = __XmlNode.of("Expression", input.Expression).withName("Expression");
    bodyNode.addChildNode(_node118);
  }
  if (input.OutputSerialization != null) {
    var _node119 = se_OutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
    bodyNode.addChildNode(_node119);
  }
  return bodyNode;
};
var se_ServerSideEncryptionByDefault = function se_ServerSideEncryptionByDefault(input, context) {
  var bodyNode = new __XmlNode("ServerSideEncryptionByDefault");
  if (input.SSEAlgorithm != null) {
    var node = __XmlNode.of("ServerSideEncryption", input.SSEAlgorithm).withName("SSEAlgorithm");
    bodyNode.addChildNode(node);
  }
  if (input.KMSMasterKeyID != null) {
    var _node120 = __XmlNode.of("SSEKMSKeyId", input.KMSMasterKeyID).withName("KMSMasterKeyID");
    bodyNode.addChildNode(_node120);
  }
  return bodyNode;
};
var se_ServerSideEncryptionConfiguration = function se_ServerSideEncryptionConfiguration(input, context) {
  var bodyNode = new __XmlNode("ServerSideEncryptionConfiguration");
  if (input.Rules != null) {
    var nodes = se_ServerSideEncryptionRules(input.Rules, context);
    nodes.map(function (node) {
      node = node.withName("Rule");
      bodyNode.addChildNode(node);
    });
  }
  return bodyNode;
};
var se_ServerSideEncryptionRule = function se_ServerSideEncryptionRule(input, context) {
  var bodyNode = new __XmlNode("ServerSideEncryptionRule");
  if (input.ApplyServerSideEncryptionByDefault != null) {
    var node = se_ServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName("ApplyServerSideEncryptionByDefault");
    bodyNode.addChildNode(node);
  }
  if (input.BucketKeyEnabled != null) {
    var _node121 = __XmlNode.of("BucketKeyEnabled", String(input.BucketKeyEnabled)).withName("BucketKeyEnabled");
    bodyNode.addChildNode(_node121);
  }
  return bodyNode;
};
var se_ServerSideEncryptionRules = function se_ServerSideEncryptionRules(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_ServerSideEncryptionRule(entry, context);
    return node.withName("member");
  });
};
var se_SourceSelectionCriteria = function se_SourceSelectionCriteria(input, context) {
  var bodyNode = new __XmlNode("SourceSelectionCriteria");
  if (input.SseKmsEncryptedObjects != null) {
    var node = se_SseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName("SseKmsEncryptedObjects");
    bodyNode.addChildNode(node);
  }
  if (input.ReplicaModifications != null) {
    var _node122 = se_ReplicaModifications(input.ReplicaModifications, context).withName("ReplicaModifications");
    bodyNode.addChildNode(_node122);
  }
  return bodyNode;
};
var se_SSEKMS = function se_SSEKMS(input, context) {
  var bodyNode = new __XmlNode("SSE-KMS");
  if (input.KeyId != null) {
    var node = __XmlNode.of("SSEKMSKeyId", input.KeyId).withName("KeyId");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_SseKmsEncryptedObjects = function se_SseKmsEncryptedObjects(input, context) {
  var bodyNode = new __XmlNode("SseKmsEncryptedObjects");
  if (input.Status != null) {
    var node = __XmlNode.of("SseKmsEncryptedObjectsStatus", input.Status).withName("Status");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_SSES3 = function se_SSES3(input, context) {
  var bodyNode = new __XmlNode("SSE-S3");
  return bodyNode;
};
var se_StorageClassAnalysis = function se_StorageClassAnalysis(input, context) {
  var bodyNode = new __XmlNode("StorageClassAnalysis");
  if (input.DataExport != null) {
    var node = se_StorageClassAnalysisDataExport(input.DataExport, context).withName("DataExport");
    bodyNode.addChildNode(node);
  }
  return bodyNode;
};
var se_StorageClassAnalysisDataExport = function se_StorageClassAnalysisDataExport(input, context) {
  var bodyNode = new __XmlNode("StorageClassAnalysisDataExport");
  if (input.OutputSchemaVersion != null) {
    var node = __XmlNode.of("StorageClassAnalysisSchemaVersion", input.OutputSchemaVersion).withName("OutputSchemaVersion");
    bodyNode.addChildNode(node);
  }
  if (input.Destination != null) {
    var _node123 = se_AnalyticsExportDestination(input.Destination, context).withName("Destination");
    bodyNode.addChildNode(_node123);
  }
  return bodyNode;
};
var Aws_restXml_se_Tag = function se_Tag(input, context) {
  var bodyNode = new __XmlNode("Tag");
  if (input.Key != null) {
    var node = __XmlNode.of("ObjectKey", input.Key).withName("Key");
    bodyNode.addChildNode(node);
  }
  if (input.Value != null) {
    var _node124 = __XmlNode.of("Value", input.Value).withName("Value");
    bodyNode.addChildNode(_node124);
  }
  return bodyNode;
};
var se_Tagging = function se_Tagging(input, context) {
  var bodyNode = new __XmlNode("Tagging");
  if (input.TagSet != null) {
    var nodes = se_TagSet(input.TagSet, context);
    var containerNode = new __XmlNode("TagSet");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  return bodyNode;
};
var se_TagSet = function se_TagSet(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = Aws_restXml_se_Tag(entry, context);
    return node.withName("Tag");
  });
};
var se_TargetGrant = function se_TargetGrant(input, context) {
  var bodyNode = new __XmlNode("TargetGrant");
  if (input.Grantee != null) {
    var node = se_Grantee(input.Grantee, context).withName("Grantee");
    node.addAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
    bodyNode.addChildNode(node);
  }
  if (input.Permission != null) {
    var _node125 = __XmlNode.of("BucketLogsPermission", input.Permission).withName("Permission");
    bodyNode.addChildNode(_node125);
  }
  return bodyNode;
};
var se_TargetGrants = function se_TargetGrants(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_TargetGrant(entry, context);
    return node.withName("Grant");
  });
};
var se_Tiering = function se_Tiering(input, context) {
  var bodyNode = new __XmlNode("Tiering");
  if (input.Days != null) {
    var node = __XmlNode.of("IntelligentTieringDays", String(input.Days)).withName("Days");
    bodyNode.addChildNode(node);
  }
  if (input.AccessTier != null) {
    var _node126 = __XmlNode.of("IntelligentTieringAccessTier", input.AccessTier).withName("AccessTier");
    bodyNode.addChildNode(_node126);
  }
  return bodyNode;
};
var se_TieringList = function se_TieringList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_Tiering(entry, context);
    return node.withName("member");
  });
};
var se_TopicConfiguration = function se_TopicConfiguration(input, context) {
  var bodyNode = new __XmlNode("TopicConfiguration");
  if (input.Id != null) {
    var node = __XmlNode.of("NotificationId", input.Id).withName("Id");
    bodyNode.addChildNode(node);
  }
  if (input.TopicArn != null) {
    var _node127 = __XmlNode.of("TopicArn", input.TopicArn).withName("Topic");
    bodyNode.addChildNode(_node127);
  }
  if (input.Events != null) {
    var nodes = se_EventList(input.Events, context);
    nodes.map(function (node) {
      node = node.withName("Event");
      bodyNode.addChildNode(node);
    });
  }
  if (input.Filter != null) {
    var _node128 = se_NotificationConfigurationFilter(input.Filter, context).withName("Filter");
    bodyNode.addChildNode(_node128);
  }
  return bodyNode;
};
var se_TopicConfigurationList = function se_TopicConfigurationList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_TopicConfiguration(entry, context);
    return node.withName("member");
  });
};
var se_Transition = function se_Transition(input, context) {
  var bodyNode = new __XmlNode("Transition");
  if (input.Date != null) {
    var node = __XmlNode.of("Date", (input.Date.toISOString().split(".")[0] + "Z").toString()).withName("Date");
    bodyNode.addChildNode(node);
  }
  if (input.Days != null) {
    var _node129 = __XmlNode.of("Days", String(input.Days)).withName("Days");
    bodyNode.addChildNode(_node129);
  }
  if (input.StorageClass != null) {
    var _node130 = __XmlNode.of("TransitionStorageClass", input.StorageClass).withName("StorageClass");
    bodyNode.addChildNode(_node130);
  }
  return bodyNode;
};
var se_TransitionList = function se_TransitionList(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_Transition(entry, context);
    return node.withName("member");
  });
};
var se_UserMetadata = function se_UserMetadata(input, context) {
  return input.filter(function (e) {
    return e != null;
  }).map(function (entry) {
    var node = se_MetadataEntry(entry, context);
    return node.withName("MetadataEntry");
  });
};
var se_VersioningConfiguration = function se_VersioningConfiguration(input, context) {
  var bodyNode = new __XmlNode("VersioningConfiguration");
  if (input.MFADelete != null) {
    var node = __XmlNode.of("MFADelete", input.MFADelete).withName("MfaDelete");
    bodyNode.addChildNode(node);
  }
  if (input.Status != null) {
    var _node131 = __XmlNode.of("BucketVersioningStatus", input.Status).withName("Status");
    bodyNode.addChildNode(_node131);
  }
  return bodyNode;
};
var se_WebsiteConfiguration = function se_WebsiteConfiguration(input, context) {
  var bodyNode = new __XmlNode("WebsiteConfiguration");
  if (input.ErrorDocument != null) {
    var node = se_ErrorDocument(input.ErrorDocument, context).withName("ErrorDocument");
    bodyNode.addChildNode(node);
  }
  if (input.IndexDocument != null) {
    var _node132 = se_IndexDocument(input.IndexDocument, context).withName("IndexDocument");
    bodyNode.addChildNode(_node132);
  }
  if (input.RedirectAllRequestsTo != null) {
    var _node133 = se_RedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName("RedirectAllRequestsTo");
    bodyNode.addChildNode(_node133);
  }
  if (input.RoutingRules != null) {
    var nodes = se_RoutingRules(input.RoutingRules, context);
    var containerNode = new __XmlNode("RoutingRules");
    nodes.map(function (node) {
      containerNode.addChildNode(node);
    });
    bodyNode.addChildNode(containerNode);
  }
  return bodyNode;
};
var de_AbortIncompleteMultipartUpload = function de_AbortIncompleteMultipartUpload(output, context) {
  var contents = {};
  if (output["DaysAfterInitiation"] !== undefined) {
    contents.DaysAfterInitiation = __strictParseInt32(output["DaysAfterInitiation"]);
  }
  return contents;
};
var de_AccessControlTranslation = function de_AccessControlTranslation(output, context) {
  var contents = {};
  if (output["Owner"] !== undefined) {
    contents.Owner = __expectString(output["Owner"]);
  }
  return contents;
};
var de_AllowedHeaders = function de_AllowedHeaders(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_AllowedMethods = function de_AllowedMethods(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_AllowedOrigins = function de_AllowedOrigins(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_AnalyticsAndOperator = function de_AnalyticsAndOperator(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Tag === "") {
    contents.Tags = [];
  } else if (output["Tag"] !== undefined) {
    contents.Tags = de_TagSet(__getArrayIfSingleItem(output["Tag"]), context);
  }
  return contents;
};
var de_AnalyticsConfiguration = function de_AnalyticsConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output.Filter === "") {} else if (output["Filter"] !== undefined) {
    contents.Filter = de_AnalyticsFilter(__expectUnion(output["Filter"]), context);
  }
  if (output["StorageClassAnalysis"] !== undefined) {
    contents.StorageClassAnalysis = de_StorageClassAnalysis(output["StorageClassAnalysis"], context);
  }
  return contents;
};
var de_AnalyticsConfigurationList = function de_AnalyticsConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_AnalyticsConfiguration(entry, context);
  });
};
var de_AnalyticsExportDestination = function de_AnalyticsExportDestination(output, context) {
  var contents = {};
  if (output["S3BucketDestination"] !== undefined) {
    contents.S3BucketDestination = de_AnalyticsS3BucketDestination(output["S3BucketDestination"], context);
  }
  return contents;
};
var de_AnalyticsFilter = function de_AnalyticsFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: __expectString(output["Prefix"])
    };
  }
  if (output["Tag"] !== undefined) {
    return {
      Tag: de_Tag(output["Tag"], context)
    };
  }
  if (output["And"] !== undefined) {
    return {
      And: de_AnalyticsAndOperator(output["And"], context)
    };
  }
  return {
    $unknown: Object.entries(output)[0]
  };
};
var de_AnalyticsS3BucketDestination = function de_AnalyticsS3BucketDestination(output, context) {
  var contents = {};
  if (output["Format"] !== undefined) {
    contents.Format = __expectString(output["Format"]);
  }
  if (output["BucketAccountId"] !== undefined) {
    contents.BucketAccountId = __expectString(output["BucketAccountId"]);
  }
  if (output["Bucket"] !== undefined) {
    contents.Bucket = __expectString(output["Bucket"]);
  }
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  return contents;
};
var de_Bucket = function de_Bucket(output, context) {
  var contents = {};
  if (output["Name"] !== undefined) {
    contents.Name = __expectString(output["Name"]);
  }
  if (output["CreationDate"] !== undefined) {
    contents.CreationDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["CreationDate"]));
  }
  return contents;
};
var de_Buckets = function de_Buckets(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Bucket(entry, context);
  });
};
var de_Checksum = function de_Checksum(output, context) {
  var contents = {};
  if (output["ChecksumCRC32"] !== undefined) {
    contents.ChecksumCRC32 = __expectString(output["ChecksumCRC32"]);
  }
  if (output["ChecksumCRC32C"] !== undefined) {
    contents.ChecksumCRC32C = __expectString(output["ChecksumCRC32C"]);
  }
  if (output["ChecksumSHA1"] !== undefined) {
    contents.ChecksumSHA1 = __expectString(output["ChecksumSHA1"]);
  }
  if (output["ChecksumSHA256"] !== undefined) {
    contents.ChecksumSHA256 = __expectString(output["ChecksumSHA256"]);
  }
  return contents;
};
var de_ChecksumAlgorithmList = function de_ChecksumAlgorithmList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_CommonPrefix = function de_CommonPrefix(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  return contents;
};
var de_CommonPrefixList = function de_CommonPrefixList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_CommonPrefix(entry, context);
  });
};
var de_Condition = function de_Condition(output, context) {
  var contents = {};
  if (output["HttpErrorCodeReturnedEquals"] !== undefined) {
    contents.HttpErrorCodeReturnedEquals = __expectString(output["HttpErrorCodeReturnedEquals"]);
  }
  if (output["KeyPrefixEquals"] !== undefined) {
    contents.KeyPrefixEquals = __expectString(output["KeyPrefixEquals"]);
  }
  return contents;
};
var de_ContinuationEvent = function de_ContinuationEvent(output, context) {
  var contents = {};
  return contents;
};
var de_CopyObjectResult = function de_CopyObjectResult(output, context) {
  var contents = {};
  if (output["ETag"] !== undefined) {
    contents.ETag = __expectString(output["ETag"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  if (output["ChecksumCRC32"] !== undefined) {
    contents.ChecksumCRC32 = __expectString(output["ChecksumCRC32"]);
  }
  if (output["ChecksumCRC32C"] !== undefined) {
    contents.ChecksumCRC32C = __expectString(output["ChecksumCRC32C"]);
  }
  if (output["ChecksumSHA1"] !== undefined) {
    contents.ChecksumSHA1 = __expectString(output["ChecksumSHA1"]);
  }
  if (output["ChecksumSHA256"] !== undefined) {
    contents.ChecksumSHA256 = __expectString(output["ChecksumSHA256"]);
  }
  return contents;
};
var de_CopyPartResult = function de_CopyPartResult(output, context) {
  var contents = {};
  if (output["ETag"] !== undefined) {
    contents.ETag = __expectString(output["ETag"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  if (output["ChecksumCRC32"] !== undefined) {
    contents.ChecksumCRC32 = __expectString(output["ChecksumCRC32"]);
  }
  if (output["ChecksumCRC32C"] !== undefined) {
    contents.ChecksumCRC32C = __expectString(output["ChecksumCRC32C"]);
  }
  if (output["ChecksumSHA1"] !== undefined) {
    contents.ChecksumSHA1 = __expectString(output["ChecksumSHA1"]);
  }
  if (output["ChecksumSHA256"] !== undefined) {
    contents.ChecksumSHA256 = __expectString(output["ChecksumSHA256"]);
  }
  return contents;
};
var de_CORSRule = function de_CORSRule(output, context) {
  var contents = {};
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  if (output.AllowedHeader === "") {
    contents.AllowedHeaders = [];
  } else if (output["AllowedHeader"] !== undefined) {
    contents.AllowedHeaders = de_AllowedHeaders(__getArrayIfSingleItem(output["AllowedHeader"]), context);
  }
  if (output.AllowedMethod === "") {
    contents.AllowedMethods = [];
  } else if (output["AllowedMethod"] !== undefined) {
    contents.AllowedMethods = de_AllowedMethods(__getArrayIfSingleItem(output["AllowedMethod"]), context);
  }
  if (output.AllowedOrigin === "") {
    contents.AllowedOrigins = [];
  } else if (output["AllowedOrigin"] !== undefined) {
    contents.AllowedOrigins = de_AllowedOrigins(__getArrayIfSingleItem(output["AllowedOrigin"]), context);
  }
  if (output.ExposeHeader === "") {
    contents.ExposeHeaders = [];
  } else if (output["ExposeHeader"] !== undefined) {
    contents.ExposeHeaders = de_ExposeHeaders(__getArrayIfSingleItem(output["ExposeHeader"]), context);
  }
  if (output["MaxAgeSeconds"] !== undefined) {
    contents.MaxAgeSeconds = __strictParseInt32(output["MaxAgeSeconds"]);
  }
  return contents;
};
var de_CORSRules = function de_CORSRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_CORSRule(entry, context);
  });
};
var de_DefaultRetention = function de_DefaultRetention(output, context) {
  var contents = {};
  if (output["Mode"] !== undefined) {
    contents.Mode = __expectString(output["Mode"]);
  }
  if (output["Days"] !== undefined) {
    contents.Days = __strictParseInt32(output["Days"]);
  }
  if (output["Years"] !== undefined) {
    contents.Years = __strictParseInt32(output["Years"]);
  }
  return contents;
};
var de_DeletedObject = function de_DeletedObject(output, context) {
  var contents = {};
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["VersionId"] !== undefined) {
    contents.VersionId = __expectString(output["VersionId"]);
  }
  if (output["DeleteMarker"] !== undefined) {
    contents.DeleteMarker = __parseBoolean(output["DeleteMarker"]);
  }
  if (output["DeleteMarkerVersionId"] !== undefined) {
    contents.DeleteMarkerVersionId = __expectString(output["DeleteMarkerVersionId"]);
  }
  return contents;
};
var de_DeletedObjects = function de_DeletedObjects(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_DeletedObject(entry, context);
  });
};
var de_DeleteMarkerEntry = function de_DeleteMarkerEntry(output, context) {
  var contents = {};
  if (output["Owner"] !== undefined) {
    contents.Owner = de_Owner(output["Owner"], context);
  }
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["VersionId"] !== undefined) {
    contents.VersionId = __expectString(output["VersionId"]);
  }
  if (output["IsLatest"] !== undefined) {
    contents.IsLatest = __parseBoolean(output["IsLatest"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  return contents;
};
var de_DeleteMarkerReplication = function de_DeleteMarkerReplication(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  return contents;
};
var de_DeleteMarkers = function de_DeleteMarkers(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_DeleteMarkerEntry(entry, context);
  });
};
var de_Destination = function de_Destination(output, context) {
  var contents = {};
  if (output["Bucket"] !== undefined) {
    contents.Bucket = __expectString(output["Bucket"]);
  }
  if (output["Account"] !== undefined) {
    contents.Account = __expectString(output["Account"]);
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  if (output["AccessControlTranslation"] !== undefined) {
    contents.AccessControlTranslation = de_AccessControlTranslation(output["AccessControlTranslation"], context);
  }
  if (output["EncryptionConfiguration"] !== undefined) {
    contents.EncryptionConfiguration = de_EncryptionConfiguration(output["EncryptionConfiguration"], context);
  }
  if (output["ReplicationTime"] !== undefined) {
    contents.ReplicationTime = de_ReplicationTime(output["ReplicationTime"], context);
  }
  if (output["Metrics"] !== undefined) {
    contents.Metrics = de_Metrics(output["Metrics"], context);
  }
  return contents;
};
var de_EncryptionConfiguration = function de_EncryptionConfiguration(output, context) {
  var contents = {};
  if (output["ReplicaKmsKeyID"] !== undefined) {
    contents.ReplicaKmsKeyID = __expectString(output["ReplicaKmsKeyID"]);
  }
  return contents;
};
var de_EndEvent = function de_EndEvent(output, context) {
  var contents = {};
  return contents;
};
var de__Error = function de__Error(output, context) {
  var contents = {};
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["VersionId"] !== undefined) {
    contents.VersionId = __expectString(output["VersionId"]);
  }
  if (output["Code"] !== undefined) {
    contents.Code = __expectString(output["Code"]);
  }
  if (output["Message"] !== undefined) {
    contents.Message = __expectString(output["Message"]);
  }
  return contents;
};
var de_ErrorDocument = function de_ErrorDocument(output, context) {
  var contents = {};
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  return contents;
};
var de_Errors = function de_Errors(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de__Error(entry, context);
  });
};
var de_EventBridgeConfiguration = function de_EventBridgeConfiguration(output, context) {
  var contents = {};
  return contents;
};
var de_EventList = function de_EventList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_ExistingObjectReplication = function de_ExistingObjectReplication(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  return contents;
};
var de_ExposeHeaders = function de_ExposeHeaders(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_FilterRule = function de_FilterRule(output, context) {
  var contents = {};
  if (output["Name"] !== undefined) {
    contents.Name = __expectString(output["Name"]);
  }
  if (output["Value"] !== undefined) {
    contents.Value = __expectString(output["Value"]);
  }
  return contents;
};
var de_FilterRuleList = function de_FilterRuleList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_FilterRule(entry, context);
  });
};
var de_GetObjectAttributesParts = function de_GetObjectAttributesParts(output, context) {
  var contents = {};
  if (output["PartsCount"] !== undefined) {
    contents.TotalPartsCount = __strictParseInt32(output["PartsCount"]);
  }
  if (output["PartNumberMarker"] !== undefined) {
    contents.PartNumberMarker = __expectString(output["PartNumberMarker"]);
  }
  if (output["NextPartNumberMarker"] !== undefined) {
    contents.NextPartNumberMarker = __expectString(output["NextPartNumberMarker"]);
  }
  if (output["MaxParts"] !== undefined) {
    contents.MaxParts = __strictParseInt32(output["MaxParts"]);
  }
  if (output["IsTruncated"] !== undefined) {
    contents.IsTruncated = __parseBoolean(output["IsTruncated"]);
  }
  if (output.Part === "") {
    contents.Parts = [];
  } else if (output["Part"] !== undefined) {
    contents.Parts = de_PartsList(__getArrayIfSingleItem(output["Part"]), context);
  }
  return contents;
};
var de_Grant = function de_Grant(output, context) {
  var contents = {};
  if (output["Grantee"] !== undefined) {
    contents.Grantee = de_Grantee(output["Grantee"], context);
  }
  if (output["Permission"] !== undefined) {
    contents.Permission = __expectString(output["Permission"]);
  }
  return contents;
};
var de_Grantee = function de_Grantee(output, context) {
  var contents = {};
  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = __expectString(output["DisplayName"]);
  }
  if (output["EmailAddress"] !== undefined) {
    contents.EmailAddress = __expectString(output["EmailAddress"]);
  }
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  if (output["URI"] !== undefined) {
    contents.URI = __expectString(output["URI"]);
  }
  if (output["xsi:type"] !== undefined) {
    contents.Type = __expectString(output["xsi:type"]);
  }
  return contents;
};
var de_Grants = function de_Grants(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Grant(entry, context);
  });
};
var de_IndexDocument = function de_IndexDocument(output, context) {
  var contents = {};
  if (output["Suffix"] !== undefined) {
    contents.Suffix = __expectString(output["Suffix"]);
  }
  return contents;
};
var de_Initiator = function de_Initiator(output, context) {
  var contents = {};
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = __expectString(output["DisplayName"]);
  }
  return contents;
};
var de_IntelligentTieringAndOperator = function de_IntelligentTieringAndOperator(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Tag === "") {
    contents.Tags = [];
  } else if (output["Tag"] !== undefined) {
    contents.Tags = de_TagSet(__getArrayIfSingleItem(output["Tag"]), context);
  }
  return contents;
};
var de_IntelligentTieringConfiguration = function de_IntelligentTieringConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output["Filter"] !== undefined) {
    contents.Filter = de_IntelligentTieringFilter(output["Filter"], context);
  }
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  if (output.Tiering === "") {
    contents.Tierings = [];
  } else if (output["Tiering"] !== undefined) {
    contents.Tierings = de_TieringList(__getArrayIfSingleItem(output["Tiering"]), context);
  }
  return contents;
};
var de_IntelligentTieringConfigurationList = function de_IntelligentTieringConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_IntelligentTieringConfiguration(entry, context);
  });
};
var de_IntelligentTieringFilter = function de_IntelligentTieringFilter(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output["Tag"] !== undefined) {
    contents.Tag = de_Tag(output["Tag"], context);
  }
  if (output["And"] !== undefined) {
    contents.And = de_IntelligentTieringAndOperator(output["And"], context);
  }
  return contents;
};
var de_InventoryConfiguration = function de_InventoryConfiguration(output, context) {
  var contents = {};
  if (output["Destination"] !== undefined) {
    contents.Destination = de_InventoryDestination(output["Destination"], context);
  }
  if (output["IsEnabled"] !== undefined) {
    contents.IsEnabled = __parseBoolean(output["IsEnabled"]);
  }
  if (output["Filter"] !== undefined) {
    contents.Filter = de_InventoryFilter(output["Filter"], context);
  }
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output["IncludedObjectVersions"] !== undefined) {
    contents.IncludedObjectVersions = __expectString(output["IncludedObjectVersions"]);
  }
  if (output.OptionalFields === "") {
    contents.OptionalFields = [];
  } else if (output["OptionalFields"] !== undefined && output["OptionalFields"]["Field"] !== undefined) {
    contents.OptionalFields = de_InventoryOptionalFields(__getArrayIfSingleItem(output["OptionalFields"]["Field"]), context);
  }
  if (output["Schedule"] !== undefined) {
    contents.Schedule = de_InventorySchedule(output["Schedule"], context);
  }
  return contents;
};
var de_InventoryConfigurationList = function de_InventoryConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_InventoryConfiguration(entry, context);
  });
};
var de_InventoryDestination = function de_InventoryDestination(output, context) {
  var contents = {};
  if (output["S3BucketDestination"] !== undefined) {
    contents.S3BucketDestination = de_InventoryS3BucketDestination(output["S3BucketDestination"], context);
  }
  return contents;
};
var de_InventoryEncryption = function de_InventoryEncryption(output, context) {
  var contents = {};
  if (output["SSE-S3"] !== undefined) {
    contents.SSES3 = de_SSES3(output["SSE-S3"], context);
  }
  if (output["SSE-KMS"] !== undefined) {
    contents.SSEKMS = de_SSEKMS(output["SSE-KMS"], context);
  }
  return contents;
};
var de_InventoryFilter = function de_InventoryFilter(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  return contents;
};
var de_InventoryOptionalFields = function de_InventoryOptionalFields(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return __expectString(entry);
  });
};
var de_InventoryS3BucketDestination = function de_InventoryS3BucketDestination(output, context) {
  var contents = {};
  if (output["AccountId"] !== undefined) {
    contents.AccountId = __expectString(output["AccountId"]);
  }
  if (output["Bucket"] !== undefined) {
    contents.Bucket = __expectString(output["Bucket"]);
  }
  if (output["Format"] !== undefined) {
    contents.Format = __expectString(output["Format"]);
  }
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output["Encryption"] !== undefined) {
    contents.Encryption = de_InventoryEncryption(output["Encryption"], context);
  }
  return contents;
};
var de_InventorySchedule = function de_InventorySchedule(output, context) {
  var contents = {};
  if (output["Frequency"] !== undefined) {
    contents.Frequency = __expectString(output["Frequency"]);
  }
  return contents;
};
var de_LambdaFunctionConfiguration = function de_LambdaFunctionConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output["CloudFunction"] !== undefined) {
    contents.LambdaFunctionArn = __expectString(output["CloudFunction"]);
  }
  if (output.Event === "") {
    contents.Events = [];
  } else if (output["Event"] !== undefined) {
    contents.Events = de_EventList(__getArrayIfSingleItem(output["Event"]), context);
  }
  if (output["Filter"] !== undefined) {
    contents.Filter = de_NotificationConfigurationFilter(output["Filter"], context);
  }
  return contents;
};
var de_LambdaFunctionConfigurationList = function de_LambdaFunctionConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_LambdaFunctionConfiguration(entry, context);
  });
};
var de_LifecycleExpiration = function de_LifecycleExpiration(output, context) {
  var contents = {};
  if (output["Date"] !== undefined) {
    contents.Date = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["Date"]));
  }
  if (output["Days"] !== undefined) {
    contents.Days = __strictParseInt32(output["Days"]);
  }
  if (output["ExpiredObjectDeleteMarker"] !== undefined) {
    contents.ExpiredObjectDeleteMarker = __parseBoolean(output["ExpiredObjectDeleteMarker"]);
  }
  return contents;
};
var de_LifecycleRule = function de_LifecycleRule(output, context) {
  var contents = {};
  if (output["Expiration"] !== undefined) {
    contents.Expiration = de_LifecycleExpiration(output["Expiration"], context);
  }
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Filter === "") {} else if (output["Filter"] !== undefined) {
    contents.Filter = de_LifecycleRuleFilter(__expectUnion(output["Filter"]), context);
  }
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  if (output.Transition === "") {
    contents.Transitions = [];
  } else if (output["Transition"] !== undefined) {
    contents.Transitions = de_TransitionList(__getArrayIfSingleItem(output["Transition"]), context);
  }
  if (output.NoncurrentVersionTransition === "") {
    contents.NoncurrentVersionTransitions = [];
  } else if (output["NoncurrentVersionTransition"] !== undefined) {
    contents.NoncurrentVersionTransitions = de_NoncurrentVersionTransitionList(__getArrayIfSingleItem(output["NoncurrentVersionTransition"]), context);
  }
  if (output["NoncurrentVersionExpiration"] !== undefined) {
    contents.NoncurrentVersionExpiration = de_NoncurrentVersionExpiration(output["NoncurrentVersionExpiration"], context);
  }
  if (output["AbortIncompleteMultipartUpload"] !== undefined) {
    contents.AbortIncompleteMultipartUpload = de_AbortIncompleteMultipartUpload(output["AbortIncompleteMultipartUpload"], context);
  }
  return contents;
};
var de_LifecycleRuleAndOperator = function de_LifecycleRuleAndOperator(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Tag === "") {
    contents.Tags = [];
  } else if (output["Tag"] !== undefined) {
    contents.Tags = de_TagSet(__getArrayIfSingleItem(output["Tag"]), context);
  }
  if (output["ObjectSizeGreaterThan"] !== undefined) {
    contents.ObjectSizeGreaterThan = __strictParseLong(output["ObjectSizeGreaterThan"]);
  }
  if (output["ObjectSizeLessThan"] !== undefined) {
    contents.ObjectSizeLessThan = __strictParseLong(output["ObjectSizeLessThan"]);
  }
  return contents;
};
var de_LifecycleRuleFilter = function de_LifecycleRuleFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: __expectString(output["Prefix"])
    };
  }
  if (output["Tag"] !== undefined) {
    return {
      Tag: de_Tag(output["Tag"], context)
    };
  }
  if (output["ObjectSizeGreaterThan"] !== undefined) {
    return {
      ObjectSizeGreaterThan: __strictParseLong(output["ObjectSizeGreaterThan"])
    };
  }
  if (output["ObjectSizeLessThan"] !== undefined) {
    return {
      ObjectSizeLessThan: __strictParseLong(output["ObjectSizeLessThan"])
    };
  }
  if (output["And"] !== undefined) {
    return {
      And: de_LifecycleRuleAndOperator(output["And"], context)
    };
  }
  return {
    $unknown: Object.entries(output)[0]
  };
};
var de_LifecycleRules = function de_LifecycleRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_LifecycleRule(entry, context);
  });
};
var de_LoggingEnabled = function de_LoggingEnabled(output, context) {
  var contents = {};
  if (output["TargetBucket"] !== undefined) {
    contents.TargetBucket = __expectString(output["TargetBucket"]);
  }
  if (output.TargetGrants === "") {
    contents.TargetGrants = [];
  } else if (output["TargetGrants"] !== undefined && output["TargetGrants"]["Grant"] !== undefined) {
    contents.TargetGrants = de_TargetGrants(__getArrayIfSingleItem(output["TargetGrants"]["Grant"]), context);
  }
  if (output["TargetPrefix"] !== undefined) {
    contents.TargetPrefix = __expectString(output["TargetPrefix"]);
  }
  return contents;
};
var de_Metrics = function de_Metrics(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  if (output["EventThreshold"] !== undefined) {
    contents.EventThreshold = de_ReplicationTimeValue(output["EventThreshold"], context);
  }
  return contents;
};
var de_MetricsAndOperator = function de_MetricsAndOperator(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Tag === "") {
    contents.Tags = [];
  } else if (output["Tag"] !== undefined) {
    contents.Tags = de_TagSet(__getArrayIfSingleItem(output["Tag"]), context);
  }
  if (output["AccessPointArn"] !== undefined) {
    contents.AccessPointArn = __expectString(output["AccessPointArn"]);
  }
  return contents;
};
var de_MetricsConfiguration = function de_MetricsConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output.Filter === "") {} else if (output["Filter"] !== undefined) {
    contents.Filter = de_MetricsFilter(__expectUnion(output["Filter"]), context);
  }
  return contents;
};
var de_MetricsConfigurationList = function de_MetricsConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_MetricsConfiguration(entry, context);
  });
};
var de_MetricsFilter = function de_MetricsFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: __expectString(output["Prefix"])
    };
  }
  if (output["Tag"] !== undefined) {
    return {
      Tag: de_Tag(output["Tag"], context)
    };
  }
  if (output["AccessPointArn"] !== undefined) {
    return {
      AccessPointArn: __expectString(output["AccessPointArn"])
    };
  }
  if (output["And"] !== undefined) {
    return {
      And: de_MetricsAndOperator(output["And"], context)
    };
  }
  return {
    $unknown: Object.entries(output)[0]
  };
};
var de_MultipartUpload = function de_MultipartUpload(output, context) {
  var contents = {};
  if (output["UploadId"] !== undefined) {
    contents.UploadId = __expectString(output["UploadId"]);
  }
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["Initiated"] !== undefined) {
    contents.Initiated = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["Initiated"]));
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  if (output["Owner"] !== undefined) {
    contents.Owner = de_Owner(output["Owner"], context);
  }
  if (output["Initiator"] !== undefined) {
    contents.Initiator = de_Initiator(output["Initiator"], context);
  }
  if (output["ChecksumAlgorithm"] !== undefined) {
    contents.ChecksumAlgorithm = __expectString(output["ChecksumAlgorithm"]);
  }
  return contents;
};
var de_MultipartUploadList = function de_MultipartUploadList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_MultipartUpload(entry, context);
  });
};
var de_NoncurrentVersionExpiration = function de_NoncurrentVersionExpiration(output, context) {
  var contents = {};
  if (output["NoncurrentDays"] !== undefined) {
    contents.NoncurrentDays = __strictParseInt32(output["NoncurrentDays"]);
  }
  if (output["NewerNoncurrentVersions"] !== undefined) {
    contents.NewerNoncurrentVersions = __strictParseInt32(output["NewerNoncurrentVersions"]);
  }
  return contents;
};
var de_NoncurrentVersionTransition = function de_NoncurrentVersionTransition(output, context) {
  var contents = {};
  if (output["NoncurrentDays"] !== undefined) {
    contents.NoncurrentDays = __strictParseInt32(output["NoncurrentDays"]);
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  if (output["NewerNoncurrentVersions"] !== undefined) {
    contents.NewerNoncurrentVersions = __strictParseInt32(output["NewerNoncurrentVersions"]);
  }
  return contents;
};
var de_NoncurrentVersionTransitionList = function de_NoncurrentVersionTransitionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_NoncurrentVersionTransition(entry, context);
  });
};
var de_NotificationConfigurationFilter = function de_NotificationConfigurationFilter(output, context) {
  var contents = {};
  if (output["S3Key"] !== undefined) {
    contents.Key = de_S3KeyFilter(output["S3Key"], context);
  }
  return contents;
};
var de__Object = function de__Object(output, context) {
  var contents = {};
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  if (output["ETag"] !== undefined) {
    contents.ETag = __expectString(output["ETag"]);
  }
  if (output.ChecksumAlgorithm === "") {
    contents.ChecksumAlgorithm = [];
  } else if (output["ChecksumAlgorithm"] !== undefined) {
    contents.ChecksumAlgorithm = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output["ChecksumAlgorithm"]), context);
  }
  if (output["Size"] !== undefined) {
    contents.Size = __strictParseLong(output["Size"]);
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  if (output["Owner"] !== undefined) {
    contents.Owner = de_Owner(output["Owner"], context);
  }
  if (output["RestoreStatus"] !== undefined) {
    contents.RestoreStatus = de_RestoreStatus(output["RestoreStatus"], context);
  }
  return contents;
};
var de_ObjectList = function de_ObjectList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de__Object(entry, context);
  });
};
var de_ObjectLockConfiguration = function de_ObjectLockConfiguration(output, context) {
  var contents = {};
  if (output["ObjectLockEnabled"] !== undefined) {
    contents.ObjectLockEnabled = __expectString(output["ObjectLockEnabled"]);
  }
  if (output["Rule"] !== undefined) {
    contents.Rule = de_ObjectLockRule(output["Rule"], context);
  }
  return contents;
};
var de_ObjectLockLegalHold = function de_ObjectLockLegalHold(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  return contents;
};
var de_ObjectLockRetention = function de_ObjectLockRetention(output, context) {
  var contents = {};
  if (output["Mode"] !== undefined) {
    contents.Mode = __expectString(output["Mode"]);
  }
  if (output["RetainUntilDate"] !== undefined) {
    contents.RetainUntilDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["RetainUntilDate"]));
  }
  return contents;
};
var de_ObjectLockRule = function de_ObjectLockRule(output, context) {
  var contents = {};
  if (output["DefaultRetention"] !== undefined) {
    contents.DefaultRetention = de_DefaultRetention(output["DefaultRetention"], context);
  }
  return contents;
};
var de_ObjectPart = function de_ObjectPart(output, context) {
  var contents = {};
  if (output["PartNumber"] !== undefined) {
    contents.PartNumber = __strictParseInt32(output["PartNumber"]);
  }
  if (output["Size"] !== undefined) {
    contents.Size = __strictParseLong(output["Size"]);
  }
  if (output["ChecksumCRC32"] !== undefined) {
    contents.ChecksumCRC32 = __expectString(output["ChecksumCRC32"]);
  }
  if (output["ChecksumCRC32C"] !== undefined) {
    contents.ChecksumCRC32C = __expectString(output["ChecksumCRC32C"]);
  }
  if (output["ChecksumSHA1"] !== undefined) {
    contents.ChecksumSHA1 = __expectString(output["ChecksumSHA1"]);
  }
  if (output["ChecksumSHA256"] !== undefined) {
    contents.ChecksumSHA256 = __expectString(output["ChecksumSHA256"]);
  }
  return contents;
};
var de_ObjectVersion = function de_ObjectVersion(output, context) {
  var contents = {};
  if (output["ETag"] !== undefined) {
    contents.ETag = __expectString(output["ETag"]);
  }
  if (output.ChecksumAlgorithm === "") {
    contents.ChecksumAlgorithm = [];
  } else if (output["ChecksumAlgorithm"] !== undefined) {
    contents.ChecksumAlgorithm = de_ChecksumAlgorithmList(__getArrayIfSingleItem(output["ChecksumAlgorithm"]), context);
  }
  if (output["Size"] !== undefined) {
    contents.Size = __strictParseLong(output["Size"]);
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["VersionId"] !== undefined) {
    contents.VersionId = __expectString(output["VersionId"]);
  }
  if (output["IsLatest"] !== undefined) {
    contents.IsLatest = __parseBoolean(output["IsLatest"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  if (output["Owner"] !== undefined) {
    contents.Owner = de_Owner(output["Owner"], context);
  }
  if (output["RestoreStatus"] !== undefined) {
    contents.RestoreStatus = de_RestoreStatus(output["RestoreStatus"], context);
  }
  return contents;
};
var de_ObjectVersionList = function de_ObjectVersionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_ObjectVersion(entry, context);
  });
};
var de_Owner = function de_Owner(output, context) {
  var contents = {};
  if (output["DisplayName"] !== undefined) {
    contents.DisplayName = __expectString(output["DisplayName"]);
  }
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  return contents;
};
var de_OwnershipControls = function de_OwnershipControls(output, context) {
  var contents = {};
  if (output.Rule === "") {
    contents.Rules = [];
  } else if (output["Rule"] !== undefined) {
    contents.Rules = de_OwnershipControlsRules(__getArrayIfSingleItem(output["Rule"]), context);
  }
  return contents;
};
var de_OwnershipControlsRule = function de_OwnershipControlsRule(output, context) {
  var contents = {};
  if (output["ObjectOwnership"] !== undefined) {
    contents.ObjectOwnership = __expectString(output["ObjectOwnership"]);
  }
  return contents;
};
var de_OwnershipControlsRules = function de_OwnershipControlsRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_OwnershipControlsRule(entry, context);
  });
};
var de_Part = function de_Part(output, context) {
  var contents = {};
  if (output["PartNumber"] !== undefined) {
    contents.PartNumber = __strictParseInt32(output["PartNumber"]);
  }
  if (output["LastModified"] !== undefined) {
    contents.LastModified = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["LastModified"]));
  }
  if (output["ETag"] !== undefined) {
    contents.ETag = __expectString(output["ETag"]);
  }
  if (output["Size"] !== undefined) {
    contents.Size = __strictParseLong(output["Size"]);
  }
  if (output["ChecksumCRC32"] !== undefined) {
    contents.ChecksumCRC32 = __expectString(output["ChecksumCRC32"]);
  }
  if (output["ChecksumCRC32C"] !== undefined) {
    contents.ChecksumCRC32C = __expectString(output["ChecksumCRC32C"]);
  }
  if (output["ChecksumSHA1"] !== undefined) {
    contents.ChecksumSHA1 = __expectString(output["ChecksumSHA1"]);
  }
  if (output["ChecksumSHA256"] !== undefined) {
    contents.ChecksumSHA256 = __expectString(output["ChecksumSHA256"]);
  }
  return contents;
};
var de_Parts = function de_Parts(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Part(entry, context);
  });
};
var de_PartsList = function de_PartsList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_ObjectPart(entry, context);
  });
};
var de_PolicyStatus = function de_PolicyStatus(output, context) {
  var contents = {};
  if (output["IsPublic"] !== undefined) {
    contents.IsPublic = __parseBoolean(output["IsPublic"]);
  }
  return contents;
};
var de_Progress = function de_Progress(output, context) {
  var contents = {};
  if (output["BytesScanned"] !== undefined) {
    contents.BytesScanned = __strictParseLong(output["BytesScanned"]);
  }
  if (output["BytesProcessed"] !== undefined) {
    contents.BytesProcessed = __strictParseLong(output["BytesProcessed"]);
  }
  if (output["BytesReturned"] !== undefined) {
    contents.BytesReturned = __strictParseLong(output["BytesReturned"]);
  }
  return contents;
};
var de_PublicAccessBlockConfiguration = function de_PublicAccessBlockConfiguration(output, context) {
  var contents = {};
  if (output["BlockPublicAcls"] !== undefined) {
    contents.BlockPublicAcls = __parseBoolean(output["BlockPublicAcls"]);
  }
  if (output["IgnorePublicAcls"] !== undefined) {
    contents.IgnorePublicAcls = __parseBoolean(output["IgnorePublicAcls"]);
  }
  if (output["BlockPublicPolicy"] !== undefined) {
    contents.BlockPublicPolicy = __parseBoolean(output["BlockPublicPolicy"]);
  }
  if (output["RestrictPublicBuckets"] !== undefined) {
    contents.RestrictPublicBuckets = __parseBoolean(output["RestrictPublicBuckets"]);
  }
  return contents;
};
var de_QueueConfiguration = function de_QueueConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output["Queue"] !== undefined) {
    contents.QueueArn = __expectString(output["Queue"]);
  }
  if (output.Event === "") {
    contents.Events = [];
  } else if (output["Event"] !== undefined) {
    contents.Events = de_EventList(__getArrayIfSingleItem(output["Event"]), context);
  }
  if (output["Filter"] !== undefined) {
    contents.Filter = de_NotificationConfigurationFilter(output["Filter"], context);
  }
  return contents;
};
var de_QueueConfigurationList = function de_QueueConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_QueueConfiguration(entry, context);
  });
};
var de_Redirect = function de_Redirect(output, context) {
  var contents = {};
  if (output["HostName"] !== undefined) {
    contents.HostName = __expectString(output["HostName"]);
  }
  if (output["HttpRedirectCode"] !== undefined) {
    contents.HttpRedirectCode = __expectString(output["HttpRedirectCode"]);
  }
  if (output["Protocol"] !== undefined) {
    contents.Protocol = __expectString(output["Protocol"]);
  }
  if (output["ReplaceKeyPrefixWith"] !== undefined) {
    contents.ReplaceKeyPrefixWith = __expectString(output["ReplaceKeyPrefixWith"]);
  }
  if (output["ReplaceKeyWith"] !== undefined) {
    contents.ReplaceKeyWith = __expectString(output["ReplaceKeyWith"]);
  }
  return contents;
};
var de_RedirectAllRequestsTo = function de_RedirectAllRequestsTo(output, context) {
  var contents = {};
  if (output["HostName"] !== undefined) {
    contents.HostName = __expectString(output["HostName"]);
  }
  if (output["Protocol"] !== undefined) {
    contents.Protocol = __expectString(output["Protocol"]);
  }
  return contents;
};
var de_ReplicaModifications = function de_ReplicaModifications(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  return contents;
};
var de_ReplicationConfiguration = function de_ReplicationConfiguration(output, context) {
  var contents = {};
  if (output["Role"] !== undefined) {
    contents.Role = __expectString(output["Role"]);
  }
  if (output.Rule === "") {
    contents.Rules = [];
  } else if (output["Rule"] !== undefined) {
    contents.Rules = de_ReplicationRules(__getArrayIfSingleItem(output["Rule"]), context);
  }
  return contents;
};
var de_ReplicationRule = function de_ReplicationRule(output, context) {
  var contents = {};
  if (output["ID"] !== undefined) {
    contents.ID = __expectString(output["ID"]);
  }
  if (output["Priority"] !== undefined) {
    contents.Priority = __strictParseInt32(output["Priority"]);
  }
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Filter === "") {} else if (output["Filter"] !== undefined) {
    contents.Filter = de_ReplicationRuleFilter(__expectUnion(output["Filter"]), context);
  }
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  if (output["SourceSelectionCriteria"] !== undefined) {
    contents.SourceSelectionCriteria = de_SourceSelectionCriteria(output["SourceSelectionCriteria"], context);
  }
  if (output["ExistingObjectReplication"] !== undefined) {
    contents.ExistingObjectReplication = de_ExistingObjectReplication(output["ExistingObjectReplication"], context);
  }
  if (output["Destination"] !== undefined) {
    contents.Destination = de_Destination(output["Destination"], context);
  }
  if (output["DeleteMarkerReplication"] !== undefined) {
    contents.DeleteMarkerReplication = de_DeleteMarkerReplication(output["DeleteMarkerReplication"], context);
  }
  return contents;
};
var de_ReplicationRuleAndOperator = function de_ReplicationRuleAndOperator(output, context) {
  var contents = {};
  if (output["Prefix"] !== undefined) {
    contents.Prefix = __expectString(output["Prefix"]);
  }
  if (output.Tag === "") {
    contents.Tags = [];
  } else if (output["Tag"] !== undefined) {
    contents.Tags = de_TagSet(__getArrayIfSingleItem(output["Tag"]), context);
  }
  return contents;
};
var de_ReplicationRuleFilter = function de_ReplicationRuleFilter(output, context) {
  if (output["Prefix"] !== undefined) {
    return {
      Prefix: __expectString(output["Prefix"])
    };
  }
  if (output["Tag"] !== undefined) {
    return {
      Tag: de_Tag(output["Tag"], context)
    };
  }
  if (output["And"] !== undefined) {
    return {
      And: de_ReplicationRuleAndOperator(output["And"], context)
    };
  }
  return {
    $unknown: Object.entries(output)[0]
  };
};
var de_ReplicationRules = function de_ReplicationRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_ReplicationRule(entry, context);
  });
};
var de_ReplicationTime = function de_ReplicationTime(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  if (output["Time"] !== undefined) {
    contents.Time = de_ReplicationTimeValue(output["Time"], context);
  }
  return contents;
};
var de_ReplicationTimeValue = function de_ReplicationTimeValue(output, context) {
  var contents = {};
  if (output["Minutes"] !== undefined) {
    contents.Minutes = __strictParseInt32(output["Minutes"]);
  }
  return contents;
};
var de_RestoreStatus = function de_RestoreStatus(output, context) {
  var contents = {};
  if (output["IsRestoreInProgress"] !== undefined) {
    contents.IsRestoreInProgress = __parseBoolean(output["IsRestoreInProgress"]);
  }
  if (output["RestoreExpiryDate"] !== undefined) {
    contents.RestoreExpiryDate = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["RestoreExpiryDate"]));
  }
  return contents;
};
var de_RoutingRule = function de_RoutingRule(output, context) {
  var contents = {};
  if (output["Condition"] !== undefined) {
    contents.Condition = de_Condition(output["Condition"], context);
  }
  if (output["Redirect"] !== undefined) {
    contents.Redirect = de_Redirect(output["Redirect"], context);
  }
  return contents;
};
var de_RoutingRules = function de_RoutingRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_RoutingRule(entry, context);
  });
};
var de_S3KeyFilter = function de_S3KeyFilter(output, context) {
  var contents = {};
  if (output.FilterRule === "") {
    contents.FilterRules = [];
  } else if (output["FilterRule"] !== undefined) {
    contents.FilterRules = de_FilterRuleList(__getArrayIfSingleItem(output["FilterRule"]), context);
  }
  return contents;
};
var de_ServerSideEncryptionByDefault = function de_ServerSideEncryptionByDefault(output, context) {
  var contents = {};
  if (output["SSEAlgorithm"] !== undefined) {
    contents.SSEAlgorithm = __expectString(output["SSEAlgorithm"]);
  }
  if (output["KMSMasterKeyID"] !== undefined) {
    contents.KMSMasterKeyID = __expectString(output["KMSMasterKeyID"]);
  }
  return contents;
};
var de_ServerSideEncryptionConfiguration = function de_ServerSideEncryptionConfiguration(output, context) {
  var contents = {};
  if (output.Rule === "") {
    contents.Rules = [];
  } else if (output["Rule"] !== undefined) {
    contents.Rules = de_ServerSideEncryptionRules(__getArrayIfSingleItem(output["Rule"]), context);
  }
  return contents;
};
var de_ServerSideEncryptionRule = function de_ServerSideEncryptionRule(output, context) {
  var contents = {};
  if (output["ApplyServerSideEncryptionByDefault"] !== undefined) {
    contents.ApplyServerSideEncryptionByDefault = de_ServerSideEncryptionByDefault(output["ApplyServerSideEncryptionByDefault"], context);
  }
  if (output["BucketKeyEnabled"] !== undefined) {
    contents.BucketKeyEnabled = __parseBoolean(output["BucketKeyEnabled"]);
  }
  return contents;
};
var de_ServerSideEncryptionRules = function de_ServerSideEncryptionRules(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_ServerSideEncryptionRule(entry, context);
  });
};
var de_SourceSelectionCriteria = function de_SourceSelectionCriteria(output, context) {
  var contents = {};
  if (output["SseKmsEncryptedObjects"] !== undefined) {
    contents.SseKmsEncryptedObjects = de_SseKmsEncryptedObjects(output["SseKmsEncryptedObjects"], context);
  }
  if (output["ReplicaModifications"] !== undefined) {
    contents.ReplicaModifications = de_ReplicaModifications(output["ReplicaModifications"], context);
  }
  return contents;
};
var de_SSEKMS = function de_SSEKMS(output, context) {
  var contents = {};
  if (output["KeyId"] !== undefined) {
    contents.KeyId = __expectString(output["KeyId"]);
  }
  return contents;
};
var de_SseKmsEncryptedObjects = function de_SseKmsEncryptedObjects(output, context) {
  var contents = {};
  if (output["Status"] !== undefined) {
    contents.Status = __expectString(output["Status"]);
  }
  return contents;
};
var de_SSES3 = function de_SSES3(output, context) {
  var contents = {};
  return contents;
};
var de_Stats = function de_Stats(output, context) {
  var contents = {};
  if (output["BytesScanned"] !== undefined) {
    contents.BytesScanned = __strictParseLong(output["BytesScanned"]);
  }
  if (output["BytesProcessed"] !== undefined) {
    contents.BytesProcessed = __strictParseLong(output["BytesProcessed"]);
  }
  if (output["BytesReturned"] !== undefined) {
    contents.BytesReturned = __strictParseLong(output["BytesReturned"]);
  }
  return contents;
};
var de_StorageClassAnalysis = function de_StorageClassAnalysis(output, context) {
  var contents = {};
  if (output["DataExport"] !== undefined) {
    contents.DataExport = de_StorageClassAnalysisDataExport(output["DataExport"], context);
  }
  return contents;
};
var de_StorageClassAnalysisDataExport = function de_StorageClassAnalysisDataExport(output, context) {
  var contents = {};
  if (output["OutputSchemaVersion"] !== undefined) {
    contents.OutputSchemaVersion = __expectString(output["OutputSchemaVersion"]);
  }
  if (output["Destination"] !== undefined) {
    contents.Destination = de_AnalyticsExportDestination(output["Destination"], context);
  }
  return contents;
};
var de_Tag = function de_Tag(output, context) {
  var contents = {};
  if (output["Key"] !== undefined) {
    contents.Key = __expectString(output["Key"]);
  }
  if (output["Value"] !== undefined) {
    contents.Value = __expectString(output["Value"]);
  }
  return contents;
};
var de_TagSet = function de_TagSet(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Tag(entry, context);
  });
};
var de_TargetGrant = function de_TargetGrant(output, context) {
  var contents = {};
  if (output["Grantee"] !== undefined) {
    contents.Grantee = de_Grantee(output["Grantee"], context);
  }
  if (output["Permission"] !== undefined) {
    contents.Permission = __expectString(output["Permission"]);
  }
  return contents;
};
var de_TargetGrants = function de_TargetGrants(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_TargetGrant(entry, context);
  });
};
var de_Tiering = function de_Tiering(output, context) {
  var contents = {};
  if (output["Days"] !== undefined) {
    contents.Days = __strictParseInt32(output["Days"]);
  }
  if (output["AccessTier"] !== undefined) {
    contents.AccessTier = __expectString(output["AccessTier"]);
  }
  return contents;
};
var de_TieringList = function de_TieringList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Tiering(entry, context);
  });
};
var de_TopicConfiguration = function de_TopicConfiguration(output, context) {
  var contents = {};
  if (output["Id"] !== undefined) {
    contents.Id = __expectString(output["Id"]);
  }
  if (output["Topic"] !== undefined) {
    contents.TopicArn = __expectString(output["Topic"]);
  }
  if (output.Event === "") {
    contents.Events = [];
  } else if (output["Event"] !== undefined) {
    contents.Events = de_EventList(__getArrayIfSingleItem(output["Event"]), context);
  }
  if (output["Filter"] !== undefined) {
    contents.Filter = de_NotificationConfigurationFilter(output["Filter"], context);
  }
  return contents;
};
var de_TopicConfigurationList = function de_TopicConfigurationList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_TopicConfiguration(entry, context);
  });
};
var de_Transition = function de_Transition(output, context) {
  var contents = {};
  if (output["Date"] !== undefined) {
    contents.Date = __expectNonNull(__parseRfc3339DateTimeWithOffset(output["Date"]));
  }
  if (output["Days"] !== undefined) {
    contents.Days = __strictParseInt32(output["Days"]);
  }
  if (output["StorageClass"] !== undefined) {
    contents.StorageClass = __expectString(output["StorageClass"]);
  }
  return contents;
};
var de_TransitionList = function de_TransitionList(output, context) {
  return (output || []).filter(function (e) {
    return e != null;
  }).map(function (entry) {
    return de_Transition(entry, context);
  });
};
var Aws_restXml_deserializeMetadata = function deserializeMetadata(output) {
  var _ref295, _output$headers$xAmz;
  return {
    httpStatusCode: output.statusCode,
    requestId: (_ref295 = (_output$headers$xAmz = output.headers["x-amzn-requestid"]) !== null && _output$headers$xAmz !== void 0 ? _output$headers$xAmz : output.headers["x-amzn-request-id"]) !== null && _ref295 !== void 0 ? _ref295 : output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"]
  };
};
var Aws_restXml_collectBodyString = function collectBodyString(streamBody, context) {
  return collect_stream_body_collectBody(streamBody, context).then(function (body) {
    return context.utf8Encoder(body);
  });
};
var Aws_restXml_isSerializableHeaderValue = function isSerializableHeaderValue(value) {
  return value !== undefined && value !== null && value !== "" && (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);
};
var Aws_restXml_parseBody = function parseBody(streamBody, context) {
  return Aws_restXml_collectBodyString(streamBody, context).then(function (encoded) {
    if (encoded.length) {
      var parser = new fxp.XMLParser({
        attributeNamePrefix: "",
        htmlEntities: true,
        ignoreAttributes: false,
        ignoreDeclaration: true,
        parseTagValue: false,
        trimValues: false,
        tagValueProcessor: function tagValueProcessor(_, val) {
          return val.trim() === "" && val.includes("\n") ? "" : undefined;
        }
      });
      parser.addEntity("#xD", "\r");
      parser.addEntity("#10", "\n");
      var parsedObj = parser.parse(encoded);
      var textNodeName = "#text";
      var key = Object.keys(parsedObj)[0];
      var parsedObjToReturn = parsedObj[key];
      if (parsedObjToReturn[textNodeName]) {
        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];
        delete parsedObjToReturn[textNodeName];
      }
      return getValueFromTextNode(parsedObjToReturn);
    }
    return {};
  });
};
var Aws_restXml_parseErrorBody = /*#__PURE__*/function () {
  var _ref296 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee295(errorBody, context) {
    var value, _value$Error$message;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee295$(_context295) {
      while (1) switch (_context295.prev = _context295.next) {
        case 0:
          _context295.next = 2;
          return Aws_restXml_parseBody(errorBody, context);
        case 2:
          value = _context295.sent;
          if (value.Error) {
            value.Error.message = (_value$Error$message = value.Error.message) !== null && _value$Error$message !== void 0 ? _value$Error$message : value.Error.Message;
          }
          return _context295.abrupt("return", value);
        case 5:
        case "end":
          return _context295.stop();
      }
    }, _callee295);
  }));
  return function parseErrorBody(_x588, _x589) {
    return _ref296.apply(this, arguments);
  };
}();
var loadRestXmlErrorCode = function loadRestXmlErrorCode(output, data) {
  if ((data === null || data === void 0 ? void 0 : data.Code) !== undefined) {
    return data.Code;
  }
  if (output.statusCode == 404) {
    return "NotFound";
  }
};
;// ./node_modules/.pnpm/@aws-sdk+client-s3@3.395.0/node_modules/@aws-sdk/client-s3/dist-es/commands/PutObjectCommand.js













var PutObjectCommand = /*#__PURE__*/function (_$Command) {
  function PutObjectCommand(input) {
    var _this;
    classCallCheck_classCallCheck(this, PutObjectCommand);
    _this = callSuper_callSuper(this, PutObjectCommand);
    _this.input = input;
    return _this;
  }
  inherits_inherits(PutObjectCommand, _$Command);
  return createClass_createClass(PutObjectCommand, [{
    key: "resolveMiddleware",
    value: function resolveMiddleware(clientStack, configuration, options) {
      this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
      this.middlewareStack.use(getEndpointPlugin(configuration, PutObjectCommand.getEndpointParameterInstructions()));
      this.middlewareStack.use(getCheckContentLengthHeaderPlugin(configuration));
      this.middlewareStack.use(getSsecPlugin(configuration));
      this.middlewareStack.use(getFlexibleChecksumsPlugin(configuration, {
        input: this.input,
        requestAlgorithmMember: "ChecksumAlgorithm",
        requestChecksumRequired: false
      }));
      var stack = clientStack.concat(this.middlewareStack);
      var logger = configuration.logger;
      var clientName = "S3Client";
      var commandName = "PutObjectCommand";
      var handlerExecutionContext = {
        logger: logger,
        clientName: clientName,
        commandName: commandName,
        inputFilterSensitiveLog: PutObjectRequestFilterSensitiveLog,
        outputFilterSensitiveLog: PutObjectOutputFilterSensitiveLog
      };
      var requestHandler = configuration.requestHandler;
      return stack.resolve(function (request) {
        return requestHandler.handle(request.request, options || {});
      }, handlerExecutionContext);
    }
  }, {
    key: "serialize",
    value: function serialize(input, context) {
      return se_PutObjectCommand(input, context);
    }
  }, {
    key: "deserialize",
    value: function deserialize(output, context) {
      return de_PutObjectCommand(output, context);
    }
  }], [{
    key: "getEndpointParameterInstructions",
    value: function getEndpointParameterInstructions() {
      return {
        Bucket: {
          type: "contextParams",
          name: "Bucket"
        },
        ForcePathStyle: {
          type: "clientContextParams",
          name: "forcePathStyle"
        },
        UseArnRegion: {
          type: "clientContextParams",
          name: "useArnRegion"
        },
        DisableMultiRegionAccessPoints: {
          type: "clientContextParams",
          name: "disableMultiregionAccessPoints"
        },
        Accelerate: {
          type: "clientContextParams",
          name: "useAccelerateEndpoint"
        },
        UseGlobalEndpoint: {
          type: "builtInParams",
          name: "useGlobalEndpoint"
        },
        UseFIPS: {
          type: "builtInParams",
          name: "useFipsEndpoint"
        },
        Endpoint: {
          type: "builtInParams",
          name: "endpoint"
        },
        Region: {
          type: "builtInParams",
          name: "region"
        },
        UseDualStack: {
          type: "builtInParams",
          name: "useDualstackEndpoint"
        }
      };
    }
  }]);
}(Command);
;// ./node_modules/.pnpm/@aws-sdk+util-format-url@3.391.0/node_modules/@aws-sdk/util-format-url/dist-es/index.js

function formatUrl(request) {
  var port = request.port,
    query = request.query;
  var protocol = request.protocol,
    path = request.path,
    hostname = request.hostname;
  if (protocol && protocol.slice(-1) !== ":") {
    protocol += ":";
  }
  if (port) {
    hostname += ":".concat(port);
  }
  if (path && path.charAt(0) !== "/") {
    path = "/".concat(path);
  }
  var queryString = query ? dist_es_buildQueryString(query) : "";
  if (queryString && queryString[0] !== "?") {
    queryString = "?".concat(queryString);
  }
  var auth = "";
  if (request.username != null || request.password != null) {
    var _request$username, _request$password;
    var username = (_request$username = request.username) !== null && _request$username !== void 0 ? _request$username : "";
    var password = (_request$password = request.password) !== null && _request$password !== void 0 ? _request$password : "";
    auth = "".concat(username, ":").concat(password, "@");
  }
  var fragment = "";
  if (request.fragment) {
    fragment = "#".concat(request.fragment);
  }
  return "".concat(protocol, "//").concat(auth).concat(hostname).concat(path).concat(queryString).concat(fragment);
}
;// ./node_modules/.pnpm/@aws-sdk+s3-request-presigner@3.395.0/node_modules/@aws-sdk/s3-request-presigner/dist-es/constants.js
var constants_UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var constants_SHA256_HEADER = "X-Amz-Content-Sha256";
var constants_ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var constants_CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var constants_AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var constants_SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var constants_EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var constants_HOST_HEADER = "host";
var constants_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
;// ./node_modules/.pnpm/@aws-sdk+s3-request-presigner@3.395.0/node_modules/@aws-sdk/s3-request-presigner/dist-es/presigner.js




var presigner_excluded = ["unsignableHeaders", "unhoistableHeaders"];


var S3RequestPresigner = /*#__PURE__*/function () {
  function S3RequestPresigner(options) {
    classCallCheck_classCallCheck(this, S3RequestPresigner);
    var resolvedOptions = _objectSpread2({
      service: options.signingName || options.service || "s3",
      uriEscapePath: options.uriEscapePath || false,
      applyChecksum: options.applyChecksum || false
    }, options);
    this.signer = new SignatureV4MultiRegion(resolvedOptions);
  }
  return createClass_createClass(S3RequestPresigner, [{
    key: "presign",
    value: function presign(requestToSign) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$unsignableHeader = _ref.unsignableHeaders,
        unsignableHeaders = _ref$unsignableHeader === void 0 ? new Set() : _ref$unsignableHeader,
        _ref$unhoistableHeade = _ref.unhoistableHeaders,
        unhoistableHeaders = _ref$unhoistableHeade === void 0 ? new Set() : _ref$unhoistableHeade,
        options = objectWithoutProperties_objectWithoutProperties(_ref, presigner_excluded);
      unsignableHeaders.add("content-type");
      Object.keys(requestToSign.headers).map(function (header) {
        return header.toLowerCase();
      }).filter(function (header) {
        return header.startsWith("x-amz-server-side-encryption");
      }).forEach(function (header) {
        unhoistableHeaders.add(header);
      });
      requestToSign.headers[constants_SHA256_HEADER] = constants_UNSIGNED_PAYLOAD;
      var currentHostHeader = requestToSign.headers.host;
      var port = requestToSign.port;
      var expectedHostHeader = "".concat(requestToSign.hostname).concat(requestToSign.port != null ? ":" + port : "");
      if (!currentHostHeader || currentHostHeader === requestToSign.hostname && requestToSign.port != null) {
        requestToSign.headers.host = expectedHostHeader;
      }
      return this.signer.presign(requestToSign, _objectSpread2({
        expiresIn: 900,
        unsignableHeaders: unsignableHeaders,
        unhoistableHeaders: unhoistableHeaders
      }, options));
    }
  }]);
}();
;// ./node_modules/.pnpm/@aws-sdk+s3-request-presigner@3.395.0/node_modules/@aws-sdk/s3-request-presigner/dist-es/getSignedUrl.js







var getSignedUrl = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee3(client, command) {
    var options,
      s3Presigner,
      _endpointV2$propertie,
      endpointV2,
      authScheme,
      presignInterceptMiddleware,
      middlewareName,
      clientStack,
      handler,
      _yield$handler,
      output,
      presigned,
      _args3 = arguments;
    return regeneratorRuntime_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};
          if (!(typeof client.config.endpointProvider === "function")) {
            _context3.next = 9;
            break;
          }
          _context3.next = 4;
          return getEndpointFromInstructions(command.input, command.constructor, client.config);
        case 4:
          endpointV2 = _context3.sent;
          authScheme = (_endpointV2$propertie = endpointV2.properties) === null || _endpointV2$propertie === void 0 || (_endpointV2$propertie = _endpointV2$propertie.authSchemes) === null || _endpointV2$propertie === void 0 ? void 0 : _endpointV2$propertie[0];
          s3Presigner = new S3RequestPresigner(_objectSpread2(_objectSpread2({}, client.config), {}, {
            signingName: authScheme === null || authScheme === void 0 ? void 0 : authScheme.signingName,
            region: function () {
              var _region = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee() {
                return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) switch (_context.prev = _context.next) {
                    case 0:
                      return _context.abrupt("return", authScheme === null || authScheme === void 0 ? void 0 : authScheme.signingRegion);
                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }, _callee);
              }));
              function region() {
                return _region.apply(this, arguments);
              }
              return region;
            }()
          }));
          _context3.next = 10;
          break;
        case 9:
          s3Presigner = new S3RequestPresigner(client.config);
        case 10:
          presignInterceptMiddleware = function presignInterceptMiddleware(next, context) {
            return /*#__PURE__*/function () {
              var _ref2 = asyncToGenerator_asyncToGenerator( /*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(args) {
                var _options$signingRegio, _options$signingServi;
                var request, presigned;
                return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      request = args.request;
                      if (httpRequest_HttpRequest.isInstance(request)) {
                        _context2.next = 3;
                        break;
                      }
                      throw new Error("Request to be presigned is not an valid HTTP request.");
                    case 3:
                      delete request.headers["amz-sdk-invocation-id"];
                      delete request.headers["amz-sdk-request"];
                      delete request.headers["x-amz-user-agent"];
                      _context2.next = 8;
                      return s3Presigner.presign(request, _objectSpread2(_objectSpread2({}, options), {}, {
                        signingRegion: (_options$signingRegio = options.signingRegion) !== null && _options$signingRegio !== void 0 ? _options$signingRegio : context["signing_region"],
                        signingService: (_options$signingServi = options.signingService) !== null && _options$signingServi !== void 0 ? _options$signingServi : context["signing_service"]
                      }));
                    case 8:
                      presigned = _context2.sent;
                      return _context2.abrupt("return", {
                        response: {},
                        output: {
                          $metadata: {
                            httpStatusCode: 200
                          },
                          presigned: presigned
                        }
                      });
                    case 10:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2);
              }));
              return function (_x3) {
                return _ref2.apply(this, arguments);
              };
            }();
          };
          middlewareName = "presignInterceptMiddleware";
          clientStack = client.middlewareStack.clone();
          clientStack.addRelativeTo(presignInterceptMiddleware, {
            name: middlewareName,
            relation: "before",
            toMiddleware: "awsAuthMiddleware",
            override: true
          });
          handler = command.resolveMiddleware(clientStack, client.config, {});
          _context3.next = 17;
          return handler({
            input: command.input
          });
        case 17:
          _yield$handler = _context3.sent;
          output = _yield$handler.output;
          presigned = output.presigned;
          return _context3.abrupt("return", formatUrl(presigned));
        case 21:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return function getSignedUrl(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
;// ./node_modules/.pnpm/@aws-sdk+s3-request-presigner@3.395.0/node_modules/@aws-sdk/s3-request-presigner/dist-es/index.js


// EXTERNAL MODULE: ./node_modules/.pnpm/mime@3.0.0/node_modules/mime/index.js
var mime = __webpack_require__(7595);
var mime_default = /*#__PURE__*/__webpack_require__.n(mime);
// EXTERNAL MODULE: ./node_modules/.pnpm/md5@2.3.0/node_modules/md5/md5.js
var md5 = __webpack_require__(5151);
var md5_default = /*#__PURE__*/__webpack_require__.n(md5);
;// ./src/index.ts
var config={accountId:(0,core.getInput)("r2-account-id",{required:true}),accessKeyId:(0,core.getInput)("r2-access-key-id",{required:true}),secretAccessKey:(0,core.getInput)("r2-secret-access-key",{required:true}),bucket:(0,core.getInput)("r2-bucket",{required:true}),sourceDir:(0,core.getInput)("source-dir",{required:true}),destinationDir:(0,core.getInput)("destination-dir"),outputFileUrl:(0,core.getInput)("output-file-url")==='true'};var S3=new S3Client({region:"auto",endpoint:"https://".concat(config.accountId,".r2.cloudflarestorage.com"),credentials:{accessKeyId:config.accessKeyId,secretAccessKey:config.secretAccessKey}});var getFileList=function getFileList(dir){var files=[];var items=external_fs_.readdirSync(dir,{withFileTypes:true});var _iterator=createForOfIteratorHelper_createForOfIteratorHelper(items),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;var isDir=item.isDirectory();var absolutePath=external_path_default().join(dir,item.name);if(isDir){files=[].concat(_toConsumableArray(files),_toConsumableArray(getFileList(absolutePath)));}else{files.push(absolutePath);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return files;};var run=/*#__PURE__*/function(){var _ref=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee2(config){var map,urls,files,_iterator2,_step2,_loop;return regeneratorRuntime_regeneratorRuntime().wrap(function _callee2$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:map=new Map();urls={};files=getFileList(config.sourceDir);_iterator2=createForOfIteratorHelper_createForOfIteratorHelper(files);_context3.prev=4;_loop=/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _loop(){var file,fileStream,fileName,fileKey,mimeType,uploadParams,cmd,digest,data,fileUrl,error;return regeneratorRuntime_regeneratorRuntime().wrap(function _loop$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:file=_step2.value;console.log(file);fileStream=external_fs_.readFileSync(file);console.log(config.sourceDir);console.log(config.destinationDir);//const fileName = file.replace(/^.*[\\\/]/, "");
fileName=file.replace(config.sourceDir,"");fileKey=external_path_default().join(config.destinationDir!==""?config.destinationDir:config.sourceDir,fileName);// fix windows path issue
fileKey=fileKey.replace(/\\/g,'/');if(!fileKey.includes('.gitkeep')){_context2.next=10;break;}return _context2.abrupt("return",1);case 10:console.log(fileKey);mimeType=mime_default().getType(file);uploadParams={Bucket:config.bucket,Key:fileKey,Body:fileStream,ContentLength:external_fs_.statSync(file).size,ContentType:mimeType!==null&&mimeType!==void 0?mimeType:'application/octet-stream'};cmd=new PutObjectCommand(uploadParams);digest=md5_default()(fileStream);cmd.middlewareStack.add(function(next){return/*#__PURE__*/function(){var _ref2=asyncToGenerator_asyncToGenerator(/*#__PURE__*/regeneratorRuntime_regeneratorRuntime().mark(function _callee(args){return regeneratorRuntime_regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:args.request.headers['if-none-match']="\"".concat(digest,"\"");_context.next=3;return next(args);case 3:return _context.abrupt("return",_context.sent);case 4:case"end":return _context.stop();}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}();},{step:'build',name:'addETag'});_context2.prev=16;_context2.next=19;return S3.send(cmd);case 19:data=_context2.sent;console.log("R2 Success - ".concat(file));map.set(file,data);_context2.next=24;return getSignedUrl(S3,cmd);case 24:fileUrl=_context2.sent;urls[file]=fileUrl;_context2.next=34;break;case 28:_context2.prev=28;_context2.t0=_context2["catch"](16);error=_context2.t0;if(!error.hasOwnProperty("$metadata")){_context2.next=34;break;}if(!(error.$metadata.httpStatusCode!==412)){_context2.next=34;break;}throw error;case 34:case"end":return _context2.stop();}},_loop,null,[[16,28]]);});_iterator2.s();case 7:if((_step2=_iterator2.n()).done){_context3.next=13;break;}return _context3.delegateYield(_loop(),"t0",9);case 9:if(!_context3.t0){_context3.next=11;break;}return _context3.abrupt("continue",11);case 11:_context3.next=7;break;case 13:_context3.next=18;break;case 15:_context3.prev=15;_context3.t1=_context3["catch"](4);_iterator2.e(_context3.t1);case 18:_context3.prev=18;_iterator2.f();return _context3.finish(18);case 21:if(config.outputFileUrl)(0,core.setOutput)('file-urls',urls);return _context3.abrupt("return",map);case 23:case"end":return _context3.stop();}},_callee2,null,[[4,15,18,21]]);}));return function run(_x){return _ref.apply(this,arguments);};}();run(config).then(function(result){return (0,core.setOutput)('result','success');})["catch"](function(err){if(err.hasOwnProperty('$metadata')){console.error("R2 Error - ".concat(err.message));}else{console.error('Error',err);}(0,core.setOutput)('result','failure');(0,core.setFailed)(err.message);});

//# sourceMappingURL=index.js.map